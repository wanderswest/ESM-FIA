NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")
NULL.ci
NULL.ci[1]
errorlow<- NULL.ci[[1]]
errorlow
errorlow<- NULL.ci[[2]]
errorlow
str(NULL.ci)
errorlow<- NULL.ci$normal
errorlow
errorlow<- NULL.ci$normal[2]
errorlow
errorlow<- NULL.ci$normal[3]
errorlow
#ratio of mean conditions with Null weighted spatially by Condition#
meanFunc2 <- function(x,i){(mean(x$variCOND[i], na.rm=TRUE)/mean((x$variNULL[i]), na.rm=TRUE))} #
#meanFunc3 <- function(x,i){(mean(x$deadcarbon5sumYR[i], na.rm=TRUE)/mean((x$mortality2[i]), na.rm=TRUE))} #
#
F2 <- subset(S4swPREC) #
#
#Convert variables to standard names and metric units#
F2$DIAmean <- (F2$DIAendmean* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <- (F2$DIAbeginmean *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$TPAsum <- (F2$endsumTPA /0.404686)			#number of trees per hectare by plot at resurvey#
F2$PREV_TPAsum <- (F2$startsumTPA /0.404686)	#number of trees per hectare by plot at initial survey (cm)#
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
#set grid cell size#
a <- b <- 2  #2=0.5degrees, 0.5=2degrees#
	F2$iLAT <- ((ceiling(F2$LAT*a))/a)-0.5 #+0.25  #round down to integer then add .25 ; switched /* removed ).25 addition#
	F2$iLON <- ((floor(F2$LON*b))/b)+0.5 #-0.25  #round down to integer then subtract .25; switched /*  ).25 addition#
	F2$LATLONYR <- (F2$iLAT*10000000000000) +(F2$iLON*(-100000000)) +F2$INVYR#
	F2$LATLON <- as.factor(F2$iLAT*100000000+ F2$iLON*-1000) #LATLON identifyier#
#
#Find climate variable mean and range for each grid cell#
F2$TEMPminLL <- ave(F2$temp5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$TEMPgrowminLL <- ave(F2$temp5grow, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$TEMP5chg <- F2$temp5-F2$TEMPminLL#
F2$TEMP5growchg <- F2$temp5grow-F2$TEMPgrowminLL#
#
F2$PRECminLL <- ave(F2$PREC5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$PRECgrowminLL <- ave(F2$PREC5grow, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$PREC5chg <- F2$PREC5-F2$PRECminLL#
F2$PREC5growchg <- F2$PREC5grow-F2$PRECgrowminLL#
#
F2$SWdroughtLL <- ave(F2$SWdrought5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$SWpluvialLL <- ave(F2$SWpluvial5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$SWdrought5chg <- F2$SWdrought5-F2$SWdroughtLL#
F2$SWpluvial5chg <- F2$SWpluvial5-F2$SWpluvialLL#
F2$nsampTOT <- ave(F2$DIAmean>0,F2$LATLON, FUN=function(x) sum(x, na.rm=TRUE))#
#
F2$Drysummer <- ifelse(F2$SWdrought5chg <= quantile(F2$SWdrought5chg, 0.17, na.rm=T), 1,0)#
F2$Wetsummer <- ifelse(F2$SWpluvial5chg >= quantile(F2$SWpluvial5chg, 0.83, na.rm=T), 1,0)#
F2$Dryperiod <- ifelse(F2$PREC5growchg <= quantile(F2$PREC5growchg, 0.17, na.rm=T), 1,0)#
F2$Wetperiod <- ifelse(F2$PREC5growchg >= quantile(F2$PREC5growchg, 0.83, na.rm=T), 1,0)#
F2$SPCDdiversity2 <- F2$SPCDdiversity-F2$PREV_SPCDdiversity#
#
#set disturbance conditions to binary#
#F2$fire <- ifelse(F2$fire>0, 1,0) # F2$carbon1sum-F2$PREVcarbon1sum,0) #ifelse(F2$fire>0, 1,0)#
#F2$insect <- ifelse(F2$insect>0, 1,0) # F2$carbon1sum-F2$PREVcarbon1sum,0) # 1,0)#
#F2$disease <- ifelse(F2$disease>0, 1,0) # F2$carbon1sum-F2$PREVcarbon1sum,0) # 1,0)#
#F2$animal <- ifelse(F2$animal>0,  1,0) #F2$carbon1sum-F2$PREVcarbon1sum,0) # 1,0)#
#F2$weather <- ifelse(F2$weather>0,  1,0) #F2$carbon1sum-F2$PREVcarbon1sum,0) # 1,0)#
#F2$SPCDdiversity2 <- ifelse(F2$SPCDdiversity2>0, 1,0)#
#
vari <- c("SWdrought5chg",  "SWpluvial5chg", "PREC5growchg", "TEMP5growchg") #
vari1 <- subset(F2, select=c(SWdrought5chg, SWpluvial5chg, PREC5growchg, TEMP5growchg)) #
vari2 <- c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2")#
#
###ADJUST TOP/bottom QUANTILE HERE#
quantile1<-0.17 #0.035 #0.17#
#
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){#
	NullVarRatiod <- (mean(x[i])*100)#
	} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow<- NULL.ci$normal[2]#
errorhigh<- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- (CondVarRatiod-NullVarRatiod)*100#
sig <- ifelse(rateRatiod > errorhigh | rateRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,1), round(NullVarRatiod,1), round(rateRatiod,1), errorlow, errorhigh, sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print(na.omit(F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
##################################################################################################
##END MAIN FIGURES and climate conditions supplimentary figures
errorhigh <- NULL.ci$normal[3]
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,1), round(NullVarRatiod,1), round(rateRatiod,1), errorlow, errorhigh, sig) #, round(Vgrow2,2), round(Vgrow,2), error2)
errorlow
errorhigh
NULL.ci
ratioFunc <- function(x, i){mean(x[i])*100}
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")
NULL.ci
errorhigh <- NULL.ci$normal[3]
errorhigh
#ratio of mean conditions with Null weighted spatially by Condition#
meanFunc2 <- function(x,i){(mean(x$variCOND[i], na.rm=TRUE)/mean((x$variNULL[i]), na.rm=TRUE))} #
#meanFunc3 <- function(x,i){(mean(x$deadcarbon5sumYR[i], na.rm=TRUE)/mean((x$mortality2[i]), na.rm=TRUE))} #
#
F2 <- subset(S4swPREC) #
#
#Convert variables to standard names and metric units#
F2$DIAmean <- (F2$DIAendmean* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <- (F2$DIAbeginmean *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$TPAsum <- (F2$endsumTPA /0.404686)			#number of trees per hectare by plot at resurvey#
F2$PREV_TPAsum <- (F2$startsumTPA /0.404686)	#number of trees per hectare by plot at initial survey (cm)#
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
#set grid cell size#
a <- b <- 2  #2=0.5degrees, 0.5=2degrees#
	F2$iLAT <- ((ceiling(F2$LAT*a))/a)-0.5 #+0.25  #round down to integer then add .25 ; switched /* removed ).25 addition#
	F2$iLON <- ((floor(F2$LON*b))/b)+0.5 #-0.25  #round down to integer then subtract .25; switched /*  ).25 addition#
	F2$LATLONYR <- (F2$iLAT*10000000000000) +(F2$iLON*(-100000000)) +F2$INVYR#
	F2$LATLON <- as.factor(F2$iLAT*100000000+ F2$iLON*-1000) #LATLON identifyier#
#
#Find climate variable mean and range for each grid cell#
F2$TEMPminLL <- ave(F2$temp5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$TEMPgrowminLL <- ave(F2$temp5grow, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$TEMP5chg <- F2$temp5-F2$TEMPminLL#
F2$TEMP5growchg <- F2$temp5grow-F2$TEMPgrowminLL#
#
F2$PRECminLL <- ave(F2$PREC5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$PRECgrowminLL <- ave(F2$PREC5grow, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$PREC5chg <- F2$PREC5-F2$PRECminLL#
F2$PREC5growchg <- F2$PREC5grow-F2$PRECgrowminLL#
#
F2$SWdroughtLL <- ave(F2$SWdrought5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$SWpluvialLL <- ave(F2$SWpluvial5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$SWdrought5chg <- F2$SWdrought5-F2$SWdroughtLL#
F2$SWpluvial5chg <- F2$SWpluvial5-F2$SWpluvialLL#
F2$nsampTOT <- ave(F2$DIAmean>0,F2$LATLON, FUN=function(x) sum(x, na.rm=TRUE))#
#
F2$Drysummer <- ifelse(F2$SWdrought5chg <= quantile(F2$SWdrought5chg, 0.17, na.rm=T), 1,0)#
F2$Wetsummer <- ifelse(F2$SWpluvial5chg >= quantile(F2$SWpluvial5chg, 0.83, na.rm=T), 1,0)#
F2$Dryperiod <- ifelse(F2$PREC5growchg <= quantile(F2$PREC5growchg, 0.17, na.rm=T), 1,0)#
F2$Wetperiod <- ifelse(F2$PREC5growchg >= quantile(F2$PREC5growchg, 0.83, na.rm=T), 1,0)#
F2$SPCDdiversity2 <- F2$SPCDdiversity-F2$PREV_SPCDdiversity#
#
#set disturbance conditions to binary#
#F2$fire <- ifelse(F2$fire>0, 1,0) # F2$carbon1sum-F2$PREVcarbon1sum,0) #ifelse(F2$fire>0, 1,0)#
#F2$insect <- ifelse(F2$insect>0, 1,0) # F2$carbon1sum-F2$PREVcarbon1sum,0) # 1,0)#
#F2$disease <- ifelse(F2$disease>0, 1,0) # F2$carbon1sum-F2$PREVcarbon1sum,0) # 1,0)#
#F2$animal <- ifelse(F2$animal>0,  1,0) #F2$carbon1sum-F2$PREVcarbon1sum,0) # 1,0)#
#F2$weather <- ifelse(F2$weather>0,  1,0) #F2$carbon1sum-F2$PREVcarbon1sum,0) # 1,0)#
#F2$SPCDdiversity2 <- ifelse(F2$SPCDdiversity2>0, 1,0)#
#
vari <- c("SWdrought5chg",  "SWpluvial5chg", "PREC5growchg", "TEMP5growchg") #
vari1 <- subset(F2, select=c(SWdrought5chg, SWpluvial5chg, PREC5growchg, TEMP5growchg)) #
vari2 <- c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2")#
#
###ADJUST TOP/bottom QUANTILE HERE#
quantile1<-0.17 #0.035 #0.17#
#
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])*100} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- (CondVarRatiod-NullVarRatiod)*100#
sig <- ifelse(rateRatiod > errorhigh | rateRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,1), round(NullVarRatiod,1), round(rateRatiod,1), errorlow, errorhigh, sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print(na.omit(F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
##################################################################################################
##END MAIN FIGURES and climate conditions supplimentary figures
v2
v
c
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])*100}
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- (CondVarRatiod-NullVarRatiod)*100#
sig <- ifelse(rateRatiod > errorhigh | rateRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,1), round(NullVarRatiod,1), round(rateRatiod,1), errorlow, errorhigh, sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))
rateRatiod
errorhigh
errorlow
sig <- ifelse((rateRatiod > errorhigh | rateRatiod < errorlow), "***", "")
sig
#ratio of mean conditions with Null weighted spatially by Condition#
meanFunc2 <- function(x,i){(mean(x$variCOND[i], na.rm=TRUE)/mean((x$variNULL[i]), na.rm=TRUE))} #
#meanFunc3 <- function(x,i){(mean(x$deadcarbon5sumYR[i], na.rm=TRUE)/mean((x$mortality2[i]), na.rm=TRUE))} #
#
F2 <- subset(S4swPREC) #
#
#Convert variables to standard names and metric units#
F2$DIAmean <- (F2$DIAendmean* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <- (F2$DIAbeginmean *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$TPAsum <- (F2$endsumTPA /0.404686)			#number of trees per hectare by plot at resurvey#
F2$PREV_TPAsum <- (F2$startsumTPA /0.404686)	#number of trees per hectare by plot at initial survey (cm)#
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
#set grid cell size#
a <- b <- 2  #2=0.5degrees, 0.5=2degrees#
	F2$iLAT <- ((ceiling(F2$LAT*a))/a)-0.5 #+0.25  #round down to integer then add .25 ; switched /* removed ).25 addition#
	F2$iLON <- ((floor(F2$LON*b))/b)+0.5 #-0.25  #round down to integer then subtract .25; switched /*  ).25 addition#
	F2$LATLONYR <- (F2$iLAT*10000000000000) +(F2$iLON*(-100000000)) +F2$INVYR#
	F2$LATLON <- as.factor(F2$iLAT*100000000+ F2$iLON*-1000) #LATLON identifyier#
#
#Find climate variable mean and range for each grid cell#
F2$TEMPminLL <- ave(F2$temp5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$TEMPgrowminLL <- ave(F2$temp5grow, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$TEMP5chg <- F2$temp5-F2$TEMPminLL#
F2$TEMP5growchg <- F2$temp5grow-F2$TEMPgrowminLL#
#
F2$PRECminLL <- ave(F2$PREC5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$PRECgrowminLL <- ave(F2$PREC5grow, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$PREC5chg <- F2$PREC5-F2$PRECminLL#
F2$PREC5growchg <- F2$PREC5grow-F2$PRECgrowminLL#
#
F2$SWdroughtLL <- ave(F2$SWdrought5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$SWpluvialLL <- ave(F2$SWpluvial5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$SWdrought5chg <- F2$SWdrought5-F2$SWdroughtLL#
F2$SWpluvial5chg <- F2$SWpluvial5-F2$SWpluvialLL#
F2$nsampTOT <- ave(F2$DIAmean>0,F2$LATLON, FUN=function(x) sum(x, na.rm=TRUE))#
#
F2$Drysummer <- ifelse(F2$SWdrought5chg <= quantile(F2$SWdrought5chg, 0.17, na.rm=T), 1,0)#
F2$Wetsummer <- ifelse(F2$SWpluvial5chg >= quantile(F2$SWpluvial5chg, 0.83, na.rm=T), 1,0)#
F2$Dryperiod <- ifelse(F2$PREC5growchg <= quantile(F2$PREC5growchg, 0.17, na.rm=T), 1,0)#
F2$Wetperiod <- ifelse(F2$PREC5growchg >= quantile(F2$PREC5growchg, 0.83, na.rm=T), 1,0)#
F2$SPCDdiversity2 <- F2$SPCDdiversity-F2$PREV_SPCDdiversity#
#
#set disturbance conditions to binary#
#F2$fire <- ifelse(F2$fire>0, 1,0) # F2$carbon1sum-F2$PREVcarbon1sum,0) #ifelse(F2$fire>0, 1,0)#
#F2$insect <- ifelse(F2$insect>0, 1,0) # F2$carbon1sum-F2$PREVcarbon1sum,0) # 1,0)#
#F2$disease <- ifelse(F2$disease>0, 1,0) # F2$carbon1sum-F2$PREVcarbon1sum,0) # 1,0)#
#F2$animal <- ifelse(F2$animal>0,  1,0) #F2$carbon1sum-F2$PREVcarbon1sum,0) # 1,0)#
#F2$weather <- ifelse(F2$weather>0,  1,0) #F2$carbon1sum-F2$PREVcarbon1sum,0) # 1,0)#
#F2$SPCDdiversity2 <- ifelse(F2$SPCDdiversity2>0, 1,0)#
#
vari <- c("SWdrought5chg",  "SWpluvial5chg", "PREC5growchg", "TEMP5growchg") #
vari1 <- subset(F2, select=c(SWdrought5chg, SWpluvial5chg, PREC5growchg, TEMP5growchg)) #
vari2 <- c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2")#
#
###ADJUST TOP/bottom QUANTILE HERE#
quantile1<-0.17 #0.035 #0.17#
#
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])*100} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- (CondVarRatiod-NullVarRatiod)*100#
sig <- ifelse((rateRatiod > errorhigh | rateRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,1), round(NullVarRatiod,1), round(rateRatiod,1), errorlow, errorhigh, sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print(na.omit(F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
##################################################################################################
##END MAIN FIGURES and climate conditions supplimentary figures
###ADJUST TOP/bottom QUANTILE HERE#
quantile1<-0.17 #0.035 #0.17#
#
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])*100} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])*100# #
CondVarRatiod <- mean(variCOND[[v2]])*100##
rateRatiod <- (CondVarRatiod-NullVarRatiod)#
sig <- ifelse((rateRatiod > errorhigh | rateRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,1), round(NullVarRatiod,2), round(rateRatiod,2), round(errorlow,2), round(errorhigh,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print(na.omit(F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
##################################################################################################
##END MAIN FIGURES and climate conditions supplimentary figures
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])*100} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])*100# #
CondVarRatiod <- mean(variCOND[[v2]])*100##
rateRatiod <- (CondVarRatiod-NullVarRatiod)#
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,1), round(NullVarRatiod,2), round(rateRatiod,2), round(errorlow,2), round(errorhigh,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print(na.omit(F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
##################################################################################################
##END MAIN FIGURES and climate conditions supplimentary figures
###ADJUST TOP/bottom QUANTILE HERE#
quantile1<-0.03 #0.035 #0.17#
#
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])*100} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])*100# #
CondVarRatiod <- mean(variCOND[[v2]])*100##
rateRatiod <- (CondVarRatiod-NullVarRatiod)#
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,1), round(NullVarRatiod,2), round(rateRatiod,2), round(errorlow,2), round(errorhigh,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print(na.omit(F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
##################################################################################################
##END MAIN FIGURES and climate conditions supplimentary figures
###ADJUST TOP/bottom QUANTILE HERE#
quantile1<-0.17 #0.035 #0.17#
#
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- (CondVarRatiod/NullVarRatiod)*100#
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,1), round(NullVarRatiod,2), round(rateRatiod,2), round(errorlow,2), round(errorhigh,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print(na.omit(F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
##################################################################################################
##END MAIN FIGURES and climate conditions supplimentary figures
###ADJUST TOP/bottom QUANTILE HERE#
quantile1<-0.17 #0.035 #0.17#
#
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,4), round(NullVarRatiod,4), round(rateRatiod,4), round(errorlow,2), round(errorhigh,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print(na.omit(F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
##################################################################################################
##END MAIN FIGURES and climate conditions supplimentary figures
###ADJUST TOP/bottom QUANTILE HERE#
quantile1<-0.17 #0.035 #0.17#
#
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variCOND[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
sig <- ifelse((NullVarRatiod > errorhigh | NullVarRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,4), round(NullVarRatiod,4), round(rateRatiod,4), round(errorlow,2), round(errorhigh,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print(na.omit(F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
##################################################################################################
##END MAIN FIGURES and climate conditions supplimentary figures
###ADJUST TOP/bottom QUANTILE HERE#
quantile1<-0.17 #0.035 #0.17#
#
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
rateRatiod.CIupper <- ((CondVarRatiod/errorhigh)*100)-100#
rateRatiod.CIlower <- ((CondVarRatiod/errorlow)*100)-100#
#
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(rateRatiod.CIupper,2), round(rateRatiod.CIlower,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print(na.omit(F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
 #do confidence interval for %number of trees dead change and see if overlap with zero for significance #
##################################################################################################
##END MAIN FIGURES and climate conditions supplimentary figures
###ADJUST TOP/bottom QUANTILE HERE#
quantile1<-0.03 #0.035 #0.17#
#
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
rateRatiod.CIupper <- ((CondVarRatiod/errorhigh)*100)-100#
rateRatiod.CIlower <- ((CondVarRatiod/errorlow)*100)-100#
#
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(rateRatiod.CIupper,2), round(rateRatiod.CIlower,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print(na.omit(F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
 #do confidence interval for %number of trees dead change and see if overlap with zero for significance #
##################################################################################################
##END MAIN FIGURES and climate conditions supplimentary figures
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="basic")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
rateRatiod.CIupper <- ((CondVarRatiod/errorhigh)*100)-100#
rateRatiod.CIlower <- ((CondVarRatiod/errorlow)*100)-100#
#
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(rateRatiod.CIupper,2), round(rateRatiod.CIlower,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print(na.omit(F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
 #do confidence interval for
rateRatiod.CIupper
NULL.ci
errorlow
str(NULL.ci)
errorhigh <- NULL.ci$basic[3]
errorhigh
###ADJUST TOP/bottom QUANTILE HERE#
quantile1<-0.03 #0.035 #0.17#
#
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="basic")#
errorlow <- NULL.ci$basic[2]#
errorhigh <- NULL.ci$basic[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
rateRatiod.CIupper <- ((CondVarRatiod/errorhigh)*100)-100#
rateRatiod.CIlower <- ((CondVarRatiod/errorlow)*100)-100#
#
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(rateRatiod.CIupper,2), round(rateRatiod.CIlower,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print(na.omit(F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
 #do confidence interval for %number of trees dead change and see if overlap with zero for significance #
##################################################################################################
##END MAIN FIGURES and climate conditions supplimentary figures
errorhigh
CondVarRatiod
errorhigh
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="perc")
errorlow <- NULL.ci$percent[2]
NULL.ci
errorlow <- NULL.ci$percentile[2]
errorlow
NULL.ci
str(NULL.ci)
errorlow <- NULL.ci$percent[2]
errorlow
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")
errorlow <- NULL.ci$normal[2]
errorlow
###ADJUST TOP/bottom QUANTILE HERE#
quantile1<-0.03 #0.035 #0.17#
#
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="basic")#
errorlow <- (NULL.ci$basic[2])/100#
errorhigh <- (NULL.ci$basic[3])/100#
#str(NULL.ci)#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
rateRatiod.CIupper <- ((CondVarRatiod/errorhigh)*100)-100#
rateRatiod.CIlower <- ((CondVarRatiod/errorlow)*100)-100#
#
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(rateRatiod.CIupper,2), round(rateRatiod.CIlower,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print(na.omit(F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
 #do confidence interval for %number of trees dead change and see if overlap with zero for significance #
##################################################################################################
##END MAIN FIGURES and climate conditions supplimentary figures
rateRatiod.CIlower
CondVarRatiod
errorlow
NULL.ci$basic[2]
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="perc")#
errorlow <- (NULL.ci$percent[2])/100#
errorhigh <- (NULL.ci$percent[3])/100#
#str(NULL.ci)#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
rateRatiod.CIupper <- ((CondVarRatiod/errorhigh)*100)-100#
rateRatiod.CIlower <- ((CondVarRatiod/errorlow)*100)-100#
#
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(rateRatiod.CIupper,2), round(rateRatiod.CIlower,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print(na.omit(F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
 #do confidence interval for %number of trees dead change and see if overlap with zero for significance #
##################################################################################################
##END MAIN FIGURES and
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
rateRatiod.CIupper <- ((CondVarRatiod/errorhigh)*100)-100#
rateRatiod.CIlower <- ((CondVarRatiod/errorlow)*100)-100#
#
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(rateRatiod.CIupper,2), round(rateRatiod.CIlower,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print(na.omit(F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
 #do confidence interval for %number of trees dead change and see if overlap with zero for significance #
##################################################################################################
##END MAIN FIGURES and climate conditions supplimentary figures
###ADJUST TOP/bottom QUANTILE HERE#
quantile1<-0.17 #0.035 #0.17#
#
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
rateRatiod.CIupper <- ((CondVarRatiod/errorhigh)*100)-100#
rateRatiod.CIlower <- ((CondVarRatiod/errorlow)*100)-100#
#
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(rateRatiod.CIupper,2), round(rateRatiod.CIlower,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print(na.omit(F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
 #do confidence interval for %number of trees dead change and see if overlap with zero for significance #
##################################################################################################
##END MAIN FIGURES and climate conditions supplimentary figures
#ratio of mean conditions with Null weighted spatially by Condition#
meanFunc2 <- function(x,i){(mean(x$variCOND[i], na.rm=TRUE)/mean((x$variNULL[i]), na.rm=TRUE))} #
#meanFunc3 <- function(x,i){(mean(x$deadcarbon5sumYR[i], na.rm=TRUE)/mean((x$mortality2[i]), na.rm=TRUE))} #
#
F2 <- subset(S4swPREC, PREVSTOCKING5mid>60) #
#
#Convert variables to standard names and metric units#
F2$DIAmean <- (F2$DIAendmean* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <- (F2$DIAbeginmean *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$TPAsum <- (F2$endsumTPA /0.404686)			#number of trees per hectare by plot at resurvey#
F2$PREV_TPAsum <- (F2$startsumTPA /0.404686)	#number of trees per hectare by plot at initial survey (cm)#
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
#set grid cell size#
a <- b <- 2  #2=0.5degrees, 0.5=2degrees#
	F2$iLAT <- ((ceiling(F2$LAT*a))/a)-0.5 #+0.25  #round down to integer then add .25 ; switched /* removed ).25 addition#
	F2$iLON <- ((floor(F2$LON*b))/b)+0.5 #-0.25  #round down to integer then subtract .25; switched /*  ).25 addition#
	F2$LATLONYR <- (F2$iLAT*10000000000000) +(F2$iLON*(-100000000)) +F2$INVYR#
	F2$LATLON <- as.factor(F2$iLAT*100000000+ F2$iLON*-1000) #LATLON identifyier#
#
#Find climate variable mean and range for each grid cell#
F2$TEMPminLL <- ave(F2$temp5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$TEMPgrowminLL <- ave(F2$temp5grow, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$TEMP5chg <- F2$temp5-F2$TEMPminLL#
F2$TEMP5growchg <- F2$temp5grow-F2$TEMPgrowminLL#
#
F2$PRECminLL <- ave(F2$PREC5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$PRECgrowminLL <- ave(F2$PREC5grow, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$PREC5chg <- F2$PREC5-F2$PRECminLL#
F2$PREC5growchg <- F2$PREC5grow-F2$PRECgrowminLL#
#
F2$SWdroughtLL <- ave(F2$SWdrought5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$SWpluvialLL <- ave(F2$SWpluvial5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$SWdrought5chg <- F2$SWdrought5-F2$SWdroughtLL#
F2$SWpluvial5chg <- F2$SWpluvial5-F2$SWpluvialLL#
F2$nsampTOT <- ave(F2$DIAmean>0,F2$LATLON, FUN=function(x) sum(x, na.rm=TRUE))#
#
F2$Drysummer <- ifelse(F2$SWdrought5chg <= quantile(F2$SWdrought5chg, 0.17, na.rm=T), 1,0)#
F2$Wetsummer <- ifelse(F2$SWpluvial5chg >= quantile(F2$SWpluvial5chg, 0.83, na.rm=T), 1,0)#
F2$Dryperiod <- ifelse(F2$PREC5growchg <= quantile(F2$PREC5growchg, 0.17, na.rm=T), 1,0)#
F2$Wetperiod <- ifelse(F2$PREC5growchg >= quantile(F2$PREC5growchg, 0.83, na.rm=T), 1,0)#
F2$SPCDdiversity2 <- F2$SPCDdiversity-F2$PREV_SPCDdiversity#
#
#set disturbance conditions to binary#
#F2$fire <- ifelse(F2$fire>0, 1,0) # F2$carbon1sum-F2$PREVcarbon1sum,0) #ifelse(F2$fire>0, 1,0)#
#F2$insect <- ifelse(F2$insect>0, 1,0) # F2$carbon1sum-F2$PREVcarbon1sum,0) # 1,0)#
#F2$disease <- ifelse(F2$disease>0, 1,0) # F2$carbon1sum-F2$PREVcarbon1sum,0) # 1,0)#
#F2$animal <- ifelse(F2$animal>0,  1,0) #F2$carbon1sum-F2$PREVcarbon1sum,0) # 1,0)#
#F2$weather <- ifelse(F2$weather>0,  1,0) #F2$carbon1sum-F2$PREVcarbon1sum,0) # 1,0)#
#F2$SPCDdiversity2 <- ifelse(F2$SPCDdiversity2>0, 1,0)#
#
vari <- c("SWdrought5chg",  "SWpluvial5chg", "PREC5growchg", "TEMP5growchg") #
vari1 <- subset(F2, select=c(SWdrought5chg, SWpluvial5chg, PREC5growchg, TEMP5growchg)) #
vari2 <- c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2")#
#
###ADJUST TOP/bottom QUANTILE HERE#
quantile1<-0.17 #0.035 #0.17#
#
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
rateRatiod.CIupper <- ((CondVarRatiod/errorhigh)*100)-100#
rateRatiod.CIlower <- ((CondVarRatiod/errorlow)*100)-100#
#
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(rateRatiod.CIupper,2), round(rateRatiod.CIlower,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print(na.omit(F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
 #do confidence interval for %number of trees dead change and see if overlap with zero for significance #
##################################################################################################
##END MAIN FIGURES and climate conditions supplimentary figures
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(errorhigh,2), round(errorlow,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
rateRatiod.CIupper <- ((CondVarRatiod/errorhigh)*100)-100#
rateRatiod.CIlower <- ((CondVarRatiod/errorlow)*100)-100#
#
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(errorhigh,2), round(errorlow,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print(na.omit(F6b))#
#write.csv(na.omit(F6b))
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
rateRatiod.CIupper <- ((CondVarRatiod/errorhigh)*100)-100#
rateRatiod.CIlower <- ((CondVarRatiod/errorlow)*100)-100#
#
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(errorhigh,4), round(errorlow,4), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print(na.omit(F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
 #do confidence interval for %number of trees dead change and see if overlap with zero for significance #
##################################################################################################
##END MAIN FIGURES and climate conditions supplimentary figures
CondVarRatiod
.36/.81
.36/.08
errorlow*100)-100
(errorlow*100)-100
errorlow*100-100
rateRatiod.CIlower <- (CondVarRatiod*100-100)/(errorlow*100-100)
rateRatiod.CIlower
errorlow*100
ondVarRatiod*100
CondVarRatiod*100
#####################################################################################################################
############## Extended data TABLE 3 - CLimate stats #############################################################################
##########
####
#
#ratio of mean conditions with Null weighted spatially by Condition#
meanFunc2 <- function(x,i){(mean(x$variCOND[i], na.rm=TRUE)/mean((x$variNULL[i]), na.rm=TRUE))} #
#meanFunc3 <- function(x,i){(mean(x$deadcarbon5sumYR[i], na.rm=TRUE)/mean((x$mortality2[i]), na.rm=TRUE))} #
#
F2 <- subset(S4swPREC) #, PREVSTOCKING5mid>60) #
#
#Convert variables to standard names and metric units#
F2$DIAmean <- (F2$DIAendmean* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <- (F2$DIAbeginmean *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$TPAsum <- (F2$endsumTPA /0.404686)			#number of trees per hectare by plot at resurvey#
F2$PREV_TPAsum <- (F2$startsumTPA /0.404686)	#number of trees per hectare by plot at initial survey (cm)#
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
#set grid cell size#
a <- b <- 2  #2=0.5degrees, 0.5=2degrees#
	F2$iLAT <- ((ceiling(F2$LAT*a))/a)-0.5 #+0.25  #round down to integer then add .25 ; switched /* removed ).25 addition#
	F2$iLON <- ((floor(F2$LON*b))/b)+0.5 #-0.25  #round down to integer then subtract .25; switched /*  ).25 addition#
	F2$LATLONYR <- (F2$iLAT*10000000000000) +(F2$iLON*(-100000000)) +F2$INVYR#
	F2$LATLON <- as.factor(F2$iLAT*100000000+ F2$iLON*-1000) #LATLON identifyier#
#
#Find climate variable mean and range for each grid cell#
F2$TEMPminLL <- ave(F2$temp5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$TEMPgrowminLL <- ave(F2$temp5grow, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$TEMP5chg <- F2$temp5-F2$TEMPminLL#
F2$TEMP5growchg <- F2$temp5grow-F2$TEMPgrowminLL#
#
F2$PRECminLL <- ave(F2$PREC5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$PRECgrowminLL <- ave(F2$PREC5grow, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$PREC5chg <- F2$PREC5-F2$PRECminLL#
F2$PREC5growchg <- F2$PREC5grow-F2$PRECgrowminLL#
#
F2$SWdroughtLL <- ave(F2$SWdrought5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$SWpluvialLL <- ave(F2$SWpluvial5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$SWdrought5chg <- F2$SWdrought5-F2$SWdroughtLL#
F2$SWpluvial5chg <- F2$SWpluvial5-F2$SWpluvialLL#
F2$nsampTOT <- ave(F2$DIAmean>0,F2$LATLON, FUN=function(x) sum(x, na.rm=TRUE))#
#
F2$Drysummer <- ifelse(F2$SWdrought5chg <= quantile(F2$SWdrought5chg, 0.17, na.rm=T), 1,0)#
F2$Wetsummer <- ifelse(F2$SWpluvial5chg >= quantile(F2$SWpluvial5chg, 0.83, na.rm=T), 1,0)#
F2$Dryperiod <- ifelse(F2$PREC5growchg <= quantile(F2$PREC5growchg, 0.17, na.rm=T), 1,0)#
F2$Wetperiod <- ifelse(F2$PREC5growchg >= quantile(F2$PREC5growchg, 0.83, na.rm=T), 1,0)#
F2$SPCDdiversity2 <- F2$SPCDdiversity-F2$PREV_SPCDdiversity#
#
#set disturbance conditions to binary#
#F2$fire <- ifelse(F2$fire>0, 1,0) # F2$carbon1sum-F2$PREVcarbon1sum,0) #ifelse(F2$fire>0, 1,0)#
#F2$insect <- ifelse(F2$insect>0, 1,0) # F2$carbon1sum-F2$PREVcarbon1sum,0) # 1,0)#
#F2$disease <- ifelse(F2$disease>0, 1,0) # F2$carbon1sum-F2$PREVcarbon1sum,0) # 1,0)#
#F2$animal <- ifelse(F2$animal>0,  1,0) #F2$carbon1sum-F2$PREVcarbon1sum,0) # 1,0)#
#F2$weather <- ifelse(F2$weather>0,  1,0) #F2$carbon1sum-F2$PREVcarbon1sum,0) # 1,0)#
#F2$SPCDdiversity2 <- ifelse(F2$SPCDdiversity2>0, 1,0)#
#
vari <- c("SWdrought5chg",  "SWpluvial5chg", "PREC5growchg", "TEMP5growchg") #
vari1 <- subset(F2, select=c(SWdrought5chg, SWpluvial5chg, PREC5growchg, TEMP5growchg)) #
vari2 <- c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2")#
#
###ADJUST TOP/bottom QUANTILE HERE#
quantile1<-0.03 #0.035 #0.17#
#
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
rateRatiod.CIupper <- ((CondVarRatiod/errorhigh)*100)-100#
rateRatiod.CIlower <- ((CondVarRatiod/errorlow)*100)-100#
#
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(rateRatiod.CIupper,2), round(rateRatiod.CIlower,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print(na.omit(F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
 #do confidence interval for %number of trees dead change and see if overlap with zero for significance #
##################################################################################################
##END MAIN FIGURES and climate conditions supplimentary figures
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
rateRatiod.CIupper <- ((CondVarRatiod/errorhigh)*100)-100#
rateRatiod.CIlower <- ((CondVarRatiod/errorlow)*100)-100#
#
rateRatiod.CIupper<- ifelse(rateRatiod.CIupper<rateRatiod.CIlower, NA, rateRatiod.CIupper)#
rateRatiod.CIlower<- ifelse(rateRatiod.CIlower>rateRatiod.CIupper, NA, rateRatiod.CIlower)#
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(rateRatiod.CIupper,2), round(rateRatiod.CIlower,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print(na.omit(F6b))#
#write.csv(na.omit(F6b))
###ADJUST TOP/bottom QUANTILE HERE#
quantile1<-0.03 #0.035 #0.17#
#
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
rateRatiod.CIupper <- ((CondVarRatiod/errorhigh)*100)-100#
rateRatiod.CIlower <- ((CondVarRatiod/errorlow)*100)-100#
#
rateRatiod.CIupper<- ifelse(rateRatiod.CIupper<rateRatiod.CIlower, NA, rateRatiod.CIupper)#
rateRatiod.CIlower<- ifelse(rateRatiod.CIlower>rateRatiod.CIupper, NA, rateRatiod.CIlower)#
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(rateRatiod.CIupper,2), round(rateRatiod.CIlower,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print(na.omit(F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
 #do confidence interval for %number of trees dead change and see if overlap with zero for significance #
##################################################################################################
##END MAIN FIGURES and climate conditions supplimentary figures
round(rateRatiod.CIupper,2)
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")
sig
CondVarRatiod
errorhigh
#ratio of mean conditions with Null weighted spatially by Condition#
meanFunc2 <- function(x,i){(mean(x$variCOND[i], na.rm=TRUE)/mean((x$variNULL[i]), na.rm=TRUE))} #
#meanFunc3 <- function(x,i){(mean(x$deadcarbon5sumYR[i], na.rm=TRUE)/mean((x$mortality2[i]), na.rm=TRUE))} #
#
F2 <- subset(S4swPREC) #, PREVSTOCKING5mid>60) #
#
#Convert variables to standard names and metric units#
F2$DIAmean <- (F2$DIAendmean* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <- (F2$DIAbeginmean *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$TPAsum <- (F2$endsumTPA /0.404686)			#number of trees per hectare by plot at resurvey#
F2$PREV_TPAsum <- (F2$startsumTPA /0.404686)	#number of trees per hectare by plot at initial survey (cm)#
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
#set grid cell size#
a <- b <- 2  #2=0.5degrees, 0.5=2degrees#
	F2$iLAT <- ((ceiling(F2$LAT*a))/a)-0.5 #+0.25  #round down to integer then add .25 ; switched /* removed ).25 addition#
	F2$iLON <- ((floor(F2$LON*b))/b)+0.5 #-0.25  #round down to integer then subtract .25; switched /*  ).25 addition#
	F2$LATLONYR <- (F2$iLAT*10000000000000) +(F2$iLON*(-100000000)) +F2$INVYR#
	F2$LATLON <- as.factor(F2$iLAT*100000000+ F2$iLON*-1000) #LATLON identifyier#
#
#Find climate variable mean and range for each grid cell#
F2$TEMPminLL <- ave(F2$temp5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$TEMPgrowminLL <- ave(F2$temp5grow, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$TEMP5chg <- F2$temp5-F2$TEMPminLL#
F2$TEMP5growchg <- F2$temp5grow-F2$TEMPgrowminLL#
#
F2$PRECminLL <- ave(F2$PREC5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$PRECgrowminLL <- ave(F2$PREC5grow, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$PREC5chg <- F2$PREC5-F2$PRECminLL#
F2$PREC5growchg <- F2$PREC5grow-F2$PRECgrowminLL#
#
F2$SWdroughtLL <- ave(F2$SWdrought5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$SWpluvialLL <- ave(F2$SWpluvial5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$SWdrought5chg <- F2$SWdrought5-F2$SWdroughtLL#
F2$SWpluvial5chg <- F2$SWpluvial5-F2$SWpluvialLL#
F2$nsampTOT <- ave(F2$DIAmean>0,F2$LATLON, FUN=function(x) sum(x, na.rm=TRUE))#
#
F2$Drysummer <- ifelse(F2$SWdrought5chg <= quantile(F2$SWdrought5chg, 0.17, na.rm=T), 1,0)#
F2$Wetsummer <- ifelse(F2$SWpluvial5chg >= quantile(F2$SWpluvial5chg, 0.83, na.rm=T), 1,0)#
F2$Dryperiod <- ifelse(F2$PREC5growchg <= quantile(F2$PREC5growchg, 0.17, na.rm=T), 1,0)#
F2$Wetperiod <- ifelse(F2$PREC5growchg >= quantile(F2$PREC5growchg, 0.83, na.rm=T), 1,0)#
F2$SPCDdiversity2 <- F2$SPCDdiversity-F2$PREV_SPCDdiversity#
#
#set disturbance conditions to binary#
#F2$fire <- ifelse(F2$fire>0, 1,0) # F2$carbon1sum-F2$PREVcarbon1sum,0) #ifelse(F2$fire>0, 1,0)#
#F2$insect <- ifelse(F2$insect>0, 1,0) # F2$carbon1sum-F2$PREVcarbon1sum,0) # 1,0)#
#F2$disease <- ifelse(F2$disease>0, 1,0) # F2$carbon1sum-F2$PREVcarbon1sum,0) # 1,0)#
#F2$animal <- ifelse(F2$animal>0,  1,0) #F2$carbon1sum-F2$PREVcarbon1sum,0) # 1,0)#
#F2$weather <- ifelse(F2$weather>0,  1,0) #F2$carbon1sum-F2$PREVcarbon1sum,0) # 1,0)#
#F2$SPCDdiversity2 <- ifelse(F2$SPCDdiversity2>0, 1,0)#
#
vari <- c("SWdrought5chg",  "SWpluvial5chg", "PREC5growchg", "TEMP5growchg") #
vari1 <- subset(F2, select=c(SWdrought5chg, SWpluvial5chg, PREC5growchg, TEMP5growchg)) #
vari2 <- c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2")#
#
###ADJUST TOP/bottom QUANTILE HERE#
quantile1<-0.17 #0.035 #0.17#
#
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
rateRatiod.CIupper <- ((CondVarRatiod/errorhigh)*100)-100#
rateRatiod.CIlower <- ((CondVarRatiod/errorlow)*100)-100#
#
rateRatiod.CIupper<- ifelse(rateRatiod.CIupper<=rateRatiod.CIlower, NA, rateRatiod.CIupper)#
rateRatiod.CIlower<- ifelse(rateRatiod.CIlower>=rateRatiod.CIupper, NA, rateRatiod.CIlower)#
#
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(rateRatiod.CIupper,2), round(rateRatiod.CIlower,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print(na.omit(F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
 #do confidence interval for %number of trees dead change and see if overlap with zero for significance #
##################################################################################################
##END MAIN FIGURES and climate conditions supplimentary figures
rateRatiod.CIupper
rateRatiod.CIlower
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
rateRatiod.CIupper <- ((CondVarRatiod/errorhigh)*100)-100#
rateRatiod.CIlower <- ((CondVarRatiod/errorlow)*100)-100#
#
rateRatiod.CIupper2<- ifelse(rateRatiod.CIupper<=rateRatiod.CIlower, NA, rateRatiod.CIupper)#
rateRatiod.CIlower2<- ifelse(rateRatiod.CIlower>=rateRatiod.CIupper, NA, rateRatiod.CIlower)#
#
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(rateRatiod.CIupper2,2), round(rateRatiod.CIlower2,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print(na.omit(F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
 #do confidence interval for %number of trees dead change and see if overlap with zero for significance #
##################################################################################################
##END MAIN FIGURES and climate conditions supplimentary figures
rateRatiod.CIupper
rateRatiod.CIlower
rateRatiod.CIupper
rateRatiod.CIlower
rateRatiod.CIupper2
round(rateRatiod.CIupper2,2)
sig
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")
sig
CondVarRatiod
errorhigh
CondVarRatiod
errorlow
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
rateRatiod.CIupper <- ((CondVarRatiod/errorhigh)*100)-100#
rateRatiod.CIlower <- ((CondVarRatiod/errorlow)*100)-100#
#
rateRatiod.CIupper2<- ifelse(rateRatiod.CIupper<=rateRatiod.CIlower, NA, rateRatiod.CIupper)#
rateRatiod.CIlower2<- ifelse(rateRatiod.CIlower>=rateRatiod.CIupper, NA, rateRatiod.CIlower)#
#
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(rateRatiod.CIupper2,2), round(rateRatiod.CIlower2,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)
f34
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
rateRatiod.CIupper <- ((CondVarRatiod/errorhigh)*100)-100#
rateRatiod.CIlower <- ((CondVarRatiod/errorlow)*100)-100#
#
rateRatiod.CIupper2<- ifelse(rateRatiod.CIupper<=rateRatiod.CIlower, NA, rateRatiod.CIupper)#
rateRatiod.CIlower2<- ifelse(rateRatiod.CIlower>=rateRatiod.CIupper, NA, rateRatiod.CIlower)#
#
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(rateRatiod.CIupper2,2), round(rateRatiod.CIlower2,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print((F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
 #do confidence interval for %number of trees dead change and see if overlap with zero for significance #
##################################################################################################
##END MAIN FIGURES and climate conditions supplimentary figures
rateRatiod.CIupper
rateRatiod.CIlower
###ADJUST TOP/bottom QUANTILE HERE#
quantile1<-0.17 #0.035 #0.17#
#
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
rateRatiod.CIupper <- ((CondVarRatiod/errorhigh)*100)-100#
rateRatiod.CIlower <- ((CondVarRatiod/errorlow)*100)-100#
#
rateRatiod.CIupper2<- ifelse(rateRatiod.CIupper>=rateRatiod.CIlower, NA, rateRatiod.CIupper)#
rateRatiod.CIlower2<- ifelse(rateRatiod.CIlower<=rateRatiod.CIupper, NA, rateRatiod.CIlower)#
#
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(rateRatiod.CIupper2,2), round(rateRatiod.CIlower2,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print((F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
 #do confidence interval for %number of trees dead change and see if overlap with zero for significance #
##################################################################################################
##END MAIN FIGURES and climate conditions supplimentary figures
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(rateRatiod.CIupper,2), round(rateRatiod.CIlower,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
rateRatiod.CIupper <- ((CondVarRatiod/errorhigh)*100)-100#
rateRatiod.CIlower <- ((CondVarRatiod/errorlow)*100)-100#
#
rateRatiod.CIupper2<- ifelse(rateRatiod.CIupper>=rateRatiod.CIlower, NA, rateRatiod.CIupper)#
rateRatiod.CIlower2<- ifelse(rateRatiod.CIlower<=rateRatiod.CIupper, NA, rateRatiod.CIlower)#
#
sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(rateRatiod.CIupper,2), round(rateRatiod.CIlower,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print((F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
 #do confidence interval for %number of trees dead change and see if overlap with zero for significance #
##################################################################################################
##END MAIN FIGURES and climate conditions supplimentary figures
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
rateRatiod.CIupper <- ((CondVarRatiod/errorhigh)*100)-100#
rateRatiod.CIlower <- ((CondVarRatiod/errorlow)*100)-100#
#
rateRatiod.CIupper2<- ifelse(rateRatiod.CIupper>=rateRatiod.CIlower, NA, rateRatiod.CIupper)#
rateRatiod.CIlower2<- ifelse(rateRatiod.CIlower<=rateRatiod.CIupper, NA, rateRatiod.CIlower)#
#
#sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
sig <- ifelse((rateRatiod.CIlower2 > 0 | rateRatiod.CIupper2 < 0), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(rateRatiod.CIupper2,2), round(rateRatiod.CIlower2,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print((F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
 #do confidence interval for %number of trees dead change and see if overlap with zero for significance #
##################################################################################################
##END MAIN FIGURES and climate conditions supplimentary figures
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
rateRatiod.CIupper <- ((CondVarRatiod/errorhigh)*100)-100#
rateRatiod.CIlower <- ((CondVarRatiod/errorlow)*100)-100#
#
rateRatiod.CIupper2<- ifelse(rateRatiod.CIupper>=rateRatiod.CIlower, NA, rateRatiod.CIupper)#
rateRatiod.CIlower2<- ifelse(rateRatiod.CIlower<=rateRatiod.CIupper, NA, rateRatiod.CIlower)#
#
#sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
sig <- ifelse((rateRatiod.CIupper2 > 0 | rateRatiod.CIlower2 < 0), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(rateRatiod.CIupper2,2), round(rateRatiod.CIlower2,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print((F6b))#
#write.csv(na.omit(F6b))
sig <- ifelse(c((rateRatiod.CIupper2 > 0 | rateRatiod.CIlower2 < 0) & (is.na(rateRatiod.CIupper2)==F) & is.na(rateRatiod.CIlower2)==F)), "***", "")
sig <- ifelse(c((rateRatiod.CIupper2 > 0 | rateRatiod.CIlower2 < 0) & (is.na(rateRatiod.CIupper2)==F) & is.na(rateRatiod.CIlower2)==F), "***", "")
sig <- ifelse(c((rateRatiod.CIupper2 > 0 | rateRatiod.CIlower2 < 0) & (is.na(rateRatiod.CIupper2)==F & is.na(rateRatiod.CIlower2)==F)), "***", "")
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
rateRatiod.CIupper <- ((CondVarRatiod/errorhigh)*100)-100#
rateRatiod.CIlower <- ((CondVarRatiod/errorlow)*100)-100#
#
rateRatiod.CIupper2<- ifelse(rateRatiod.CIupper>=rateRatiod.CIlower, NA, rateRatiod.CIupper)#
rateRatiod.CIlower2<- ifelse(rateRatiod.CIlower<=rateRatiod.CIupper, NA, rateRatiod.CIlower)#
#
#sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
sig <- ifelse(c((rateRatiod.CIupper2 > 0 | rateRatiod.CIlower2 < 0) & (is.na(rateRatiod.CIupper2)==F & is.na(rateRatiod.CIlower2)==F)), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(rateRatiod.CIupper2,2), round(rateRatiod.CIlower2,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print((F6b))#
#write.csv(na.omit(F6b))
###ADJUST TOP/bottom QUANTILE HERE#
quantile1<-0.03 #0.035 #0.17#
#
F5b <- NULL#
for(v2 in 1:5)#
{#
for(v in 1:4)#
{#
for(c in 1:2)#
{#
if(c==1 & v>2){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE)) }	#0.17 & 0.03 set slimate extreme bottom percentile#
if(c==2 & v>2){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE)) }	#0.83 & 0.965 set slimate extreme top percentile#
if(c==1 & vari[v]=="SWdrought5chg"){f22 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], quantile1, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.83, na.rm=TRUE)) }	##
if(c==2 &  vari[v]=="SWpluvial5chg"){f22 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 1-quantile1, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.17, na.rm=TRUE) ) }	#
if(c==1 & vari[v]=="SWpluvial5chg"){next}#
if(c==2 & vari[v]=="SWdrought5chg"){next}#
#print(mean(f22$TEMP5growchg))#
f23 <- subset(F2, get(vari[v])< quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], 0.3, na.rm=TRUE))#
F33 <- subset(f23, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
f22$Csamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #weighting factor of number of Cond data/total data in each grid cell#
F33$Nsamp <- (ave(F33$DIAmean>0,F33$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/F33$nsampTOT #weighting factor of number of NULL data/total data in each grid cell#
#
#f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, Csamp))#
#F33 <- merge(F33, f24, all.x=TRUE, by="LATLON")#
#F33$CtoNratio <- 1 #F33$Csamp/F33$Nsamp  #needs to be for each disturb type tooo?#
#
variCOND <- subset(f22, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
variNULL <- subset(F33, select=c("fire", "insect", "disease", "animal", "weather", "Drysummer", "Wetsummer", "Dryperiod", "Wetperiod", "SPCDdiversity2"))#
#find confidence intervals for null model disturbance freq. #
ratioFunc <- function(x, i){mean(x[i])} #
#
ratioboot2 <- boot(variNULL[[v2]], ratioFunc, R=1000)#
NULL.ci <- boot.ci(ratioboot2, conf=0.95, type="norm")#
errorlow <- NULL.ci$normal[2]#
errorhigh <- NULL.ci$normal[3]#
#
#subset data based on condition to get actual ratio in Null climate and Conditional climates rather than Bootstrapped mean is approx. the same#
NullVarRatiod <- mean(variNULL[[v2]])# #
CondVarRatiod <- mean(variCOND[[v2]])##
rateRatiod <- ((CondVarRatiod/NullVarRatiod)*100)-100#
rateRatiod.CIupper <- ((CondVarRatiod/errorhigh)*100)-100#
rateRatiod.CIlower <- ((CondVarRatiod/errorlow)*100)-100#
#
rateRatiod.CIupper2<- ifelse(rateRatiod.CIupper>=rateRatiod.CIlower, NA, rateRatiod.CIupper)#
rateRatiod.CIlower2<- ifelse(rateRatiod.CIlower<=rateRatiod.CIupper, NA, rateRatiod.CIlower)#
#
#sig <- ifelse((CondVarRatiod > errorhigh | CondVarRatiod < errorlow), "***", "")#
sig <- ifelse(c((rateRatiod.CIupper2 > 0 | rateRatiod.CIlower2 < 0) & (is.na(rateRatiod.CIupper2)==F & is.na(rateRatiod.CIlower2)==F)), "***", "")#
#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==2, "5-yr Wet period", NA)#
Clim <- ifelse(vari[v]=="PREC5growchg" & c==1, "5-yr Dry period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==1, "Cool period", Clim)#
Clim <- ifelse(vari[v]=="TEMP5growchg" & c==2, "Warm period", Clim)#
Clim <- ifelse(vari[v]=="SWpluvial5chg" & c==2, "Wet summer", Clim)#
Clim <- ifelse(vari[v]=="SWdrought5chg" & c==1, "Dry summer", Clim)#
#
n <- sum(variCOND[[v2]]==1)#
#
f34 <- c(vari2[v2],Clim, n, round(CondVarRatiod,3), round(NullVarRatiod,4), round(rateRatiod,4), round(rateRatiod.CIupper2,2), round(rateRatiod.CIlower2,2), sig) #, round(Vgrow2,2), round(Vgrow,2), error2)#
F5b <- rbind(F5b, f34)#
print(c(v2, v, c))#
}#
}#
}#
#
F6b <- as.data.table(F5b)#
setnames(F6b, c("Disturbance type", "Climate condition", "n", "%CondVarRatiod", "%NullVarRatiod", "%rateRatiod", "CI.lower","CI.upper", "p < 0.05") )#, "Vgrow2","Vdead", "error2"))#
print((F6b))#
#write.csv(na.omit(F6b))#
 # Productivity was -62.5% lower in forests during a warm period #
 #weather disturbances were associated with -62% reduction in productivity during warm periods#
 # Forests carbon change with disease with and without a wet period (witout latlon weighted average)#
 #do confidence interval for %number of trees dead change and see if overlap with zero for significance #
##################################################################################################
##END MAIN FIGURES and climate conditions s
#Load library, set options, simple fuctions#
library(RColorBrewer)#
library(sp)#
library(data.table)#
library(spam)#
library(nlme)#
library(maps)#
library(ggplot2)#
library(modeest)#
library(effects)#
library(plyr)#
library(reshape2)#
library(ggmap)#
library(boot)#
library(gplots)#
library(shape)#
library(SDMTools)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(foreach)#
library(doParallel)#
library(doMC)#
registerDoMC(cores=2)#
library(quantreg)#
library(fields)#
library(grDevices)#
library(RCurl)#
options(scipen=999) #remove sci notation#
meanFunc <- function(x,i){mean(x[i], na.rm=TRUE)}#
##Load data from GITHUB#
 data.url <- "https://raw.githubusercontent.com/wanderswest/ESM-FIA/master/STEMs.data.csv"#
    ESM.data <- getURL(data.url)                #
    ESM.data <- read.csv(textConnection(ESM.data), header = TRUE, sep = ",", quote="\"", dec=".")#
RM5mergedfullcut1991.11.17.2014  <- as.data.table(ESM.data)#
#
#or load filtered data from local drive#
#RM5mergedfullcut1991.11.17.2014  <- as.data.table(read.csv("/Users/travis/GitHub/ESM-FIA/ESM.data.csv", header = TRUE, sep = ",", quote="\"", dec="."))#
#
RM5mergedfullcut1991.11.17.2014 <-  subset(RM5mergedfullcut1991.11.17.2014, STDORGCD==0 ) # remove planted forests#
S4swPREC <-  subset(RM5mergedfullcut1991.11.17.2014, STDORGCD==0 & cut==0 ) #exclude planted and harvested forests#
F2 <- subset(S4swPREC)
data.url <- "https://raw.githubusercontent.com/wanderswest/ESM-FIA/master/ESM.data.csv"#
    ESM.data <- getURL(data.url)                #
    ESM.data <- read.csv(textConnection(ESM.data), header = TRUE, sep = ",", quote="\"", dec=".")#
RM5mergedfullcut1991.11.17.2014  <- as.data.table(ESM.data)
#or load filtered data from local drive#
#RM5mergedfullcut1991.11.17.2014  <- as.data.table(read.csv("/Users/travis/GitHub/ESM-FIA/ESM.data.csv", header = TRUE, sep = ",", quote="\"", dec="."))#
#
RM5mergedfullcut1991.11.17.2014 <-  subset(RM5mergedfullcut1991.11.17.2014, STDORGCD==0 ) # remove planted forests#
S4swPREC <-  subset(RM5mergedfullcut1991.11.17.2014, STDORGCD==0 & cut==0 ) #exclude planted and harvested forests#
F2 <- subset(S4swPREC)
print(c(sum(RM5mergedfullcut1991.11.17.2014$startsumTPA)/(1/0.166166884), "Trees initially surveyed"))
print(c(sum(RM5mergedfullcut1991.11.17.2014$endsumTPA)/(1/0.166166884), "Trees resurveyed"))
#Intro staatistics#
print(c(sum(RM5mergedfullcut1991.11.17.2014$startsumTPA)/(1/0.166166884), "Trees initially surveyed"))#
print(c(sum(RM5mergedfullcut1991.11.17.2014$endsumTPA)/(1/0.166166884), "Trees resurveyed"))#
print(c(sum(RM5mergedfullcut1991.11.17.2014$PLT_CN>0), "Plots resurveyed"))#
print(c(mean(F2$REMPER), "mean resurvey period")) #most appropriate dataset for analyses #
print(c(std.error(F2$REMPER), "SE resurvey period"))#
print(c(sum(RM5mergedfullcut1991.11.17.2014$cut>0), "Plots with harvesting"))#
print(c(sum(RM5mergedfullcut1991.11.17.2014$STDORGCD>0, na.rm=T), "Planted plots"))#
#
print(c(mean(F2$carbon1sum, na.rm=T)*0.00112085116, "mean forest carbon Mg/ha")) #0.00112085116 = convert ABG carbon to Mg/ha#
print(c(sd(F2$carbon1sum, na.rm=T)*0.00112085116, "Standard devation forest carbon Mg/ha"))#
LegacyCarbon <- ((F2$carbon1sum-F2$PREVcarbon1sum)/F2$REMPER)*0.00112085116	#0.00112085116 = convert ABG carbon to Mg/ha#
print(c(mean(LegacyCarbon), "Legacy carbon accumulation Mg/ha/year")) 	#
print(c(std.error(LegacyCarbon), "SE Legacy carbon accumulation Mg/ha/year")) #
NPPchg <- ((F2$NPP-F2$PREVNPP)/F2$REMPER)*0.00112085116	#0.00112085116 = convert ABG carbon to Mg/ha#
print(c(mean(NPPchg), "NPP Mg/ha/year")) 	#
print(c(std.error(NPPchg), "SE NPP Mg/ha/year")) #
#
###SUCCESSION STATS#
#carbon and density variable name and unit conversions#
F2$DIAmean <- (F2$DIAendmean* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <- (F2$DIAbeginmean *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$Csum <- F2$carbon1sum* 0.00112085116  #	#convert living carbon to Mg/ha#
F2$PREV_Csum <- F2$PREVcarbon1sum* 0.00112085116 ##convert living carbon to Mg/ha#
F2$TPAsum <- (F2$endsumTPA /0.404686)			#number of trees per hectare by plot at resurvey#
F2$PREV_TPAsum <- (F2$startsumTPA /0.404686)	#number of trees per hectare by plot at initial survey #
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
#calculate change in Stem density and mean tree diameter for each plot#
F2$TPAchg <- (F2$TPAsum-F2$PREV_TPAsum)/F2$REMPER#
print(c(mean(F2$TPAchg, na.rm=T), " Overall TPAchg stems/ha/year")) 	#
print(c(std.error(F2$TPAchg, na.rm=T), "SE TPA")) #
#
#maximum early successional ingrowth and carbon mean change vectors (FIG. 1)#
STOCKval <- c(1, 9, 16, 25, 33, 42, 50, 59, 69, 79, 89,  101) #
QMDvalues <- c(12.7, 14.1, seq(15.5, 32, 1.5)) #,23.4, 24.5 ,26.8, 29, 32, 34.5, 36.5, 41 ) #10#
s=4#
h=1#
S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+1]) 	#
S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+1]))#
print(c(mean(S11q$TPAchg, na.rm=T), "early succession TPAchg stems/ha/year")) 	#
print(c(std.error(S11q$TPAchg, na.rm=T), "SE early succession")) #
#
#calculate NPP for each plot#
F2$NPPchg <- ((F2$NPP-F2$PREVNPP)/F2$REMPER)*0.00112085116	#0.00112085116 = convert ABG carbon to Mg/ha#
STOCKval <- c(0, 5, 15, seq(30, 121, 91/6)) #6#
QMDvalues <- c(12.7, 14.5) #
s=4#
h=1#
S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+1]) 	#
S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+1]))#
print(c(round(mean(S11q$NPPchg, na.rm=T),1), "early succession NPP Mg/ha/year")) 	#
print(c(std.error(S11q$NPPchg, na.rm=T), "SE early succession NPP"))
#reforestation ingrowth#
F2e <- subset(F2, PREV_DIAmean>18.5 & PREV_STOCKINGmid< 20) #
print(c(mean(F2e$NPP, na.rm=T), "early succession NPP Mg/ha/year")) 	#
print(c(std.error(F2e$NPP, na.rm=T), "SE early succession NPP")) #
print(c(mean(F2e$TPAchg, na.rm=T), "early succession TPAchg stems/ha/year")) 	#
print(c(std.error(F2e$TPAchg, na.rm=T), "SE early succession NPP")) #
#
print(c(sum(F2e$ingrowth2>0)/sum(F2e$PLT_CN>0)*100, "percent ingrowth in low density plots"))#
#print(c(sum(F2e$mortality2>0 & F2e$mortDIAmean>F2e$DIAendmean, na.rm=T)/sum(F2e$PLT_CN>0)*100, "percent mortality large trees in low density plots"))#
#
#### Largest mean diameter forest stats#
F2e <- subset(F2,PREV_DIAmean>35 ) #& PREV_STOCKINGmid>60)#
print(c(sum(F2e$PLT_CN>0)/sum(F2$PLT_CN>0)*100, "largest mean diameter plots percent of overall dataset"))#
####DISTURBANCE STATS#
F2$allmortalitynoAD <- (F2$unknowndamage+F2$vegetation) #
F2$alldisturb <- (F2$insect+F2$fire+F2$weather+F2$disease+F2$animal)#
F2$allmortality <- (F2$insect+F2$fire+F2$weather+F2$disease+F2$animal+F2$unknowndamage+F2$vegetation)#
#
print(c(sum(F2$DSTRBCD1>0)/sum(F2$PLT_CN>0)*100, "Percent dataset large disturbance in 5 years" ) )#
print(c((1-(sum(F2$allmortality>0)/sum(F2$PLT_CN>0)))*100, "Percent dataset without mortality in 5 years" ) )#
#
print(c(sum(F2$alldisturb>0)/sum(F2$PLT_CN>0)*100, "Percent dataset disturbed in 5 years" ) )#
print(c(sum(F2$unknowndamage>0 & F2$alldisturb==0 & F2$vegetation==0)/sum(F2$PLT_CN>0)*100, "Percent dataset only unknown disturbance in 5 years" ) )#
print(c(sum(F2$unknowndamage)/(sum(F2$alldisturb)+ sum(F2$allmortalitynoAD))*100, "Percent mortality attributed to unknown disturbance in 5 years" ) )#
print(c((sum(F2$alldisturb)/sum(F2$allmortality))*100, "Percent mortality attributed to unknown disturbance in 5 years" )) #
#
F2D <- subset(F2, PREV_STOCKINGmid>60)	#Disturbed forests#
print(c(sum(F2D$alldisturb>0)/sum(F2D$PLT_CN>0)*100, "Percent self thinning forests disturbed in 5 years" ) )
#############################################################################################################################
#######################   FIGURE 1 - EMPIRICAL FOREST DENSITY MODEL  ########################################################
#####
#
dev.new(width=8, height=6) #set up plot#
S4swPREC <-  subset(RM5mergedfullcut1991.11.17.2014, STDORGCD==0 & cut==0 ) #exclude planted and logged forests#
F2 <- subset(S4swPREC)
#Convert variables to standard names and metric units#
F2$DIAmean <- (F2$DIAendmean* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <- (F2$DIAbeginmean *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$TPAsum <- (F2$endsumTPA /0.404686)			#number of trees per hectare by plot at resurvey#
F2$PREV_TPAsum <- (F2$startsumTPA /0.404686)	#number of trees per hectare by plot at initial survey (cm)#
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
#
#calculate change in Stem density and mean tree diameter for each plot#
F2$TPAchg <- F2$TPAsum-F2$PREV_TPAsum#
F2$DIAchg <- F2$DIAmean-F2$PREV_DIAmean#
#
#setup color ramp#
 palette(adjustcolor(((rich.colors(60))), transform=diag(c(0.95,1,0.85,1)))) #
stockcols <- rev(palette())#
#Climate Colors:#
pt <- "steelblue1" #pluvial trend#
pe <- "royalblue"	#pluvial event#
dt <- "goldenrod1" #drought trend#
de <- "orange2"  	#drought event#
nt <- "grey55"#
ne <- "grey35"#
ag1 <- 25#
#select model type and bootstraped error on/off
F2
S4swPREC <-  subset(RM5mergedfullcut1991.11.17.2014, STDORGCD==0) # & cut==0 ) #exclude planted and logged forests
F2 <- subset(S4swPREC)
F2
S4swPREC <-  subset(RM5mergedfullcut1991.11.17.2014,  cut==0 ) #exclude planted and logged forests
F2 <- subset(S4swPREC)
F2
S4swPREC <-  subset(RM5mergedfullcut1991.11.17.2014,  cut==0 ) #exclude planted and logged forests
F2 <- subset(S4swPREC)
F2
S4swPREC <-  subset(RM5mergedfullcut1991.11.17.2014 ) #exclude planted and logged forests
F2 <- subset(S4swPREC)
F2
S4swPREC <-  subset(RM5mergedfullcut1991.11.17.2014, STDORGCD==0 & cut==0 ) #exclude planted and logged forests#
F2 <- subset(S4swPREC) #
#
#Convert variables to standard names and metric units#
F2$DIAmean <- (F2$DIAendmean* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <- (F2$DIAbeginmean *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$TPAsum <- (F2$endsumTPA /0.404686)			#number of trees per hectare by plot at resurvey#
F2$PREV_TPAsum <- (F2$startsumTPA /0.404686)	#number of trees per hectare by plot at initial survey (cm)#
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
#
#calculate change in Stem density and mean tree diameter for each plot#
F2$TPAchg <- F2$TPAsum-F2$PREV_TPAsum#
F2$DIAchg <- F2$DIAmean-F2$PREV_DIAmean
F2
#Convert variables to standard names and metric units#
F2$DIAmean <- (F2$DIAendmean* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <- (F2$DIAbeginmean *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$TPAsum <- (F2$endsumTPA /0.404686)			#number of trees per hectare by plot at resurvey#
F2$PREV_TPAsum <- (F2$startsumTPA /0.404686)	#number of trees per hectare by plot at initial survey (cm)#
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
#
#calculate change in Stem density and mean tree diameter for each plot#
F2$TPAchg <- F2$TPAsum-F2$PREV_TPAsum#
F2$DIAchg <- F2$DIAmean-F2$PREV_DIAmean#
#
#setup color ramp#
 palette(adjustcolor(((rich.colors(60))), transform=diag(c(0.95,1,0.85,1)))) #
stockcols <- rev(palette())#
#Climate Colors:#
pt <- "steelblue1" #pluvial trend#
pe <- "royalblue"	#pluvial event#
dt <- "goldenrod1" #drought trend#
de <- "orange2"  	#drought event#
nt <- "grey55"#
ne <- "grey35"#
ag1 <- 25#
#select model type and bootstraped error on/off#
ModelType <- 3 #1=Even increment w/ moving average, 2=Even increment only, 3=Textbook #
ErrorOn <- 1  #1=Yes, 0=No#
#
#create plot#
plot(c((F2$PREV_DIAmean),(F2$DIAmean)),c((F2$PREV_TPAsum),(F2$TPAsum)), type ="n", col="grey94", #
	main=c("Empirical Model of 5-year forest density change, DBH>=12.7 cm", "FIA survey 1998-2012, Eastern USA") #
	,ylim=c(50,950), xlim=c(14, 43), mgp=c(2,1,0)#
	,xlab=NA, ylab=NA, axes=FALSE) #1250#
#
axis(side=1, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=2, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=1, lwd=0, line= -0.7)#
axis(side=2, lwd=0, line= -0.7)#
mtext(side=1, "Mean tree diameter (cm)", line=1.2)#
mtext(side=2, expression(paste("Stem density (trees ha"^"-1",")")), line=1.2)#
box()#
#
#plot all plots as individual background vectors colored by inital stocking #
arrows((F2$PREV_DIAmean),(F2$PREV_TPAsum),(F2$DIAmean),(F2$TPAsum), col= (F2$PREV_STOCKINGmid/4)+18, length=0.065, angle=22,lwd=0.9)  #
#
#Set up plot with relative plot locations and legend - for dev.new(width=8, height=6) #
x1 <- 39*1.05#
x2 <- 39.8*1.05#
y1 <- (c(seq(1200,820,-38))-50)*0.73#-22#
y2 <- (c(seq(1220,800,-5))-75)*.75 #-22#
x1b <- (x1-5.5)*0.965 #x1b <- x1-7.5#
y1b <- (y1[1]+110)*.69 #-264 #y1b <- y1[1]-215#
cex1 <- 0.8#
cexA <- 3 #succession large labels#
t3 <- 32 #33.5  #transition mean diameter between independent vectors and moving average#
lw2 <- 2 #arrow width#
slopetable <- NULL#
colS <- "#00000090"
#legend#
segments(x1-0.2,y2,x2+0.2, y2, col=c(stockcols[seq(16,46,0.35)]),lwd=2, lend=2)#
points(30,750, pch=16, cex=200, col="#FFFFFF75" ) #FFFFFF50#
points(x1b-0.5,y1b+165, pch=15, cex=25, col="#FFFFFF90" ) #FFFFFF75#
#segments(t3,0,t3,600, col="white", lwd=0.75)#
segments(c(x1-1.5,x1-1.5,x1-1.5),c( y2[1]+5, y2[39], y2[85]),x2+0.3,c(y2[1]+5, y2[39], y2[85]), col="black",lwd=0.9, lend=2)#
segments((x1-1.5),( y2[10]),x2+0.3,(y2[10]), col="black",lwd=0.9, lend=2, lty="dashed")#
arrows(x1b-2.5, y1b, x1b+1.5, y1b, code=3, length=0.08)#
arrows(x1b, y1b+200,x1b, y1b-75, code=3, length=0.08)#
arrows(x1,y1,x2,y1, col="black", length=0.085, angle=25,lwd=lw2+0.75)  #
arrows(x1,y1,x2,y1, col=c(stockcols[seq(17,44,2.4)]), length=0.08, angle=28,lwd=lw2)  #
#text(x1+2.25, y1[1]+55,"Initial relative density", cex=0.9, pos=2) #initial plot stocking and mean change vector increments#
text(x1, y1[1]-5,"Over", cex=cex1, pos=2) #initial plot stocking and mean change vector increments#
text(x1, y1[4]+10,"Full", cex=cex1, pos=2) #initial plot stocking and mean change vector increments#
text(x1, y1[9]+10,"Under", cex=cex1, pos=2) #initial plot stocking and mean change vector increments#
#
F2l <- subset(F2, PREVSTOCKING5mid>60  ) ##
fit4<-rq(log10(TPAsum) ~ log10(DIAmean), tau=0.90, data=F2l)#
lml<-summary(fit4)#
x<-seq(0,50, 0.5)#
y=((x^ lml$coefficients[2])* 10^lml$coefficients[1]) # #325000  #Best fit for early succession without saplings#
lines((y)~(x), col="#00000090", lty="dotted", lwd=6.5) # "#00000090"#
#
#Future average:	 BASED ON results from future equilibrium model below#
cond <- "3"#
x <- 34.27#
y <- 280.8#
xer <- 0.372*2#
yer <- 5.096*2#
points(x,y, pch=21, col=NA, bg="grey35", cex=0.75)#
segments(x-xer,y, x+xer, y, col="#00000075", lwd=1.5)#
segments(x,y-yer, x, y+yer, col="#00000075", lwd=1.5)#
#
#manually remove overlapping vectors#
DuplicatedVectors <- c(31, 31.5,33.5, 36, 38, 8026.2, 25012.7, 50014, 9027.5, 1024.5, 1026, 1027.5, 16032, 16012.7, 1029, 1032, 1030.5, 1612.7, 9030.5, 9032, 15032, 9029, 50014.1, 10031.5, 10036, 9024.5, 42030.5, 16030.5, 9531.5, 9534.5, 9536, 12033.5, 12036, 33029, 40, 9540, 12040, 80040, 80036, 80038) #16029  9633.5, 9636, 9532
##ESM mean vector calculation and plotting with for loops#
L <- ifelse(ModelType==3, 4,1)#
for(o in ErrorOn:2){#
for(l in 1:L){#
#
####Organize and subset data to plot with FOR loops #
if(ModelType==1){#
###Null model even increments, moving average vectors#
STOCKval <- c(0,0,seq(0, 141, 8))#
QMDvalues <- seq(0,50, 0.5)#
s1 <- s2 <- s3 <- s4 <- 20#
increment <- 3#
}#
#
if(ModelType==2){#
###Null model even increment vectors#
STOCKval <- seq(0, 121, 10)#
QMDvalues <- seq(0,50, 2)#
s1 <- s2 <- s3 <- s4 <- 20#
increment <- 1#
}#
#
if(ModelType==3){#
#ESM Density with non-overlapping vectors#
#looped by phase space location to have sufficient underlying data and to exclude excessive vectors#
#
if(l==1){	#independent dense#
STOCKval <- c(1, 9, 16, 25, 33, 42, 50, 59, 69, 79, 89,  101) #
QMDvalues <- c(12.7, 14.1, seq(15.5, t3, 1.5)) #
s1 <- s2 <- s3 <- s4 <- 3#
increment <- 1}#
#
if(l==4){	  ##moving average end#
STOCKval <- c(0, 9.5, 12, 25, NA, NA, 12, 20, 35, 50, 65, 80, 100, 120, 140 ) #
#QMDvalues <- c(seq(t3, 42, 1.8), 42)#
QMDvalues <- c(t3-0.5, 33.5, 34.5, 36, 40, 42, NA, NA, 38, 40, 45, 47)#
#QMDvalues <- c(t3, 33.5, 35, 38, 42, 45)#
s1 <- 3#
s2 <- 3#
s3 <- 3#
s4 <- 3#
increment <- 2}#
#
if(l==3){	  #overstocked#
STOCKval <- c(100, 122)#
QMDvalues <- c(12.5, 15, 18.5, 20, 21.5, 23, 24.5, 26.8, 28.5,  33)#
s1 <- s2 <- s3 <- s4 <- 3#
increment <- 1}#
#
if(l==2){	    #Bottom right####
STOCKval <- c(0, 8, 16)  #
QMDvalues <- c(26.2, 28, 31, 34) #, 38, 44)#
s1 <- s2 <- s3 <- s4 <- 4 #
increment <- 1}#
} #for Model type 3#
#Subset by stocking range then mean diameter range#
if(o==1)#
{#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{		#
		stockcol <- (mean(S11q$PREV_STOCKINGmid,na.rm=TRUE)/4)+18#
		stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors#
if(mean(S11q$TPAsum, na.rm=TRUE)>1000){next} #exclude outliers#
#
#Plot mean change vector#
arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)), col=stockcol, length=0.08, angle=28,lwd=lw2+1.25)  #
#
#Plot bootstraped error associated with mean diameter and stem density change #
endTPAerror <- boot(S11q$TPAchg, meanFunc, R=1000)	#
endTPAerror <- sqrt(var(endTPAerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))+endTPAerror),  #
					col="grey60", type="l", lwd=0.7)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))-endTPAerror),  #
					col="grey60", type="l", lwd=0.7)#
endQMDerror <- boot(S11q$DIAchg, meanFunc, R=1000)				#
endQMDerror <- sqrt(var(endQMDerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)+endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey60", type="l", lwd=0.7)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)-endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey60", type="l", lwd=0.7)#
		}#
	}#
  }#
}#
#Replot with bold vectors#
if(o==2)#
{#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
	#print(length(S11q$PREV_DIAmean))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{				#
stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
#print(stkqmd)#
if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors#
if(mean(S11q$TPAsum, na.rm=TRUE)>1000){next} #exclude outliers#
#
stockcol <- (mean(S11q$PREV_STOCKINGmid,na.rm=TRUE)/4)+18 #
#
#summery change inset - summary of mean vectors#
 	arrows(x1b,y1b,(x1b+mean(S11q$DIAchg, na.rm=TRUE)),(y1b+mean(S11q$TPAchg, na.rm=TRUE)), col="grey15", length=0.055, angle=25,lwd=lw2+0.4) #
	arrows(x1b,y1b,(x1b+mean(S11q$DIAchg, na.rm=TRUE)),(y1b+mean(S11q$TPAchg, na.rm=TRUE)), col=stockcol, length=0.05, angle=28,lwd=lw2)#
	slope <- mean(S11q$TPAchg, na.rm=TRUE)/mean(S11q$DIAchg, na.rm=TRUE)#
	slopetable <- rbind(slopetable, slope)#
#
arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)), col= "grey15", length=0.08, angle=25,lwd=lw2+1)  #
arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)), col= stockcol, length=0.08, angle=28,lwd=lw2)	#
#
#text(mean(S11q$DIAmean, na.rm=TRUE),mean(S11q$TPAsum, na.rm=TRUE), label= stkqmd)#
		}#
  	}#
  }#
}#
}  #l loop#
} #o loop#
#
summary(slopetable)#
#segments(x1-6,y1[1]+115,x1+2, y1[1]+100, col="#FFFFFF95",lwd=23, lend=2)#
boxed.labels(x1-5, y1[1]+110, "5-year Temperate Forest Density Change",bg="white", border=F, cex=1.05, col="black", font=3, ypad=0.7)#
#
#####Plot summary INSET text#
arrows(x1b-2.5, y1b, x1b+1.5, y1b, code=3, length=0.08, col="#00000050")#
arrows(x1b, y1b+200,x1b, y1b-75, code=3, length=0.08, col="#00000050")#
text(x1b+1.7, y1b-45,"Self\nthinning", cex=cex1) #(letters) could correspond to % of each in each quadrant (A%|B%|C%)#
text(x1b+2.2, y1b,"Gap filling", pos=3, cex=cex1)#
par(lheight=.75)#
text(x1b-2.5, y1b+50, "Low density\noverstory\nrecruitment", pos=3, cex=cex1) #
text(x1b+0.5, y1b+140,"Early\nsuccession", pos=4, cex=cex1)#
text(x1b-0.1, y1b+180,"+200 trees", pos=3, cex=cex1-0.1)#
text(x1b-0.1, y1b-55,"-75 trees", pos=1, cex=cex1-0.1)#
text(x1b+1.1, y1b,"+1.5 cm", pos=4, cex=cex1-0.1)#
text(x1b-2.2, y1b,"-2.5 cm", pos=2, cex=cex1-0.1)#
#text(x1b-1.5, y1b-60,"Equilibrium", pos=3, cex=cex1, col="black")#
#filledellipse(rx1=0.75, ry1=20, mid=c(x1b-0.3,y1b), angle=1.5, lcol="black", col=NULL, lty=3, lwd=0.5)#
#text(x1b, y1b+265,(("Successional trajectory summary")), pos=3, cex=cex1)#
#boxed.labels(x1b-0.65, y1[1]+55,"Successional summary",bg="#FFFFFF50", border=F, cex=0.9)#
#boxed.labels(x1b-5.25, y1[1]+35,"Successional\nsummary",bg="#FFFFFF00", border=F, cex=0.9, pos=4)#
boxed.labels(x1b-3, y1[1]+52,"Inset A",bg="#FFFFFF50", border=F, cex=0.9, xpad=1.3, ypad=1.3)#
lines(c(x1b-4.75, x1b-4.75), c(y1b+10, y1b+260), lwd=0.5)#
#lines(c(x1b-4, x1b-2.05), c(y1b-55, y1b-55), lwd=0.5)#
text(x1+0.83, c(y1+10, y1[11]-15),c("120","100","90", "80","70", "60","50","40","30", "20", "10", "1"), cex=0.85, pos=4)#
text(x1+2.7, y1[1]+52,"Initial relative density", cex=0.9, pos=2) #initial plot stocking and mean change vector increments#
box()#
############### END DENSITY MODEL
dev.new(width=8, height=6) #set up plot#
S4swPREC <-  subset(RM5mergedfullcut1991.11.17.2014, STDORGCD==0 & cut==0 ) #exclude planted and logged forests#
F2 <- subset(S4swPREC) #
#
#Convert variables to standard names and metric units#
F2$DIAmean <- (F2$DIAendmean* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <- (F2$DIAbeginmean *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$TPAsum <- (F2$endsumTPA /0.404686)			#number of trees per hectare by plot at resurvey#
F2$PREV_TPAsum <- (F2$startsumTPA /0.404686)	#number of trees per hectare by plot at initial survey (cm)#
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
#
#calculate change in Stem density and mean tree diameter for each plot#
F2$TPAchg <- F2$TPAsum-F2$PREV_TPAsum#
F2$DIAchg <- F2$DIAmean-F2$PREV_DIAmean#
#
#setup color ramp#
 palette(adjustcolor(((rich.colors(60))), transform=diag(c(0.95,1,0.85,1)))) #
stockcols <- rev(palette())#
#Climate Colors:#
pt <- "steelblue1" #pluvial trend#
pe <- "royalblue"	#pluvial event#
dt <- "goldenrod1" #drought trend#
de <- "orange2"  	#drought event#
nt <- "grey55"#
ne <- "grey35"#
ag1 <- 25#
#select model type and bootstraped error on/off#
ModelType <- 3 #1=Even increment w/ moving average, 2=Even increment only, 3=Textbook #
ErrorOn <- 1  #1=Yes, 0=No#
#
#create plot#
plot(c((F2$PREV_DIAmean),(F2$DIAmean)),c((F2$PREV_TPAsum),(F2$TPAsum)), type ="n", col="grey94", #
	main=c("Empirical Model of 5-year forest density change, DBH>=12.7 cm", "FIA survey 1998-2012, Eastern USA") #
	,ylim=c(50,950), xlim=c(14, 43), mgp=c(2,1,0)#
	,xlab=NA, ylab=NA, axes=FALSE) #1250#
#
axis(side=1, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=2, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=1, lwd=0, line= -0.7)#
axis(side=2, lwd=0, line= -0.7)#
mtext(side=1, "Mean tree diameter (cm)", line=1.2)#
mtext(side=2, expression(paste("Stem density (trees ha"^"-1",")")), line=1.2)#
box()#
#
#plot all plots as individual background vectors colored by inital stocking #
arrows((F2$PREV_DIAmean),(F2$PREV_TPAsum),(F2$DIAmean),(F2$TPAsum), col= (F2$PREV_STOCKINGmid/4)+18, length=0.065, angle=22,lwd=0.9)  #
#
#Set up plot with relative plot locations and legend - for dev.new(width=8, height=6) #
x1 <- 39*1.05#
x2 <- 39.8*1.05#
y1 <- (c(seq(1200,820,-38))-50)*0.73#-22#
y2 <- (c(seq(1220,800,-5))-75)*.75 #-22#
x1b <- (x1-5.5)*0.965 #x1b <- x1-7.5#
y1b <- (y1[1]+110)*.69 #-264 #y1b <- y1[1]-215#
cex1 <- 0.8#
cexA <- 3 #succession large labels#
t3 <- 32 #33.5  #transition mean diameter between independent vectors and moving average#
lw2 <- 2 #arrow width#
slopetable <- NULL#
colS <- "#00000090"#
#
#legend#
segments(x1-0.2,y2,x2+0.2, y2, col=c(stockcols[seq(16,46,0.35)]),lwd=2, lend=2)#
points(30,750, pch=16, cex=200, col="#FFFFFF75" ) #FFFFFF50#
points(x1b-0.5,y1b+165, pch=15, cex=25, col="#FFFFFF90" ) #FFFFFF75#
#segments(t3,0,t3,600, col="white", lwd=0.75)#
segments(c(x1-1.5,x1-1.5,x1-1.5),c( y2[1]+5, y2[39], y2[85]),x2+0.3,c(y2[1]+5, y2[39], y2[85]), col="black",lwd=0.9, lend=2)#
segments((x1-1.5),( y2[10]),x2+0.3,(y2[10]), col="black",lwd=0.9, lend=2, lty="dashed")#
arrows(x1b-2.5, y1b, x1b+1.5, y1b, code=3, length=0.08)#
arrows(x1b, y1b+200,x1b, y1b-75, code=3, length=0.08)#
arrows(x1,y1,x2,y1, col="black", length=0.085, angle=25,lwd=lw2+0.75)  #
arrows(x1,y1,x2,y1, col=c(stockcols[seq(17,44,2.4)]), length=0.08, angle=28,lwd=lw2)  #
#text(x1+2.25, y1[1]+55,"Initial relative density", cex=0.9, pos=2) #initial plot stocking and mean change vector increments#
text(x1, y1[1]-5,"Over", cex=cex1, pos=2) #initial plot stocking and mean change vector increments#
text(x1, y1[4]+10,"Full", cex=cex1, pos=2) #initial plot stocking and mean change vector increments#
text(x1, y1[9]+10,"Under", cex=cex1, pos=2) #initial plot stocking and mean change vector increments#
#
F2l <- subset(F2, PREVSTOCKING5mid>60  ) ##
fit4<-rq(log10(TPAsum) ~ log10(DIAmean), tau=0.90, data=F2l)#
lml<-summary(fit4)#
x<-seq(0,50, 0.5)#
y=((x^ lml$coefficients[2])* 10^lml$coefficients[1]) # #325000  #Best fit for early succession without saplings#
lines((y)~(x), col="#00000090", lty="dotted", lwd=6.5) # "#00000090"#
#
#Future average:	 BASED ON results from future equilibrium model below#
cond <- "3"#
x <- 34.27#
y <- 280.8#
xer <- 0.372*2#
yer <- 5.096*2#
points(x,y, pch=21, col=NA, bg="grey35", cex=0.75)#
segments(x-xer,y, x+xer, y, col="#00000075", lwd=1.5)#
segments(x,y-yer, x, y+yer, col="#00000075", lwd=1.5)#
#
#manually remove overlapping vectors#
DuplicatedVectors <- c(31, 31.5,33.5, 36, 38, 8026.2, 25012.7, 50014, 9027.5, 1024.5, 1026, 1027.5, 16032, 16012.7, 1029, 1032, 1030.5, 1612.7, 9030.5, 9032, 15032, 9029, 50014.1, 10031.5, 10036, 9024.5, 42030.5, 16030.5, 9531.5, 9534.5, 9536, 12033.5, 12036, 33029, 40, 9540, 12040, 80040, 80036, 80038) #16029  9633.5, 9636, 9532#
#
##ESM mean vector calculation and plotting with for loops#
L <- ifelse(ModelType==3, 4,1)#
for(o in ErrorOn:2){#
for(l in 1:L){#
#
####Organize and subset data to plot with FOR loops #
if(ModelType==1){#
###Null model even increments, moving average vectors#
STOCKval <- c(0,0,seq(0, 141, 8))#
QMDvalues <- seq(0,50, 0.5)#
s1 <- s2 <- s3 <- s4 <- 20#
increment <- 3#
}#
#
if(ModelType==2){#
###Null model even increment vectors#
STOCKval <- seq(0, 121, 10)#
QMDvalues <- seq(0,50, 2)#
s1 <- s2 <- s3 <- s4 <- 20#
increment <- 1#
}#
#
if(ModelType==3){#
#ESM Density with non-overlapping vectors#
#looped by phase space location to have sufficient underlying data and to exclude excessive vectors#
#
if(l==1){	#independent dense#
STOCKval <- c(1, 9, 16, 25, 33, 42, 50, 59, 69, 79, 89,  101) #
QMDvalues <- c(12.7, 14.1, seq(15.5, t3, 1.5)) #
s1 <- s2 <- s3 <- s4 <- 3#
increment <- 1}#
#
if(l==4){	  ##moving average end#
STOCKval <- c(0, 9.5, 12, 25, NA, NA, 12, 20, 35, 50, 65, 80, 100, 120, 140 ) #
#QMDvalues <- c(seq(t3, 42, 1.8), 42)#
QMDvalues <- c(t3-0.5, 33.5, 34.5, 36, 40, 42, NA, NA, 38, 40, 45, 47)#
#QMDvalues <- c(t3, 33.5, 35, 38, 42, 45)#
s1 <- 3#
s2 <- 3#
s3 <- 3#
s4 <- 3#
increment <- 2}#
#
if(l==3){	  #overstocked#
STOCKval <- c(100, 122)#
QMDvalues <- c(12.5, 15, 18.5, 20, 21.5, 23, 24.5, 26.8, 28.5,  33)#
s1 <- s2 <- s3 <- s4 <- 3#
increment <- 1}#
#
if(l==2){	    #Bottom right####
STOCKval <- c(0, 8, 16)  #
QMDvalues <- c(26.2, 28, 31, 34) #, 38, 44)#
s1 <- s2 <- s3 <- s4 <- 4 #
increment <- 1}#
} #for Model type 3#
#Subset by stocking range then mean diameter range#
if(o==1)#
{#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{		#
		stockcol <- (mean(S11q$PREV_STOCKINGmid,na.rm=TRUE)/4)+18#
		stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors#
if(mean(S11q$TPAsum, na.rm=TRUE)>1000){next} #exclude outliers#
#
#Plot mean change vector#
arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)), col=stockcol, length=0.08, angle=28,lwd=lw2+1.25)  #
#
#Plot bootstraped error associated with mean diameter and stem density change #
endTPAerror <- boot(S11q$TPAchg, meanFunc, R=1000)	#
endTPAerror <- sqrt(var(endTPAerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))+endTPAerror),  #
					col="grey60", type="l", lwd=0.7)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))-endTPAerror),  #
					col="grey60", type="l", lwd=0.7)#
endQMDerror <- boot(S11q$DIAchg, meanFunc, R=1000)				#
endQMDerror <- sqrt(var(endQMDerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)+endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey60", type="l", lwd=0.7)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)-endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey60", type="l", lwd=0.7)#
		}#
	}#
  }#
}#
#Replot with bold vectors#
if(o==2)#
{#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
	#print(length(S11q$PREV_DIAmean))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{				#
stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
#print(stkqmd)#
if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors#
if(mean(S11q$TPAsum, na.rm=TRUE)>1000){next} #exclude outliers#
#
stockcol <- (mean(S11q$PREV_STOCKINGmid,na.rm=TRUE)/4)+18 #
#
#summery change inset - summary of mean vectors#
 	arrows(x1b,y1b,(x1b+mean(S11q$DIAchg, na.rm=TRUE)),(y1b+mean(S11q$TPAchg, na.rm=TRUE)), col="grey15", length=0.055, angle=25,lwd=lw2+0.4) #
	arrows(x1b,y1b,(x1b+mean(S11q$DIAchg, na.rm=TRUE)),(y1b+mean(S11q$TPAchg, na.rm=TRUE)), col=stockcol, length=0.05, angle=28,lwd=lw2)#
	slope <- mean(S11q$TPAchg, na.rm=TRUE)/mean(S11q$DIAchg, na.rm=TRUE)#
	slopetable <- rbind(slopetable, slope)#
#
arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)), col= "grey15", length=0.08, angle=25,lwd=lw2+1)  #
arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)), col= stockcol, length=0.08, angle=28,lwd=lw2)	#
#
#text(mean(S11q$DIAmean, na.rm=TRUE),mean(S11q$TPAsum, na.rm=TRUE), label= stkqmd)#
		}#
  	}#
  }#
}#
}  #l loop#
} #o loop#
#
summary(slopetable)#
#segments(x1-6,y1[1]+115,x1+2, y1[1]+100, col="#FFFFFF95",lwd=23, lend=2)#
boxed.labels(x1-5, y1[1]+110, "5-year Temperate Forest Density Change",bg="white", border=F, cex=1.05, col="black", font=3, ypad=0.7)#
#
#####Plot summary INSET text#
arrows(x1b-2.5, y1b, x1b+1.5, y1b, code=3, length=0.08, col="#00000050")#
arrows(x1b, y1b+200,x1b, y1b-75, code=3, length=0.08, col="#00000050")#
text(x1b+1.7, y1b-45,"Self\nthinning", cex=cex1) #(letters) could correspond to % of each in each quadrant (A%|B%|C%)#
text(x1b+2.2, y1b,"Gap filling", pos=3, cex=cex1)#
par(lheight=.75)#
text(x1b-2.5, y1b+50, "Low density\noverstory\nrecruitment", pos=3, cex=cex1) #
text(x1b+0.5, y1b+140,"Early\nsuccession", pos=4, cex=cex1)#
text(x1b-0.1, y1b+180,"+200 trees", pos=3, cex=cex1-0.1)#
text(x1b-0.1, y1b-55,"-75 trees", pos=1, cex=cex1-0.1)#
text(x1b+1.1, y1b,"+1.5 cm", pos=4, cex=cex1-0.1)#
text(x1b-2.2, y1b,"-2.5 cm", pos=2, cex=cex1-0.1)#
#text(x1b-1.5, y1b-60,"Equilibrium", pos=3, cex=cex1, col="black")#
#filledellipse(rx1=0.75, ry1=20, mid=c(x1b-0.3,y1b), angle=1.5, lcol="black", col=NULL, lty=3, lwd=0.5)#
#text(x1b, y1b+265,(("Successional trajectory summary")), pos=3, cex=cex1)#
#boxed.labels(x1b-0.65, y1[1]+55,"Successional summary",bg="#FFFFFF50", border=F, cex=0.9)#
#boxed.labels(x1b-5.25, y1[1]+35,"Successional\nsummary",bg="#FFFFFF00", border=F, cex=0.9, pos=4)#
boxed.labels(x1b-3, y1[1]+52,"Inset A",bg="#FFFFFF50", border=F, cex=0.9, xpad=1.3, ypad=1.3)#
lines(c(x1b-4.75, x1b-4.75), c(y1b+10, y1b+260), lwd=0.5)#
#lines(c(x1b-4, x1b-2.05), c(y1b-55, y1b-55), lwd=0.5)#
text(x1+0.83, c(y1+10, y1[11]-15),c("120","100","90", "80","70", "60","50","40","30", "20", "10", "1"), cex=0.85, pos=4)#
text(x1+2.7, y1[1]+52,"Initial relative density", cex=0.9, pos=2) #initial plot stocking and mean change vector increments#
box()#
############### END DENSITY MODEL
box()
##########################################################################################################################
###############FIGURE 1B - ESM CARBON MODEL ##############################################################################
#
F2 <- subset(S4swPREC)#
#Re-use previous plot variables - Change Y-axis to vegetation carbon#
F2$DIAmean <- (F2$DIAendmean* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <- (F2$DIAbeginmean *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$TPAsum <- F2$carbon1sum* 0.00112085116  #	#convert living carbon to Mg/ha#
F2$PREV_TPAsum <- F2$PREVcarbon1sum* 0.00112085116 ##convert living carbon to Mg/ha#
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
#
#calculate change in CARBON and mean tree diameter for each plot#
F2$TPAchg <- F2$TPAsum-F2$PREV_TPAsum#
F2$DIAchg <- F2$DIAmean-F2$PREV_DIAmean#
#######################################################################
#set up plot#
dev.new(width=8, height=4.5)#
#
#create plot#
plot(c((F2$PREV_DIAmean),(F2$DIAmean)),c((F2$PREV_TPAsum),(F2$TPAsum)), type ="n", col="grey94", #
	main=c("Empirical Model of 5-year forest carbon change, DBH>=12.7 cm", "FIA survey 1997-2012, Eastern USA") #
	,ylim=c(6.5,200), xlim=c(14, 43), mgp=c(2,1,0)#
	,xlab=NA, ylab=NA, axes=FALSE) #1250#
#
axis(side=1, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=2, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=1, lwd=0, line= -0.7)#
axis(side=2, lwd=0, line= -0.7)#
#
mtext(side=1, "Mean tree diameter (cm)", line=1.2)#
mtext(side=2, expression(paste("Carbon, living trees (Mg ha"^"-1",")")), line=1.2)#
#
box()#
#
#plot all plots as individual background vectors colored by inital stocking #
arrows((F2$PREV_DIAmean),(F2$PREV_TPAsum),(F2$DIAmean),(F2$TPAsum), col= (F2$PREV_STOCKINGmid/4)+18, length=0.065, angle=22,lwd=0.9)#
#Set up plot with relative plot locations and legend - ideal for dev.new(width=8, height=4.5)#
x1 <- 14-0.5#
x2 <- 14+0.5#
y1 <- (c(seq(32,26.05,-.55))*2.5-52)*6.1#
y2 <- (c(seq(32.2,26.25,-0.085))*2.5-52)*6.1#
y3 <- (c(seq(31.8,26,-0.73))*2.5-52)*6.1#
x1b <- x1-7 #x1b <- x1-7.5#
y1b <- y1[1]-264 #y1b <- y1[1]-215#
cex1 <- 0.8#
t3 <- 32 #transition mean diameter between independent vectors and moving average#
lw2 <- 2 #arrow width
#LEGEND#
stockcols2 <- rev((seq(1,120,15)/4)+18)#
segments(x1,y2,x2, y2, c(seq(45,18, -0.384)),lwd=2, lend=2) #c(seq(66,38,-0.3))  col="grey85"#
points(30,100, pch=16, cex=200, col="#FFFFFF75" ) #FFFFFF75#
text(x1-0.25, y1[1]+26,"5-year Temperate Forest Carbon Change", pos=4, cex=1.05, font=3)#
segments(c(x1,x1,x1),c( y2[1], y2[36],  y2[71]),x2+1.25 ,c(y2[1], y2[36],  y2[71]), col="black",lwd=0.9, lend=2)#
segments(c(x1),c(y2[10]),x2+1.25,c(y2[10]), col="black",lwd=0.9, lend=2, lty="dashed")#
arrows(x1+0.1,y3,x2-0.1,y3, col="black", length=0.085, angle=25,lwd=lw2+1)  #
arrows(x1+0.1,y3,x2-0.1,y3, col=c(stockcols2), length=0.08, angle=28,lwd=lw2)  #
text(x1-.5, y1[1]+10,"Initial relative density", cex=0.9, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[1]-5,"Over", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[4],"Full", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[9],"Under", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
#
#Carbon thinning line - fit to tree diameters >5 inches with relative densities between 90-110#
F2l <- subset(F2, PREVSTOCKING5mid>=90 & PREVSTOCKING5mid<=110 & DIAmean<40)#
lml <- summary(lm((F2l$TPAsum)~(F2l$DIAmean) ))#
print(c(lml$coefficients[2], "self thinning line best fit scaling exponent"))#
x=seq(0,50,0.5) #seq(22,35.5,0.5)#
y=(lml$coefficients[2]*x+lml$coefficients[1])  #Best fit #
lines((y)~(x), col="#00000090", lty="dotted", lwd=5) # "#00000085"#
#Future average: BASED ON results from future equilibrium model below#
cond <- "3"	#
x <- 34.27#
y <- 116.5#
xer <- 0.372*2#
yer <- 3.54*2#
points(x,y, pch=21, col=NA, bg="grey35", cex=0.75)#
segments(x-xer,y, x+xer, y, col="#00000075", lwd=1.5)#
segments(x,y-yer, x, y+yer, col="#00000075", lwd=1.5)
####Organize and subset data to plot with FOR loops #
#looped by phase space location to have sufficient underlying data and to exclude excessive vectors#
DuplicatedVectors <- c(5031, 5034.6, 5036.4, 15036.4) #
slopetable <- NULL#
for(o in 1:2){#
for(l in 1:5){#
#
if(l==1){	  ##Reforestation#
STOCKval <- c(4,15)#
QMDvalues <- c(seq(21.7,30.7, 3), 36, 45) #c(18,21,24,29, 45)  ##
s1 <- 5#
s2 <- 5#
s3 <- 5#
s4 <- 5#
increment=1}#
#
if(l==2){	  ##Early succession		#
STOCKval <- c(seq(0, 70, 121/7), 82, 101, 121) #6#
QMDvalues <- c(seq(14.5,21.7,1.8)) #c(seq(12,18.4,3.2))  ##
s1 <- 5 #30#
s2 <- 5 #10#
s3 <- 5 #10#
s4 <- 5 #5#
increment=1}#
#
if(l==3){	  ##middle#
STOCKval <- c(15, 32, seq(41, 85, 65/5),98,121) #121,121,121#
QMDvalues <- c(seq(21.7,t3, 10.3/6))  ##
s1 <- 30#
s2 <- 10#
s3 <- 20#
s4 <- 2#
increment=1}#
#
if(l==4){	  ##moving average end#
STOCKval <- c(5, 15, NA, 30, 38, NA, NA,20, 40, 55, 55, 60, 75, NA, NA,NA, 65, 85, 100, 85, 98, 121) #121, 121) #121,121,121#
QMDvalues <- c(seq(t3-1,45,1.8), 50)  ##
s1 <- 40 #100#
s2 <- 30 #50#
s3 <- 3#40#
s4 <- 5#
increment=3}#
#
if(l==5){	  ##Early early succession#
STOCKval <- c(0, 5, 15, seq(30, 121, 91/6)) #6#
QMDvalues <- c(12.7, 14.5) #
s1 <- 3 #30#
s2 <- 3 #10#
s3 <- 3#10#
s4 <- 3#5#
increment=1}#
#
#Subset by stocking range then mean diameter range#
if(o==1){#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{		#
		stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
		if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors#
		stockcol <- (mean(S11q$PREV_STOCKINGmid,na.rm=TRUE)/4)+18#
#Plot mean change vector#
		arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)),col=(stockcol), length=0.085, angle=25,lwd=lw2+1.25) #
#
#Plot bootstraped error associated with mean diameter and stem density change #
endTPAerror <- boot(S11q$TPAchg, meanFunc, R=1000)	#
endTPAerror <- sqrt(var(endTPAerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))+endTPAerror),  #
					col="grey50", type="l", lwd=0.75)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))-endTPAerror),  #
					col="grey50", type="l", lwd=0.75)#
endQMDerror <- boot(S11q$DIAchg, meanFunc, R=1000)				#
endQMDerror <- sqrt(var(endQMDerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)+endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey50", type="l", lwd=0.75)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)-endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey50", type="l", lwd=0.75)#
	}}}}#
#
#Replot with bold vectors#
if(o==2){#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
#print(length(S11q$PREV_DIAmean))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{	#
		stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
		if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors			#
	arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)),col=("grey15"), length=0.085, angle=25,lwd=lw2+0.75) #
	arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)), col= (S11q$PREV_STOCKINGmid/4)+18, length=0.08, angle=28,lwd=lw2)  # VectCols[s] col=s*1.8+10,  s*1.2+7 # s*2+10 #stockcol#
#
print(c(stkqmd, l, s, h, mean(S11q$TPAchg, na.rm=T), sum(S11q$TPAchg>0, na.rm=T)))#
#
	}}}}#
 } #l loop#
} #o loop#
box()
options(scipen=999) #remove sci notation#
meanFunc <- function(x,i){mean(x[i], na.rm=TRUE)}#
#
##Load data from GITHUB
#RM5mergedfullcut1991.11.17.2014 <-  subset(RM5mergedfullcut1991.11.17.2014) # remove planted forests#
S4swPREC <-  subset(RM5mergedfullcut1991.11.17.2014, cut==0 & STDORGCD==0 ) #exclude planted and harvested forests#
F2 <- subset(S4swPREC)
F2
#############################################################################################################################
#######################   FIGURE 1 - EMPIRICAL FOREST DENSITY MODEL  ########################################################
#####
#dev.new(width=8, height=7.5) #set up plot#
dev.new(width=8, height=6.5) #set up plot#
S4swPREC <-  subset(RM5mergedfullcut1991.11.17.2014, STDORGCD==0 & cut==0 ) #exclude planted and logged forests#
F2 <- subset(S4swPREC, PREVCDstocksum < 10) #, PREVHydricstocksum==0 ) #
#
#Convert variables to standard names and metric units#
F2$DIAmean <-(F2$DIAendmean* 2.54 )  # log10(F2$carbon5sum/F2$endsumTPA ) #* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <-(F2$DIAbeginmean* 2.54) # log10(F2$PREVcarbon5sum/F2$startsumTPA) # *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$TPAsum <- (F2$endsumTPA /0.404686) #F2$carbon1sum/200 #			#number of trees per hectare by plot at resurvey#
F2$PREV_TPAsum <- (F2$startsumTPA /0.404686)	 #F2$PREVcarbon1sum/200 ##number of trees per hectare by plot at initial survey (cm)#
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
F2$TPAsum[F2$TPAsum== -Inf]<-0#
F2$DIAmean[F2$DIAmean== -Inf]<-0#
#calculate change in Stem density and mean tree diameter for each plot#
#F2$TPAchg <- F2$TPAsum-F2$PREV_TPAsum#
F2$TPAchg <- F2$endsumTPA-F2$startsumTPA#
F2$DIAchg <- F2$DIAmean-F2$PREV_DIAmean#
#
#setup color ramp#
 palette(adjustcolor(((rich.colors(50))), transform=diag(c(1,1,0.75,1)))) #
stockcols <- rev(palette())#
#Climate Colors:#
pt <- "steelblue1" #pluvial trend#
pe <- "royalblue"	#pluvial event#
dt <- "goldenrod1" #drought trend#
de <- "orange2"  	#drought event#
nt <- "grey55"#
ne <- "grey35"#
ag1 <- 25
S4swPREC <-  subset(RM5mergedfullcut1991.11.17.2014, STDORGCD==0 & cut==0 ) #exclude planted and logged forests#
F2 <- subset(S4swPREC, PREVCDstocksum < 10) #, PREVHydricstocksum==0 )
#Load library, set options, simple fuctions#
library(RColorBrewer)#
library(sp)#
library(data.table)#
library(spam)#
library(nlme)#
library(maps)#
library(ggplot2)#
library(modeest)#
library(effects)#
library(plyr)#
library(reshape2)#
library(ggmap)#
library(boot)#
library(gplots)#
library(shape)#
library(SDMTools)#
#library(grid)#
library(gridExtra)#
library(plotrix)#
library(foreach)#
library(doParallel)#
#library(doMC)#
#registerDoMC(cores=1)#
library(quantreg)#
library(fields)#
#library(grDevices)#
library(RCurl)#
library(compositions)#
library(rgl)#
library(lattice)#
options(scipen=999) #remove sci notation#
meanFunc <- function(x,i){mean(x[i], na.rm=TRUE)}#
#
##Load data from GITHUB
#RM5mergedfullcut1991.11.17.2014 <-  subset(RM5mergedfullcut1991.11.17.2014) # remove planted forests#
S4swPREC <-  subset(RM5mergedfullcut1991.11.17.2014, cut==0 & STDORGCD==0 ) #exclude planted and harvested forests#
F2 <- subset(S4swPREC)#
#
#############################################################################################################################
#######################   FIGURE 1 - EMPIRICAL FOREST DENSITY MODEL  ########################################################
#####
#dev.new(width=8, height=7.5) #set up plot#
dev.new(width=8, height=6.5) #set up plot#
S4swPREC <-  subset(RM5mergedfullcut1991.11.17.2014, STDORGCD==0 & cut==0 ) #exclude planted and logged forests#
F2 <- subset(S4swPREC, PREVCDstocksum < 10) #, PREVHydricstocksum==0 ) #
#
#Convert variables to standard names and metric units#
F2$DIAmean <-(F2$DIAendmean* 2.54 )  # log10(F2$carbon5sum/F2$endsumTPA ) #* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <-(F2$DIAbeginmean* 2.54) # log10(F2$PREVcarbon5sum/F2$startsumTPA) # *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$TPAsum <- (F2$endsumTPA /0.404686) #F2$carbon1sum/200 #			#number of trees per hectare by plot at resurvey#
F2$PREV_TPAsum <- (F2$startsumTPA /0.404686)	 #F2$PREVcarbon1sum/200 ##number of trees per hectare by plot at initial survey (cm)#
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
F2$TPAsum[F2$TPAsum== -Inf]<-0#
F2$DIAmean[F2$DIAmean== -Inf]<-0#
#calculate change in Stem density and mean tree diameter for each plot#
#F2$TPAchg <- F2$TPAsum-F2$PREV_TPAsum#
F2$TPAchg <- F2$endsumTPA-F2$startsumTPA#
F2$DIAchg <- F2$DIAmean-F2$PREV_DIAmean#
#
#setup color ramp#
 palette(adjustcolor(((rich.colors(50))), transform=diag(c(1,1,0.75,1)))) #
stockcols <- rev(palette())#
#Climate Colors:#
pt <- "steelblue1" #pluvial trend#
pe <- "royalblue"	#pluvial event#
dt <- "goldenrod1" #drought trend#
de <- "orange2"  	#drought event#
nt <- "grey55"#
ne <- "grey35"#
ag1 <- 25#
#select model type and bootstraped error on/off#
ModelType <- 1 #1=Even increment w/ moving average, 2=Even increment only, 3=Textbook #
ErrorOn <- 2  #1=Yes, 2=No#
#
#create plot#
plot(c((F2$PREV_DIAmean),(F2$DIAmean)),c((F2$PREV_TPAsum),(F2$TPAsum)), type ="n", col="grey94", #
	main=c("Empirical Succession Model: 5-year forest density change", "FIA survey 1998-2012, Eastern USA") #
	#,ylim=c(2.2,3.3), xlim=c(0.75,1.3), mgp=c(2,1,0)#
	,ylim=c(10, 1300), xlim=c(14,48), mgp=c(2,1,0)#
	#,ylim=c(20, 1000), xlim=c(18,31), mgp=c(2,1,0)#
	,xlab=NA, ylab=NA, axes=FALSE) #1250#
#
axis(side=1, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=2, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=1, lwd=0, line= -0.7)#
axis(side=2, lwd=0, line= -0.7)#
mtext(side=1, "Mean tree diameter (cm)", line=1.2)#
mtext(side=2, expression(paste("Stem density (trees ha"^"-1",")")), line=1.2)#
box()
stockcol <- ((F2$PREV_STOCKINGmid)/4)+18 #
arrows((F2$PREV_DIAmean),(F2$PREV_TPAsum),(F2$DIAmean),(F2$TPAsum), col= stockcol, length=0.065, angle=22,lwd=0.9)  #
#Set up plot with relative plot locations and legend - for dev.new(width=8, height=6) #
x1 <- 39*1.1#
x2 <- 39.8*1.1#
y1 <- (c(seq(1200,820,-38))+100)*0.95 #-22#
y2 <- (c(seq(1220,800,-5))+125)*.935 #-22#
x1b <- (x1-5.5)*0.965 #x1b <- x1-7.5#
y1b <- (y1[1]+110)*.69 #-264 #y1b <- y1[1]-215#
cex1 <- 0.8#
cexA <- 3 #succession large labels#
t3 <- 32 #33.5  #transition mean diameter between independent vectors and moving average#
lw2 <- 2 #arrow width#
slopetable <- NULL#
colS <- "#00000090"#
#
#legend#
points(30,750, pch=16, cex=200, col="#FFFFFF75" ) #FFFFFF50#
#segments(t3,0,t3,600, col="white", lwd=0.75)#
segments(c(x1-1.5,x1-1.5,x1-1.5),c( y2[1], y2[39], y2[85]-10),x2+0.3,c(y2[1], y2[39], y2[85]-10), col="black",lwd=0.9, lend=2)#
segments((x1-1.5),( y2[10]),x2+0.3,(y2[10]), col="black",lwd=0.9, lend=2, lty="dashed")#
arrows(x1,y1,x2,y1, col="black", length=0.085, angle=25,lwd=lw2+0.75)  #
arrows(x1,y1,x2,y1, col=c(seq(47,15, -3)), length=0.08, angle=28,lwd=lw2)  #
#text(x1+2.25, y1[1]+55,"Initial relative density", cex=0.9, pos=2) #initial plot stocking and mean change vector increments#
text(x1, y1[1]-5,"Maximum", cex=cex1, pos=2) #initial plot stocking and mean change vector increments#
text(x1, y1[4]+10,"High", cex=cex1, pos=2) #initial plot stocking and mean change vector increments#
text(x1, y1[9]+10,"Low", cex=cex1, pos=2) #initial plot stocking and mean change vector increments#
text(x1+0.83, c(y1+10, y1[11]-20),c("120","100","90", "80","70", "60","50","40","30", "20", "10", "1"), cex=0.85, pos=4)#
text(x1+5, y1[1]+52,"Relative resource limitation", cex=0.9, pos=2) #initial plot stocking and mean change vector increments#
# #thinning line -3/2 fit manually#
 x=seq(20,55,0.5)#
y=(x^(-1.5))* (90000) # 251789.41366 #325000  #Best fit for early succession without saplings#
#lines((y)~(x), col= "#00000050", lty="dotted", lwd=6.5) # "#00000090"#
F22<- subset(F2,DIAbeginmean>8) # & STOCKING5mid>0) #
fit4<-rq(log10(PREV_TPAsum)~ log10(PREV_DIAmean), tau=0.99, data=F22)#
lml<-summary(fit4)#
x=seq(0,55,0.5)#
y=(x^(lml$coefficients[2]))* (10^lml$coefficients[1]) # 251789.41366 #325000  #Best fit for early succession without saplings#
lines((y)~(x), col= "#00000050", lty="dotted", lwd=4.5) # "#00000090"#
F2$PFTstock<- (F2$PREVEHstocksum + F2$PREVEvergreenstocksum + F2$PREVHydricstocksum + F2$PREVLCstocksum+ F2$PREVLHstocksum + F2$PREVMCstocksum + F2$PREVNMHstocksum + F2$PREVNPstocksum + F2$PREVSMHstocksum + F2$PREVSPstocksum)#
#
F2late<- subset(F2, (PREVLHstocksum+1) > PFTstock & DIAbeginmean>8) # & STOCKING5mid>0) #
fit4<-rq(log10(PREV_TPAsum)~ log10(PREV_DIAmean), tau=0.99, data= F2late)#
lml<-summary(fit4)#
x=seq(0,55,0.5)#
y=(x^(lml$coefficients[2]))* (10^lml$coefficients[1]) # 251789.41366 #325000  #Best fit for early succession without saplings#
lines((y)~(x), col= "#00000050", lty="dotted", lwd=2.5) # "#00000090"#
#thinning line fit to highest stocked forests with non-linear best fit method#
 x=seq(0,55,0.5)#
 qt99<-quantile(F2$PREVSTOCKING5mid, 0.995)#
t22<- subset(F2,  PREVSTOCKING5mid> qt99 & DIAbeginmean>8) #
 y7 <- c(t22$PREV_TPAsum, t22$TPAsum)#
 x7 <- c(t22$PREV_DIAmean, t22$DIAmean)#
#
 p1 = 100000#
 p2 = 1.5#
#
##do exponential fit#
fit = nls(y7 ~ (x7^(-p2))*p1, start=list(p1=p1, p2=p2))#
#
fit2<-summary(fit)#
y=(x^(-fit2$coefficients[2]))* (fit2$coefficients[1]) # 251789.41366 #325000  #Best fit for early succession without saplings#
lines((y)~(x), col= "#00000050", lty="dashed", lwd=4.5) # "#00000090"#
print(fit2$coefficients[2])#
cex1 <- 0.8#
cexA <- 3 #succession large labels#
t3 <- 32 #33.5  #transition mean diameter between independent vectors and moving average#
lw2 <- 2 #arrow width#
slopetable <- NULL#
colS <- "#00000090"#
#
##manually remove overlapping vectors#
DuplicatedVectors <- NULL #
#
##ESM mean vector calculation and plotting with for loops#
for(o in ErrorOn:2){#
for(l in 1:2){#
#
#ESM Density with non-overlapping vectors#
#looped by phase space location to have sufficient underlying data and to exclude excessive vectors#
#
if(l==1){	#independent dense#
###Null model even increments, moving average vectors#
STOCKval <- c(0,0,seq(0, 100, 10), 122, 122)#
QMDvalues <- c(seq(0,(33), 3)) #, seq(32, 93, 6) )#
s1 <- s2 <- s3 <- s4 <- 10#
increment <- 1#
}#
#
if(l==2){	  ##moving average end#
#STOCKval <- c(0, 9.5, 12, 25, NA, NA, 12, 20, 35, 50, 65, 80, 100, 120, 140 ) #
#QMDvalues <- c(seq(t3, 42, 1.8), 42)#
#QMDvalues <- c(t3-0.5, 33.5, 34.5, 36, 40, 42, NA, NA, 38, 40, 45, 47, 55, 60)#
STOCKval <- c(15, 25, 50, 75, 100, 130) #seq(3, 161, 15)#
QMDvalues <- seq(32.5, 93, 4.5)#
s1 <- 5#
s2 <- 30#
s3 <- 10#
s4 <- 3#
increment <- 1 #3#
}#
#
#Subset by stocking range then mean diameter range#
if(o==1)#
{#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{		#
		stockcol <- (mean(S11q$PREV_STOCKINGmid,na.rm=TRUE)/4)+18#
		stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors#
if(mean(S11q$TPAsum, na.rm=TRUE)>1800){next} #exclude outliers#
#
#Plot mean change vector#
arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)), col=stockcol, length=0.08, angle=28,lwd=lw2+1.25)  #
#
#Plot bootstraped error associated with mean diameter and stem density change #
endTPAerror <- boot(S11q$TPAchg, meanFunc, R=1000)	#
endTPAerror <- sqrt(var(endTPAerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))+endTPAerror),  #
					col="grey60", type="l", lwd=0.7)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))-endTPAerror),  #
					col="grey60", type="l", lwd=0.7)#
endQMDerror <- boot(S11q$DIAchg, meanFunc, R=1000)				#
endQMDerror <- sqrt(var(endQMDerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)+endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey60", type="l", lwd=0.7)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)-endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey60", type="l", lwd=0.7)#
		}#
	}#
  }#
}#
#
#Replot with bold vectors#
if(o==2)#
{#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
	#print(length(S11q$PREV_DIAmean))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{				#
stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
#print(stkqmd)#
if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors#
if(mean(S11q$TPAsum, na.rm=TRUE)>1800){next} #exclude outliers#
#
stockcol <- (mean(S11q$PREV_STOCKINGmid,na.rm=TRUE)/4)+18 #
arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)), col= "grey15", length=0.08, angle=25,lwd=lw2+1)  #
arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)), col= stockcol, length=0.08, angle=28,lwd=lw2)	#
		}#
  	}#
  }#
}#
}  #l loop#
} #o loop
#####
#
#Load library, set options, simple fuctions#
library(RColorBrewer)#
library(sp)#
library(data.table)#
library(spam)#
library(nlme)#
library(maps)#
library(ggplot2)#
library(modeest)#
library(effects)#
library(plyr)#
library(reshape2)#
library(ggmap)#
library(boot)#
library(gplots)#
library(shape)#
library(SDMTools)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(foreach)#
library(doParallel)#
library(doMC)#
registerDoMC(cores=2)#
library(quantreg)#
library(fields)#
library(grDevices)#
library(RCurl)#
options(scipen=999) #remove sci notation#
meanFunc <- function(x,i){mean(x[i], na.rm=TRUE)}
RM5mergedfullcut1991.11.17.2014 <-  subset(RM5mergedfullcut1991.11.17.2014, STDORGCD==0 ) # remove planted forests#
S4swPREC <-  subset(RM5mergedfullcut1991.11.17.2014, STDORGCD==0 & cut==0 ) #exclude planted and harvested forests#
F2 <- subset(S4swPREC)#
#Intro staatistics#
print(c(sum(RM5mergedfullcut1991.11.17.2014$startsumTPA)/(1/0.166166884), "Trees initially surveyed"))#
print(c(sum(RM5mergedfullcut1991.11.17.2014$endsumTPA)/(1/0.166166884), "Trees resurveyed"))#
print(c(sum(RM5mergedfullcut1991.11.17.2014$PLT_CN>0), "Plots resurveyed"))#
print(c(mean(F2$REMPER), "mean resurvey period")) #most appropriate dataset for analyses #
print(c(std.error(F2$REMPER), "SE resurvey period"))#
print(c(sum(RM5mergedfullcut1991.11.17.2014$cut>0), "Plots with harvesting"))#
print(c(sum(RM5mergedfullcut1991.11.17.2014$STDORGCD>0, na.rm=T), "Planted plots"))#
#
print(c(mean(F2$carbon1sum, na.rm=T)*0.00112085116, "mean forest carbon Mg/ha")) #0.00112085116 = convert ABG carbon to Mg/ha#
print(c(sd(F2$carbon1sum, na.rm=T)*0.00112085116, "Standard devation forest carbon Mg/ha"))#
LegacyCarbon <- ((F2$carbon1sum-F2$PREVcarbon1sum)/F2$REMPER)*0.00112085116	#0.00112085116 = convert ABG carbon to Mg/ha#
print(c(mean(LegacyCarbon), "Legacy carbon accumulation Mg/ha/year")) 	#
print(c(std.error(LegacyCarbon), "SE Legacy carbon accumulation Mg/ha/year")) #
NPPchg <- ((F2$NPP-F2$PREVNPP)/F2$REMPER)*0.00112085116	#0.00112085116 = convert ABG carbon to Mg/ha#
print(c(mean(NPPchg), "NPP Mg/ha/year")) 	#
print(c(std.error(NPPchg), "SE NPP Mg/ha/year")) #
#
###SUCCESSION STATS#
#carbon and density variable name and unit conversions#
F2$DIAmean <- (F2$DIAendmean* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <- (F2$DIAbeginmean *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$Csum <- F2$carbon1sum* 0.00112085116  #	#convert living carbon to Mg/ha#
F2$PREV_Csum <- F2$PREVcarbon1sum* 0.00112085116 ##convert living carbon to Mg/ha#
F2$TPAsum <- (F2$endsumTPA /0.404686)			#number of trees per hectare by plot at resurvey#
F2$PREV_TPAsum <- (F2$startsumTPA /0.404686)	#number of trees per hectare by plot at initial survey #
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
#calculate change in Stem density and mean tree diameter for each plot#
F2$TPAchg <- (F2$TPAsum-F2$PREV_TPAsum)/F2$REMPER#
print(c(mean(F2$TPAchg, na.rm=T), " Overall TPAchg stems/ha/year")) 	#
print(c(std.error(F2$TPAchg, na.rm=T), "SE TPA")) #
#
#maximum early successional ingrowth and carbon mean change vectors (FIG. 1)#
STOCKval <- c(1, 9, 16, 25, 33, 42, 50, 59, 69, 79, 89,  101) #
QMDvalues <- c(12.7, 14.1, seq(15.5, 32, 1.5)) #,23.4, 24.5 ,26.8, 29, 32, 34.5, 36.5, 41 ) #10#
s=4#
h=1#
S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+1]) 	#
S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+1]))#
print(c(mean(S11q$TPAchg, na.rm=T), "early succession TPAchg stems/ha/year")) 	#
print(c(std.error(S11q$TPAchg, na.rm=T), "SE early succession")) #
#
#calculate NPP for each plot#
F2$NPPchg <- ((F2$NPP-F2$PREVNPP)/F2$REMPER)*0.00112085116	#0.00112085116 = convert ABG carbon to Mg/ha#
STOCKval <- c(0, 5, 15, seq(30, 121, 91/6)) #6#
QMDvalues <- c(12.7, 14.5) #
s=4#
h=1#
S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+1]) 	#
S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+1]))#
print(c(round(mean(S11q$NPPchg, na.rm=T),1), "early succession NPP Mg/ha/year")) 	#
print(c(std.error(S11q$NPPchg, na.rm=T), "SE early succession NPP")) #
#reforestation ingrowth#
F2e <- subset(F2, PREV_DIAmean>18.5 & PREV_STOCKINGmid< 20) #
print(c(mean(F2e$NPP, na.rm=T), "early succession NPP Mg/ha/year")) 	#
print(c(std.error(F2e$NPP, na.rm=T), "SE early succession NPP")) #
print(c(mean(F2e$TPAchg, na.rm=T), "early succession TPAchg stems/ha/year")) 	#
print(c(std.error(F2e$TPAchg, na.rm=T), "SE early succession NPP")) #
#
print(c(sum(F2e$ingrowth2>0)/sum(F2e$PLT_CN>0)*100, "percent ingrowth in low density plots"))#
#print(c(sum(F2e$mortality2>0 & F2e$mortDIAmean>F2e$DIAendmean, na.rm=T)/sum(F2e$PLT_CN>0)*100, "percent mortality large trees in low density plots"))#
#
#### Largest mean diameter forest stats#
F2e <- subset(F2,PREV_DIAmean>35 ) #& PREV_STOCKINGmid>60)#
print(c(sum(F2e$PLT_CN>0)/sum(F2$PLT_CN>0)*100, "largest mean diameter plots percent of overall dataset"))#
####DISTURBANCE STATS#
F2$allmortalitynoAD <- (F2$unknowndamage+F2$vegetation) #
F2$alldisturb <- (F2$insect+F2$fire+F2$weather+F2$disease+F2$animal)#
F2$allmortality <- (F2$insect+F2$fire+F2$weather+F2$disease+F2$animal+F2$unknowndamage+F2$vegetation)#
#
print(c(sum(F2$DSTRBCD1>0)/sum(F2$PLT_CN>0)*100, "Percent dataset large disturbance in 5 years" ) )#
print(c((1-(sum(F2$allmortality>0)/sum(F2$PLT_CN>0)))*100, "Percent dataset without mortality in 5 years" ) )#
#
print(c(sum(F2$alldisturb>0)/sum(F2$PLT_CN>0)*100, "Percent dataset disturbed in 5 years" ) )#
print(c(sum(F2$unknowndamage>0 & F2$alldisturb==0 & F2$vegetation==0)/sum(F2$PLT_CN>0)*100, "Percent dataset only unknown disturbance in 5 years" ) )#
print(c(sum(F2$unknowndamage)/(sum(F2$alldisturb)+ sum(F2$allmortalitynoAD))*100, "Percent mortality attributed to unknown disturbance in 5 years" ) )#
print(c((sum(F2$alldisturb)/sum(F2$allmortality))*100, "Percent mortality attributed to unknown disturbance in 5 years" )) #
#
F2D <- subset(F2, PREV_STOCKINGmid>60)	#Disturbed forests#
print(c(sum(F2D$alldisturb>0)/sum(F2D$PLT_CN>0)*100, "Percent self thinning forests disturbed in 5 years" ) )#
#############################################################################################################################
#######################   FIGURE 1 - EMPIRICAL FOREST DENSITY MODEL
dev.new(width=8, height=6) #set up plot#
S4swPREC <-  subset(RM5mergedfullcut1991.11.17.2014, STDORGCD==0 & cut==0 ) #exclude planted and logged forests#
F2 <- subset(S4swPREC) #
#
#Convert variables to standard names and metric units#
F2$DIAmean <- (F2$DIAendmean* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <- (F2$DIAbeginmean *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$TPAsum <- (F2$endsumTPA /0.404686)			#number of trees per hectare by plot at resurvey#
F2$PREV_TPAsum <- (F2$startsumTPA /0.404686)	#number of trees per hectare by plot at initial survey (cm)#
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
#
#calculate change in Stem density and mean tree diameter for each plot#
F2$TPAchg <- F2$TPAsum-F2$PREV_TPAsum#
F2$DIAchg <- F2$DIAmean-F2$PREV_DIAmean#
#
#setup color ramp#
 palette(adjustcolor(((rich.colors(60))), transform=diag(c(0.95,1,0.85,1)))) #
stockcols <- rev(palette())#
#Climate Colors:#
pt <- "steelblue1" #pluvial trend#
pe <- "royalblue"	#pluvial event#
dt <- "goldenrod1" #drought trend#
de <- "orange2"  	#drought event#
nt <- "grey55"#
ne <- "grey35"#
ag1 <- 25#
#select model type and bootstraped error on/off#
ModelType <- 3 #1=Even increment w/ moving average, 2=Even increment only, 3=Textbook #
ErrorOn <- 2  #1=Yes, 0=No#
#
#create plot#
plot(c((F2$PREV_DIAmean),(F2$DIAmean)),c((F2$PREV_TPAsum),(F2$TPAsum)), type ="n", col="grey94", #
	main=c("Empirical Model of 5-year forest density change, DBH>=12.7 cm", "FIA survey 1998-2012, Eastern USA") #
	,ylim=c(50,950), xlim=c(14, 43), mgp=c(2,1,0)#
	,xlab=NA, ylab=NA, axes=FALSE) #1250#
#
axis(side=1, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=2, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=1, lwd=0, line= -0.7)#
axis(side=2, lwd=0, line= -0.7)#
mtext(side=1, "Mean tree diameter (cm)", line=1.2)#
mtext(side=2, expression(paste("Stem density (trees ha"^"-1",")")), line=1.2)#
box()#
#
#plot all plots as individual background vectors colored by inital stocking #
arrows((F2$PREV_DIAmean),(F2$PREV_TPAsum),(F2$DIAmean),(F2$TPAsum), col= (F2$PREV_STOCKINGmid/4)+18, length=0.065, angle=22,lwd=0.9)  #
#
#Set up plot with relative plot locations and legend - for dev.new(width=8, height=6) #
x1 <- 39*1.05#
x2 <- 39.8*1.05#
y1 <- (c(seq(1200,820,-38))-50)*0.73#-22#
y2 <- (c(seq(1220,800,-5))-75)*.75 #-22#
x1b <- (x1-5.5)*0.965 #x1b <- x1-7.5#
y1b <- (y1[1]+110)*.69 #-264 #y1b <- y1[1]-215#
cex1 <- 0.8#
cexA <- 3 #succession large labels#
t3 <- 32 #33.5  #transition mean diameter between independent vectors and moving average#
lw2 <- 2 #arrow width#
slopetable <- NULL#
colS <- "#00000090"#
#
#legend#
segments(x1-0.2,y2,x2+0.2, y2, col=c(stockcols[seq(16,46,0.35)]),lwd=2, lend=2)#
points(30,750, pch=16, cex=200, col="#FFFFFF75" ) #FFFFFF50#
points(x1b-0.5,y1b+165, pch=15, cex=25, col="#FFFFFF90" ) #FFFFFF75#
#segments(t3,0,t3,600, col="white", lwd=0.75)#
segments(c(x1-1.5,x1-1.5,x1-1.5),c( y2[1]+5, y2[39], y2[85]),x2+0.3,c(y2[1]+5, y2[39], y2[85]), col="black",lwd=0.9, lend=2)#
segments((x1-1.5),( y2[10]),x2+0.3,(y2[10]), col="black",lwd=0.9, lend=2, lty="dashed")#
arrows(x1b-2.5, y1b, x1b+1.5, y1b, code=3, length=0.08)#
arrows(x1b, y1b+200,x1b, y1b-75, code=3, length=0.08)#
arrows(x1,y1,x2,y1, col="black", length=0.085, angle=25,lwd=lw2+0.75)  #
arrows(x1,y1,x2,y1, col=c(stockcols[seq(17,44,2.4)]), length=0.08, angle=28,lwd=lw2)  #
#text(x1+2.25, y1[1]+55,"Initial relative density", cex=0.9, pos=2) #initial plot stocking and mean change vector increments#
text(x1, y1[1]-5,"Over", cex=cex1, pos=2) #initial plot stocking and mean change vector increments#
text(x1, y1[4]+10,"Full", cex=cex1, pos=2) #initial plot stocking and mean change vector increments#
text(x1, y1[9]+10,"Under", cex=cex1, pos=2) #initial plot stocking and mean change vector increments#
#
F2l <- subset(F2, PREVSTOCKING5mid>60  ) ##
fit4<-rq(log10(TPAsum) ~ log10(DIAmean), tau=0.90, data=F2l)#
lml<-summary(fit4)#
x<-seq(0,50, 0.5)#
y=((x^ lml$coefficients[2])* 10^lml$coefficients[1]) # #325000  #Best fit for early succession without saplings#
lines((y)~(x), col="#00000090", lty="dotted", lwd=6.5) # "#00000090"#
#
#Future average:	 BASED ON results from future equilibrium model below#
cond <- "3"#
x <- 34.27#
y <- 280.8#
xer <- 0.372*2#
yer <- 5.096*2#
points(x,y, pch=21, col=NA, bg="grey35", cex=0.75)#
segments(x-xer,y, x+xer, y, col="#00000075", lwd=1.5)#
segments(x,y-yer, x, y+yer, col="#00000075", lwd=1.5)#
#
#manually remove overlapping vectors#
DuplicatedVectors <- c(31, 31.5,33.5, 36, 38, 8026.2, 25012.7, 50014, 9027.5, 1024.5, 1026, 1027.5, 16032, 16012.7, 1029, 1032, 1030.5, 1612.7, 9030.5, 9032, 15032, 9029, 50014.1, 10031.5, 10036, 9024.5, 42030.5, 16030.5, 9531.5, 9534.5, 9536, 12033.5, 12036, 33029, 40, 9540, 12040, 80040, 80036, 80038) #16029  9633.5, 9636, 9532#
#
##ESM mean vector calculation and plotting with for loops#
L <- ifelse(ModelType==3, 4,1)#
for(o in ErrorOn:2){#
for(l in 1:L){#
#
####Organize and subset data to plot with FOR loops #
if(ModelType==1){#
###Null model even increments, moving average vectors#
STOCKval <- c(0,0,seq(0, 141, 8))#
QMDvalues <- seq(0,50, 0.5)#
s1 <- s2 <- s3 <- s4 <- 20#
increment <- 3#
}#
#
if(ModelType==2){#
###Null model even increment vectors#
STOCKval <- seq(0, 121, 10)#
QMDvalues <- seq(0,50, 2)#
s1 <- s2 <- s3 <- s4 <- 20#
increment <- 1#
}#
#
if(ModelType==3){#
#ESM Density with non-overlapping vectors#
#looped by phase space location to have sufficient underlying data and to exclude excessive vectors#
#
if(l==1){	#independent dense#
STOCKval <- c(1, 9, 16, 25, 33, 42, 50, 59, 69, 79, 89,  101) #
QMDvalues <- c(12.7, 14.1, seq(15.5, t3, 1.5)) #
s1 <- s2 <- s3 <- s4 <- 3#
increment <- 1}#
#
if(l==4){	  ##moving average end#
STOCKval <- c(0, 9.5, 12, 25, NA, NA, 12, 20, 35, 50, 65, 80, 100, 120, 140 ) #
#QMDvalues <- c(seq(t3, 42, 1.8), 42)#
QMDvalues <- c(t3-0.5, 33.5, 34.5, 36, 40, 42, NA, NA, 38, 40, 45, 47)#
#QMDvalues <- c(t3, 33.5, 35, 38, 42, 45)#
s1 <- 3#
s2 <- 3#
s3 <- 3#
s4 <- 3#
increment <- 2}#
#
if(l==3){	  #overstocked#
STOCKval <- c(100, 122)#
QMDvalues <- c(12.5, 15, 18.5, 20, 21.5, 23, 24.5, 26.8, 28.5,  33)#
s1 <- s2 <- s3 <- s4 <- 3#
increment <- 1}#
#
if(l==2){	    #Bottom right####
STOCKval <- c(0, 8, 16)  #
QMDvalues <- c(26.2, 28, 31, 34) #, 38, 44)#
s1 <- s2 <- s3 <- s4 <- 4 #
increment <- 1}#
} #for Model type 3#
#Subset by stocking range then mean diameter range#
if(o==1)#
{#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{		#
		stockcol <- (mean(S11q$PREV_STOCKINGmid,na.rm=TRUE)/4)+18#
		stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors#
if(mean(S11q$TPAsum, na.rm=TRUE)>1000){next} #exclude outliers#
#
#Plot mean change vector#
arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)), col=stockcol, length=0.08, angle=28,lwd=lw2+1.25)  #
#
#Plot bootstraped error associated with mean diameter and stem density change #
endTPAerror <- boot(S11q$TPAchg, meanFunc, R=1000)	#
endTPAerror <- sqrt(var(endTPAerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))+endTPAerror),  #
					col="grey60", type="l", lwd=0.7)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))-endTPAerror),  #
					col="grey60", type="l", lwd=0.7)#
endQMDerror <- boot(S11q$DIAchg, meanFunc, R=1000)				#
endQMDerror <- sqrt(var(endQMDerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)+endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey60", type="l", lwd=0.7)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)-endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey60", type="l", lwd=0.7)#
		}#
	}#
  }#
}#
#Replot with bold vectors#
if(o==2)#
{#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
	#print(length(S11q$PREV_DIAmean))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{				#
stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
#print(stkqmd)#
if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors#
if(mean(S11q$TPAsum, na.rm=TRUE)>1000){next} #exclude outliers#
#
stockcol <- (mean(S11q$PREV_STOCKINGmid,na.rm=TRUE)/4)+18 #
#
#summery change inset - summary of mean vectors#
 	arrows(x1b,y1b,(x1b+mean(S11q$DIAchg, na.rm=TRUE)),(y1b+mean(S11q$TPAchg, na.rm=TRUE)), col="grey15", length=0.055, angle=25,lwd=lw2+0.4) #
	arrows(x1b,y1b,(x1b+mean(S11q$DIAchg, na.rm=TRUE)),(y1b+mean(S11q$TPAchg, na.rm=TRUE)), col=stockcol, length=0.05, angle=28,lwd=lw2)#
	slope <- mean(S11q$TPAchg, na.rm=TRUE)/mean(S11q$DIAchg, na.rm=TRUE)#
	slopetable <- rbind(slopetable, slope)#
#
arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)), col= "grey15", length=0.08, angle=25,lwd=lw2+1)  #
arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)), col= stockcol, length=0.08, angle=28,lwd=lw2)	#
#
#text(mean(S11q$DIAmean, na.rm=TRUE),mean(S11q$TPAsum, na.rm=TRUE), label= stkqmd)#
		}#
  	}#
  }#
}#
}  #l loop#
} #o loop#
#
summary(slopetable)#
#segments(x1-6,y1[1]+115,x1+2, y1[1]+100, col="#FFFFFF95",lwd=23, lend=2)#
boxed.labels(x1-5, y1[1]+110, "5-year Temperate Forest Density Change",bg="white", border=F, cex=1.05, col="black", font=3, ypad=0.7)#
#
#####Plot summary INSET text#
arrows(x1b-2.5, y1b, x1b+1.5, y1b, code=3, length=0.08, col="#00000050")#
arrows(x1b, y1b+200,x1b, y1b-75, code=3, length=0.08, col="#00000050")#
text(x1b+1.7, y1b-45,"Self\nthinning", cex=cex1) #(letters) could correspond to % of each in each quadrant (A%|B%|C%)#
text(x1b+2.2, y1b,"Gap filling", pos=3, cex=cex1)#
par(lheight=.75)#
text(x1b-2.5, y1b+50, "Low density\noverstory\nrecruitment", pos=3, cex=cex1) #
text(x1b+0.5, y1b+140,"Early\nsuccession", pos=4, cex=cex1)#
text(x1b-0.1, y1b+180,"+200 trees", pos=3, cex=cex1-0.1)#
text(x1b-0.1, y1b-55,"-75 trees", pos=1, cex=cex1-0.1)#
text(x1b+1.1, y1b,"+1.5 cm", pos=4, cex=cex1-0.1)#
text(x1b-2.2, y1b,"-2.5 cm", pos=2, cex=cex1-0.1)#
#text(x1b-1.5, y1b-60,"Equilibrium", pos=3, cex=cex1, col="black")#
#filledellipse(rx1=0.75, ry1=20, mid=c(x1b-0.3,y1b), angle=1.5, lcol="black", col=NULL, lty=3, lwd=0.5)#
#text(x1b, y1b+265,(("Successional trajectory summary")), pos=3, cex=cex1)#
#boxed.labels(x1b-0.65, y1[1]+55,"Successional summary",bg="#FFFFFF50", border=F, cex=0.9)#
#boxed.labels(x1b-5.25, y1[1]+35,"Successional\nsummary",bg="#FFFFFF00", border=F, cex=0.9, pos=4)#
boxed.labels(x1b-3, y1[1]+52,"Inset A",bg="#FFFFFF50", border=F, cex=0.9, xpad=1.3, ypad=1.3)#
lines(c(x1b-4.75, x1b-4.75), c(y1b+10, y1b+260), lwd=0.5)#
#lines(c(x1b-4, x1b-2.05), c(y1b-55, y1b-55), lwd=0.5)#
text(x1+0.83, c(y1+10, y1[11]-15),c("120","100","90", "80","70", "60","50","40","30", "20", "10", "1"), cex=0.85, pos=4)#
text(x1+2.7, y1[1]+52,"Initial relative density", cex=0.9, pos=2) #initial plot stocking and mean change vector increments#
box()#
############### END DENSITY MODEL
##########################################################################################################################
###############FIGURE 1B - ESM CARBON MODEL ##############################################################################
#
F2 <- subset(S4swPREC)#
#Re-use previous plot variables - Change Y-axis to vegetation carbon#
F2$DIAmean <- (F2$DIAendmean* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <- (F2$DIAbeginmean *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$TPAsum <- F2$carbon1sum* 0.00112085116  #	#convert living carbon to Mg/ha#
F2$PREV_TPAsum <- F2$PREVcarbon1sum* 0.00112085116 ##convert living carbon to Mg/ha#
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
#
#calculate change in CARBON and mean tree diameter for each plot#
F2$TPAchg <- F2$TPAsum-F2$PREV_TPAsum#
F2$DIAchg <- F2$DIAmean-F2$PREV_DIAmean#
#######################################################################
#set up plot#
dev.new(width=8, height=4.5)#
#
#create plot#
plot(c((F2$PREV_DIAmean),(F2$DIAmean)),c((F2$PREV_TPAsum),(F2$TPAsum)), type ="n", col="grey94", #
	main=c("Empirical Model of 5-year forest carbon change, DBH>=12.7 cm", "FIA survey 1997-2012, Eastern USA") #
	,ylim=c(6.5,200), xlim=c(14, 43), mgp=c(2,1,0)#
	,xlab=NA, ylab=NA, axes=FALSE) #1250#
#
axis(side=1, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=2, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=1, lwd=0, line= -0.7)#
axis(side=2, lwd=0, line= -0.7)#
#
mtext(side=1, "Mean tree diameter (cm)", line=1.2)#
mtext(side=2, expression(paste("Carbon, living trees (Mg ha"^"-1",")")), line=1.2)#
#
box()#
#
#plot all plots as individual background vectors colored by inital stocking #
arrows((F2$PREV_DIAmean),(F2$PREV_TPAsum),(F2$DIAmean),(F2$TPAsum), col= (F2$PREV_STOCKINGmid/4)+18, length=0.065, angle=22,lwd=0.9)#
#Set up plot with relative plot locations and legend - ideal for dev.new(width=8, height=4.5)#
x1 <- 14-0.5#
x2 <- 14+0.5#
y1 <- (c(seq(32,26.05,-.55))*2.5-52)*6.1#
y2 <- (c(seq(32.2,26.25,-0.085))*2.5-52)*6.1#
y3 <- (c(seq(31.8,26,-0.73))*2.5-52)*6.1#
x1b <- x1-7 #x1b <- x1-7.5#
y1b <- y1[1]-264 #y1b <- y1[1]-215#
cex1 <- 0.8#
t3 <- 32 #transition mean diameter between independent vectors and moving average#
lw2 <- 2 #arrow width#
#
#LEGEND#
stockcols2 <- rev((seq(1,120,15)/4)+18)#
segments(x1,y2,x2, y2, c(seq(45,18, -0.384)),lwd=2, lend=2) #c(seq(66,38,-0.3))  col="grey85"#
points(30,100, pch=16, cex=200, col="#FFFFFF75" ) #FFFFFF75#
text(x1-0.25, y1[1]+26,"5-year Temperate Forest Carbon Change", pos=4, cex=1.05, font=3)#
segments(c(x1,x1,x1),c( y2[1], y2[36],  y2[71]),x2+1.25 ,c(y2[1], y2[36],  y2[71]), col="black",lwd=0.9, lend=2)#
segments(c(x1),c(y2[10]),x2+1.25,c(y2[10]), col="black",lwd=0.9, lend=2, lty="dashed")#
arrows(x1+0.1,y3,x2-0.1,y3, col="black", length=0.085, angle=25,lwd=lw2+1)  #
arrows(x1+0.1,y3,x2-0.1,y3, col=c(stockcols2), length=0.08, angle=28,lwd=lw2)  #
text(x1-.5, y1[1]+10,"Initial relative density", cex=0.9, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[1]-5,"Over", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[4],"Full", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[9],"Under", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
#
#Carbon thinning line - fit to tree diameters >5 inches with relative densities between 90-110#
F2l <- subset(F2, PREVSTOCKING5mid>=90 & PREVSTOCKING5mid<=110 & DIAmean<40)#
lml <- summary(lm((F2l$TPAsum)~(F2l$DIAmean) ))#
print(c(lml$coefficients[2], "self thinning line best fit scaling exponent"))#
x=seq(0,50,0.5) #seq(22,35.5,0.5)#
y=(lml$coefficients[2]*x+lml$coefficients[1])  #Best fit #
lines((y)~(x), col="#00000090", lty="dotted", lwd=5) # "#00000085"#
#Future average: BASED ON results from future equilibrium model below#
cond <- "3"	#
x <- 34.27#
y <- 116.5#
xer <- 0.372*2#
yer <- 3.54*2#
points(x,y, pch=21, col=NA, bg="grey35", cex=0.75)#
segments(x-xer,y, x+xer, y, col="#00000075", lwd=1.5)#
segments(x,y-yer, x, y+yer, col="#00000075", lwd=1.5)#
####Organize and subset data to plot with FOR loops #
#looped by phase space location to have sufficient underlying data and to exclude excessive vectors#
DuplicatedVectors <- c(5031, 5034.6, 5036.4, 15036.4) #
slopetable <- NULL#
for(o in 1:2){#
for(l in 1:5){#
#
if(l==1){	  ##Reforestation#
STOCKval <- c(4,15)#
QMDvalues <- c(seq(21.7,30.7, 3), 36, 45) #c(18,21,24,29, 45)  ##
s1 <- 5#
s2 <- 5#
s3 <- 5#
s4 <- 5#
increment=1}#
#
if(l==2){	  ##Early succession		#
STOCKval <- c(seq(0, 70, 121/7), 82, 101, 121) #6#
QMDvalues <- c(seq(14.5,21.7,1.8)) #c(seq(12,18.4,3.2))  ##
s1 <- 5 #30#
s2 <- 5 #10#
s3 <- 5 #10#
s4 <- 5 #5#
increment=1}#
#
if(l==3){	  ##middle#
STOCKval <- c(15, 32, seq(41, 85, 65/5),98,121) #121,121,121#
QMDvalues <- c(seq(21.7,t3, 10.3/6))  ##
s1 <- 30#
s2 <- 10#
s3 <- 20#
s4 <- 2#
increment=1}#
#
if(l==4){	  ##moving average end#
STOCKval <- c(5, 15, NA, 30, 38, NA, NA,20, 40, 55, 55, 60, 75, NA, NA,NA, 65, 85, 100, 85, 98, 121) #121, 121) #121,121,121#
QMDvalues <- c(seq(t3-1,45,1.8), 50)  ##
s1 <- 40 #100#
s2 <- 30 #50#
s3 <- 3#40#
s4 <- 5#
increment=3}#
#
if(l==5){	  ##Early early succession#
STOCKval <- c(0, 5, 15, seq(30, 121, 91/6)) #6#
QMDvalues <- c(12.7, 14.5) #
s1 <- 3 #30#
s2 <- 3 #10#
s3 <- 3#10#
s4 <- 3#5#
increment=1}#
#
#Subset by stocking range then mean diameter range#
if(o==1){#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{		#
		stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
		if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors#
		stockcol <- (mean(S11q$PREV_STOCKINGmid,na.rm=TRUE)/4)+18#
#Plot mean change vector#
		arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)),col=(stockcol), length=0.085, angle=25,lwd=lw2+1.25) #
#
#Plot bootstraped error associated with mean diameter and stem density change #
endTPAerror <- boot(S11q$TPAchg, meanFunc, R=1000)	#
endTPAerror <- sqrt(var(endTPAerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))+endTPAerror),  #
					col="grey50", type="l", lwd=0.75)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))-endTPAerror),  #
					col="grey50", type="l", lwd=0.75)#
endQMDerror <- boot(S11q$DIAchg, meanFunc, R=1000)				#
endQMDerror <- sqrt(var(endQMDerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)+endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey50", type="l", lwd=0.75)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)-endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey50", type="l", lwd=0.75)#
	}}}}#
#
#Replot with bold vectors#
if(o==2){#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
#print(length(S11q$PREV_DIAmean))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{	#
		stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
		if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors			#
	arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)),col=("grey15"), length=0.085, angle=25,lwd=lw2+0.75) #
	arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)), col= (S11q$PREV_STOCKINGmid/4)+18, length=0.08, angle=28,lwd=lw2)  # VectCols[s] col=s*1.8+10,  s*1.2+7 # s*2+10 #stockcol#
#
print(c(stkqmd, l, s, h, mean(S11q$TPAchg, na.rm=T), sum(S11q$TPAchg>0, na.rm=T)))#
#
	}}}}#
 } #l loop#
} #o loop#
box()#
####################### FIGURE 1 - END
####CAUTION for() LOOPS AHEAD#####
#
#Load library, set options, simple fuctions#
library(RColorBrewer)#
library(sp)#
library(data.table)#
library(spam)#
library(nlme)#
library(maps)#
library(ggplot2)#
library(modeest)#
library(effects)#
library(plyr)#
library(reshape2)#
library(ggmap)#
library(boot)#
library(gplots)#
library(shape)#
library(SDMTools)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(foreach)#
library(doParallel)#
library(doMC)#
registerDoMC(cores=2)#
library(quantreg)#
library(fields)#
library(grDevices)#
library(RCurl)#
options(scipen=999) #remove sci notation#
meanFunc <- function(x,i){mean(x[i], na.rm=TRUE)}#
##Load data from GITHUB#
 data.url <- "https://raw.githubusercontent.com/wanderswest/ESM-FIA/master/ESM.data.csv"#
    ESM.data <- getURL(data.url)                #
    ESM.data <- read.csv(textConnection(ESM.data), header = TRUE, sep = ",", quote="\"", dec=".")#
RM5mergedfullcut1991.11.17.2014  <- as.data.table(ESM.data)#
#
#or load filtered data from local drive#
#RM5mergedfullcut1991.11.17.2014  <- as.data.table(read.csv("/Users/travis/GitHub/ESM-FIA/ESM.data.csv", header = TRUE, sep = ",", quote="\"", dec="."))#
#
RM5mergedfullcut1991.11.17.2014 <-  subset(RM5mergedfullcut1991.11.17.2014, STDORGCD==0 ) # remove planted forests#
S4swPREC <-  subset(RM5mergedfullcut1991.11.17.2014, STDORGCD==0 & cut==0 ) #exclude planted and harvested forests#
F2 <- subset(S4swPREC)
#Intro staatistics#
print(c(sum(RM5mergedfullcut1991.11.17.2014$startsumTPA)/(1/0.166166884), "Trees initially surveyed"))#
print(c(sum(RM5mergedfullcut1991.11.17.2014$endsumTPA)/(1/0.166166884), "Trees resurveyed"))#
print(c(sum(RM5mergedfullcut1991.11.17.2014$PLT_CN>0), "Plots resurveyed"))#
print(c(mean(F2$REMPER), "mean resurvey period")) #most appropriate dataset for analyses #
print(c(std.error(F2$REMPER), "SE resurvey period"))#
print(c(sum(RM5mergedfullcut1991.11.17.2014$cut>0), "Plots with harvesting"))#
print(c(sum(RM5mergedfullcut1991.11.17.2014$STDORGCD>0, na.rm=T), "Planted plots"))#
#
print(c(mean(F2$carbon1sum, na.rm=T)*0.00112085116, "mean forest carbon Mg/ha")) #0.00112085116 = convert ABG carbon to Mg/ha#
print(c(sd(F2$carbon1sum, na.rm=T)*0.00112085116, "Standard devation forest carbon Mg/ha"))#
LegacyCarbon <- ((F2$carbon1sum-F2$PREVcarbon1sum)/F2$REMPER)*0.00112085116	#0.00112085116 = convert ABG carbon to Mg/ha#
print(c(mean(LegacyCarbon), "Legacy carbon accumulation Mg/ha/year")) 	#
print(c(std.error(LegacyCarbon), "SE Legacy carbon accumulation Mg/ha/year")) #
NPPchg <- ((F2$NPP-F2$PREVNPP)/F2$REMPER)*0.00112085116	#0.00112085116 = convert ABG carbon to Mg/ha#
print(c(mean(NPPchg), "NPP Mg/ha/year")) 	#
print(c(std.error(NPPchg), "SE NPP Mg/ha/year")) #
#
###SUCCESSION STATS#
#carbon and density variable name and unit conversions#
F2$DIAmean <- (F2$DIAendmean* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <- (F2$DIAbeginmean *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$Csum <- F2$carbon1sum* 0.00112085116  #	#convert living carbon to Mg/ha#
F2$PREV_Csum <- F2$PREVcarbon1sum* 0.00112085116 ##convert living carbon to Mg/ha#
F2$TPAsum <- (F2$endsumTPA /0.404686)			#number of trees per hectare by plot at resurvey#
F2$PREV_TPAsum <- (F2$startsumTPA /0.404686)	#number of trees per hectare by plot at initial survey #
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
#calculate change in Stem density and mean tree diameter for each plot#
F2$TPAchg <- (F2$TPAsum-F2$PREV_TPAsum)/F2$REMPER#
print(c(mean(F2$TPAchg, na.rm=T), " Overall TPAchg stems/ha/year")) 	#
print(c(std.error(F2$TPAchg, na.rm=T), "SE TPA")) #
#
#maximum early successional ingrowth and carbon mean change vectors (FIG. 1)#
STOCKval <- c(1, 9, 16, 25, 33, 42, 50, 59, 69, 79, 89,  101) #
QMDvalues <- c(12.7, 14.1, seq(15.5, 32, 1.5)) #,23.4, 24.5 ,26.8, 29, 32, 34.5, 36.5, 41 ) #10#
s=4#
h=1#
S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+1]) 	#
S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+1]))#
print(c(mean(S11q$TPAchg, na.rm=T), "early succession TPAchg stems/ha/year")) 	#
print(c(std.error(S11q$TPAchg, na.rm=T), "SE early succession")) #
#
#calculate NPP for each plot#
F2$NPPchg <- ((F2$NPP-F2$PREVNPP)/F2$REMPER)*0.00112085116	#0.00112085116 = convert ABG carbon to Mg/ha#
STOCKval <- c(0, 5, 15, seq(30, 121, 91/6)) #6#
QMDvalues <- c(12.7, 14.5) #
s=4#
h=1#
S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+1]) 	#
S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+1]))#
print(c(round(mean(S11q$NPPchg, na.rm=T),1), "early succession NPP Mg/ha/year")) 	#
print(c(std.error(S11q$NPPchg, na.rm=T), "SE early succession NPP")) #
#reforestation ingrowth#
F2e <- subset(F2, PREV_DIAmean>18.5 & PREV_STOCKINGmid< 20) #
print(c(mean(F2e$NPP, na.rm=T), "early succession NPP Mg/ha/year")) 	#
print(c(std.error(F2e$NPP, na.rm=T), "SE early succession NPP")) #
print(c(mean(F2e$TPAchg, na.rm=T), "early succession TPAchg stems/ha/year")) 	#
print(c(std.error(F2e$TPAchg, na.rm=T), "SE early succession NPP")) #
#
print(c(sum(F2e$ingrowth2>0)/sum(F2e$PLT_CN>0)*100, "percent ingrowth in low density plots"))#
#print(c(sum(F2e$mortality2>0 & F2e$mortDIAmean>F2e$DIAendmean, na.rm=T)/sum(F2e$PLT_CN>0)*100, "percent mortality large trees in low density plots"))#
#
#### Largest mean diameter forest stats#
F2e <- subset(F2,PREV_DIAmean>35 ) #& PREV_STOCKINGmid>60)#
print(c(sum(F2e$PLT_CN>0)/sum(F2$PLT_CN>0)*100, "largest mean diameter plots percent of overall dataset"))#
####DISTURBANCE STATS#
F2$allmortalitynoAD <- (F2$unknowndamage+F2$vegetation) #
F2$alldisturb <- (F2$insect+F2$fire+F2$weather+F2$disease+F2$animal)#
F2$allmortality <- (F2$insect+F2$fire+F2$weather+F2$disease+F2$animal+F2$unknowndamage+F2$vegetation)#
#
print(c(sum(F2$DSTRBCD1>0)/sum(F2$PLT_CN>0)*100, "Percent dataset large disturbance in 5 years" ) )#
print(c((1-(sum(F2$allmortality>0)/sum(F2$PLT_CN>0)))*100, "Percent dataset without mortality in 5 years" ) )#
#
print(c(sum(F2$alldisturb>0)/sum(F2$PLT_CN>0)*100, "Percent dataset disturbed in 5 years" ) )#
print(c(sum(F2$unknowndamage>0 & F2$alldisturb==0 & F2$vegetation==0)/sum(F2$PLT_CN>0)*100, "Percent dataset only unknown disturbance in 5 years" ) )#
print(c(sum(F2$unknowndamage)/(sum(F2$alldisturb)+ sum(F2$allmortalitynoAD))*100, "Percent mortality attributed to unknown disturbance in 5 years" ) )#
print(c((sum(F2$alldisturb)/sum(F2$allmortality))*100, "Percent mortality attributed to unknown disturbance in 5 years" )) #
#
F2D <- subset(F2, PREV_STOCKINGmid>60)	#Disturbed forests#
print(c(sum(F2D$alldisturb>0)/sum(F2D$PLT_CN>0)*100, "Percent self thinning forests disturbed in 5 years" ) )#
#############################################################################################################################
#######################   FIGURE 1 - EMPIRICAL FOREST DENSITY MODEL
#############################################################################################################################
#######################   FIGURE 1 - EMPIRICAL FOREST DENSITY MODEL  ########################################################
#####
#
dev.new(width=8, height=6) #set up plot#
S4swPREC <-  subset(RM5mergedfullcut1991.11.17.2014, STDORGCD==0 & cut==0 ) #exclude planted and logged forests#
F2 <- subset(S4swPREC) #
#
#Convert variables to standard names and metric units#
F2$DIAmean <- (F2$DIAendmean* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <- (F2$DIAbeginmean *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$TPAsum <- (F2$endsumTPA /0.404686)			#number of trees per hectare by plot at resurvey#
F2$PREV_TPAsum <- (F2$startsumTPA /0.404686)	#number of trees per hectare by plot at initial survey (cm)#
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
#
#calculate change in Stem density and mean tree diameter for each plot#
F2$TPAchg <- F2$TPAsum-F2$PREV_TPAsum#
F2$DIAchg <- F2$DIAmean-F2$PREV_DIAmean#
#
#setup color ramp#
 palette(adjustcolor(((rich.colors(60))), transform=diag(c(0.95,1,0.85,1)))) #
stockcols <- rev(palette())#
#Climate Colors:#
pt <- "steelblue1" #pluvial trend#
pe <- "royalblue"	#pluvial event#
dt <- "goldenrod1" #drought trend#
de <- "orange2"  	#drought event#
nt <- "grey55"#
ne <- "grey35"#
ag1 <- 25#
#select model type and bootstraped error on/off#
ModelType <- 3 #1=Even increment w/ moving average, 2=Even increment only, 3=Textbook #
ErrorOn <- 1  #1=Yes, 0=No#
#
#create plot#
plot(c((F2$PREV_DIAmean),(F2$DIAmean)),c((F2$PREV_TPAsum),(F2$TPAsum)), type ="n", col="grey94", #
	main=c("Empirical Model of 5-year forest density change, DBH>=12.7 cm", "FIA survey 1998-2012, Eastern USA") #
	,ylim=c(50,950), xlim=c(14, 43), mgp=c(2,1,0)#
	,xlab=NA, ylab=NA, axes=FALSE) #1250#
#
axis(side=1, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=2, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=1, lwd=0, line= -0.7)#
axis(side=2, lwd=0, line= -0.7)#
mtext(side=1, "Mean tree diameter (cm)", line=1.2)#
mtext(side=2, expression(paste("Stem density (trees ha"^"-1",")")), line=1.2)#
box()#
#
#plot all plots as individual background vectors colored by inital stocking #
arrows((F2$PREV_DIAmean),(F2$PREV_TPAsum),(F2$DIAmean),(F2$TPAsum), col= (F2$PREV_STOCKINGmid/4)+18, length=0.065, angle=22,lwd=0.9)  #
#
#Set up plot with relative plot locations and legend - for dev.new(width=8, height=6) #
x1 <- 39*1.05#
x2 <- 39.8*1.05#
y1 <- (c(seq(1200,820,-38))-50)*0.73#-22#
y2 <- (c(seq(1220,800,-5))-75)*.75 #-22#
x1b <- (x1-5.5)*0.965 #x1b <- x1-7.5#
y1b <- (y1[1]+110)*.69 #-264 #y1b <- y1[1]-215#
cex1 <- 0.8#
cexA <- 3 #succession large labels#
t3 <- 32 #33.5  #transition mean diameter between independent vectors and moving average#
lw2 <- 2 #arrow width#
slopetable <- NULL#
colS <- "#00000090"#
#
#legend#
segments(x1-0.2,y2,x2+0.2, y2, col=c(stockcols[seq(16,46,0.35)]),lwd=2, lend=2)#
points(30,750, pch=16, cex=200, col="#FFFFFF75" ) #FFFFFF50#
points(x1b-0.5,y1b+165, pch=15, cex=25, col="#FFFFFF90" ) #FFFFFF75#
#segments(t3,0,t3,600, col="white", lwd=0.75)#
segments(c(x1-1.5,x1-1.5,x1-1.5),c( y2[1]+5, y2[39], y2[85]),x2+0.3,c(y2[1]+5, y2[39], y2[85]), col="black",lwd=0.9, lend=2)#
segments((x1-1.5),( y2[10]),x2+0.3,(y2[10]), col="black",lwd=0.9, lend=2, lty="dashed")#
arrows(x1b-2.5, y1b, x1b+1.5, y1b, code=3, length=0.08)#
arrows(x1b, y1b+200,x1b, y1b-75, code=3, length=0.08)#
arrows(x1,y1,x2,y1, col="black", length=0.085, angle=25,lwd=lw2+0.75)  #
arrows(x1,y1,x2,y1, col=c(stockcols[seq(17,44,2.4)]), length=0.08, angle=28,lwd=lw2)  #
#text(x1+2.25, y1[1]+55,"Initial relative density", cex=0.9, pos=2) #initial plot stocking and mean change vector increments#
text(x1, y1[1]-5,"Over", cex=cex1, pos=2) #initial plot stocking and mean change vector increments#
text(x1, y1[4]+10,"Full", cex=cex1, pos=2) #initial plot stocking and mean change vector increments#
text(x1, y1[9]+10,"Under", cex=cex1, pos=2) #initial plot stocking and mean change vector increments#
#
F2l <- subset(F2, PREVSTOCKING5mid>60  ) ##
fit4<-rq(log10(TPAsum) ~ log10(DIAmean), tau=0.90, data=F2l)#
lml<-summary(fit4)#
x<-seq(0,50, 0.5)#
y=((x^ lml$coefficients[2])* 10^lml$coefficients[1]) # #325000  #Best fit for early succession without saplings#
lines((y)~(x), col="#00000090", lty="dotted", lwd=6.5) # "#00000090"#
#
#Future average:	 BASED ON results from future equilibrium model below#
cond <- "3"#
x <- 34.27#
y <- 280.8#
xer <- 0.372*2#
yer <- 5.096*2#
points(x,y, pch=21, col=NA, bg="grey35", cex=0.75)#
segments(x-xer,y, x+xer, y, col="#00000075", lwd=1.5)#
segments(x,y-yer, x, y+yer, col="#00000075", lwd=1.5)#
#
#manually remove overlapping vectors#
DuplicatedVectors <- c(31, 31.5,33.5, 36, 38, 8026.2, 25012.7, 50014, 9027.5, 1024.5, 1026, 1027.5, 16032, 16012.7, 1029, 1032, 1030.5, 1612.7, 9030.5, 9032, 15032, 9029, 50014.1, 10031.5, 10036, 9024.5, 42030.5, 16030.5, 9531.5, 9534.5, 9536, 12033.5, 12036, 33029, 40, 9540, 12040, 80040, 80036, 80038) #16029  9633.5, 9636, 9532#
#
##ESM mean vector calculation and plotting with for loops#
L <- ifelse(ModelType==3, 4,1)#
for(o in ErrorOn:2){#
for(l in 1:L){#
#
####Organize and subset data to plot with FOR loops #
if(ModelType==1){#
###Null model even increments, moving average vectors#
STOCKval <- c(0,0,seq(0, 141, 8))#
QMDvalues <- seq(0,50, 0.5)#
s1 <- s2 <- s3 <- s4 <- 20#
increment <- 3#
}#
#
if(ModelType==2){#
###Null model even increment vectors#
STOCKval <- seq(0, 121, 10)#
QMDvalues <- seq(0,50, 2)#
s1 <- s2 <- s3 <- s4 <- 20#
increment <- 1#
}#
#
if(ModelType==3){#
#ESM Density with non-overlapping vectors#
#looped by phase space location to have sufficient underlying data and to exclude excessive vectors#
#
if(l==1){	#independent dense#
STOCKval <- c(1, 9, 16, 25, 33, 42, 50, 59, 69, 79, 89,  101) #
QMDvalues <- c(12.7, 14.1, seq(15.5, t3, 1.5)) #
s1 <- s2 <- s3 <- s4 <- 3#
increment <- 1}#
#
if(l==4){	  ##moving average end#
STOCKval <- c(0, 9.5, 12, 25, NA, NA, 12, 20, 35, 50, 65, 80, 100, 120, 140 ) #
#QMDvalues <- c(seq(t3, 42, 1.8), 42)#
QMDvalues <- c(t3-0.5, 33.5, 34.5, 36, 40, 42, NA, NA, 38, 40, 45, 47)#
#QMDvalues <- c(t3, 33.5, 35, 38, 42, 45)#
s1 <- 3#
s2 <- 3#
s3 <- 3#
s4 <- 3#
increment <- 2}#
#
if(l==3){	  #overstocked#
STOCKval <- c(100, 122)#
QMDvalues <- c(12.5, 15, 18.5, 20, 21.5, 23, 24.5, 26.8, 28.5,  33)#
s1 <- s2 <- s3 <- s4 <- 3#
increment <- 1}#
#
if(l==2){	    #Bottom right####
STOCKval <- c(0, 8, 16)  #
QMDvalues <- c(26.2, 28, 31, 34) #, 38, 44)#
s1 <- s2 <- s3 <- s4 <- 4 #
increment <- 1}#
} #for Model type 3#
#Subset by stocking range then mean diameter range#
if(o==1)#
{#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{		#
		stockcol <- (mean(S11q$PREV_STOCKINGmid,na.rm=TRUE)/4)+18#
		stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors#
if(mean(S11q$TPAsum, na.rm=TRUE)>1000){next} #exclude outliers#
#
#Plot mean change vector#
arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)), col=stockcol, length=0.08, angle=28,lwd=lw2+1.25)  #
#
#Plot bootstraped error associated with mean diameter and stem density change #
endTPAerror <- boot(S11q$TPAchg, meanFunc, R=1000)	#
endTPAerror <- sqrt(var(endTPAerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))+endTPAerror),  #
					col="grey60", type="l", lwd=0.7)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))-endTPAerror),  #
					col="grey60", type="l", lwd=0.7)#
endQMDerror <- boot(S11q$DIAchg, meanFunc, R=1000)				#
endQMDerror <- sqrt(var(endQMDerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)+endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey60", type="l", lwd=0.7)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)-endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey60", type="l", lwd=0.7)#
		}#
	}#
  }#
}#
#Replot with bold vectors#
if(o==2)#
{#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
	#print(length(S11q$PREV_DIAmean))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{				#
stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
#print(stkqmd)#
if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors#
if(mean(S11q$TPAsum, na.rm=TRUE)>1000){next} #exclude outliers#
#
stockcol <- (mean(S11q$PREV_STOCKINGmid,na.rm=TRUE)/4)+18 #
#
#summery change inset - summary of mean vectors#
 	arrows(x1b,y1b,(x1b+mean(S11q$DIAchg, na.rm=TRUE)),(y1b+mean(S11q$TPAchg, na.rm=TRUE)), col="grey15", length=0.055, angle=25,lwd=lw2+0.4) #
	arrows(x1b,y1b,(x1b+mean(S11q$DIAchg, na.rm=TRUE)),(y1b+mean(S11q$TPAchg, na.rm=TRUE)), col=stockcol, length=0.05, angle=28,lwd=lw2)#
	slope <- mean(S11q$TPAchg, na.rm=TRUE)/mean(S11q$DIAchg, na.rm=TRUE)#
	slopetable <- rbind(slopetable, slope)#
#
arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)), col= "grey15", length=0.08, angle=25,lwd=lw2+1)  #
arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)), col= stockcol, length=0.08, angle=28,lwd=lw2)	#
#
#text(mean(S11q$DIAmean, na.rm=TRUE),mean(S11q$TPAsum, na.rm=TRUE), label= stkqmd)#
		}#
  	}#
  }#
}#
}  #l loop#
} #o loop#
#
summary(slopetable)#
#segments(x1-6,y1[1]+115,x1+2, y1[1]+100, col="#FFFFFF95",lwd=23, lend=2)#
boxed.labels(x1-5, y1[1]+110, "5-year Temperate Forest Density Change",bg="white", border=F, cex=1.05, col="black", font=3, ypad=0.7)#
#
#####Plot summary INSET text#
arrows(x1b-2.5, y1b, x1b+1.5, y1b, code=3, length=0.08, col="#00000050")#
arrows(x1b, y1b+200,x1b, y1b-75, code=3, length=0.08, col="#00000050")#
text(x1b+1.7, y1b-45,"Self\nthinning", cex=cex1) #(letters) could correspond to % of each in each quadrant (A%|B%|C%)#
text(x1b+2.2, y1b,"Gap filling", pos=3, cex=cex1)#
par(lheight=.75)#
text(x1b-2.5, y1b+50, "Low density\noverstory\nrecruitment", pos=3, cex=cex1) #
text(x1b+0.5, y1b+140,"Early\nsuccession", pos=4, cex=cex1)#
text(x1b-0.1, y1b+180,"+200 trees", pos=3, cex=cex1-0.1)#
text(x1b-0.1, y1b-55,"-75 trees", pos=1, cex=cex1-0.1)#
text(x1b+1.1, y1b,"+1.5 cm", pos=4, cex=cex1-0.1)#
text(x1b-2.2, y1b,"-2.5 cm", pos=2, cex=cex1-0.1)#
#text(x1b-1.5, y1b-60,"Equilibrium", pos=3, cex=cex1, col="black")#
#filledellipse(rx1=0.75, ry1=20, mid=c(x1b-0.3,y1b), angle=1.5, lcol="black", col=NULL, lty=3, lwd=0.5)#
#text(x1b, y1b+265,(("Successional trajectory summary")), pos=3, cex=cex1)#
#boxed.labels(x1b-0.65, y1[1]+55,"Successional summary",bg="#FFFFFF50", border=F, cex=0.9)#
#boxed.labels(x1b-5.25, y1[1]+35,"Successional\nsummary",bg="#FFFFFF00", border=F, cex=0.9, pos=4)#
boxed.labels(x1b-3, y1[1]+52,"Inset A",bg="#FFFFFF50", border=F, cex=0.9, xpad=1.3, ypad=1.3)#
lines(c(x1b-4.75, x1b-4.75), c(y1b+10, y1b+260), lwd=0.5)#
#lines(c(x1b-4, x1b-2.05), c(y1b-55, y1b-55), lwd=0.5)#
text(x1+0.83, c(y1+10, y1[11]-15),c("120","100","90", "80","70", "60","50","40","30", "20", "10", "1"), cex=0.85, pos=4)#
text(x1+2.7, y1[1]+52,"Initial relative density", cex=0.9, pos=2) #initial plot stocking and mean change vector increments#
box()#
############### END DENSITY MODEL
box()
##########################################################################################################################
###############FIGURE 1B - ESM CARBON MODEL ##############################################################################
#
F2 <- subset(S4swPREC)#
#Re-use previous plot variables - Change Y-axis to vegetation carbon#
F2$DIAmean <- (F2$DIAendmean* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <- (F2$DIAbeginmean *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$TPAsum <- F2$carbon1sum* 0.00112085116  #	#convert living carbon to Mg/ha#
F2$PREV_TPAsum <- F2$PREVcarbon1sum* 0.00112085116 ##convert living carbon to Mg/ha#
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
#
#calculate change in CARBON and mean tree diameter for each plot#
F2$TPAchg <- F2$TPAsum-F2$PREV_TPAsum#
F2$DIAchg <- F2$DIAmean-F2$PREV_DIAmean#
#######################################################################
#set up plot#
dev.new(width=8, height=4.5)#
#
#create plot#
plot(c((F2$PREV_DIAmean),(F2$DIAmean)),c((F2$PREV_TPAsum),(F2$TPAsum)), type ="n", col="grey94", #
	main=c("Empirical Model of 5-year forest carbon change, DBH>=12.7 cm", "FIA survey 1997-2012, Eastern USA") #
	,ylim=c(6.5,200), xlim=c(14, 43), mgp=c(2,1,0)#
	,xlab=NA, ylab=NA, axes=FALSE) #1250#
#
axis(side=1, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=2, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=1, lwd=0, line= -0.7)#
axis(side=2, lwd=0, line= -0.7)#
#
mtext(side=1, "Mean tree diameter (cm)", line=1.2)#
mtext(side=2, expression(paste("Carbon, living trees (Mg ha"^"-1",")")), line=1.2)#
#
box()#
#
#plot all plots as individual background vectors colored by inital stocking #
arrows((F2$PREV_DIAmean),(F2$PREV_TPAsum),(F2$DIAmean),(F2$TPAsum), col= (F2$PREV_STOCKINGmid/4)+18, length=0.065, angle=22,lwd=0.9)#
#Set up plot with relative plot locations and legend - ideal for dev.new(width=8, height=4.5)#
x1 <- 14-0.5#
x2 <- 14+0.5#
y1 <- (c(seq(32,26.05,-.55))*2.5-52)*6.1#
y2 <- (c(seq(32.2,26.25,-0.085))*2.5-52)*6.1#
y3 <- (c(seq(31.8,26,-0.73))*2.5-52)*6.1#
x1b <- x1-7 #x1b <- x1-7.5#
y1b <- y1[1]-264 #y1b <- y1[1]-215#
cex1 <- 0.8#
t3 <- 32 #transition mean diameter between independent vectors and moving average#
lw2 <- 2 #arrow width#
#
#LEGEND#
stockcols2 <- rev((seq(1,120,15)/4)+18)#
segments(x1,y2,x2, y2, c(seq(45,18, -0.384)),lwd=2, lend=2) #c(seq(66,38,-0.3))  col="grey85"#
points(30,100, pch=16, cex=200, col="#FFFFFF75" ) #FFFFFF75#
text(x1-0.25, y1[1]+26,"5-year Temperate Forest Carbon Change", pos=4, cex=1.05, font=3)#
segments(c(x1,x1,x1),c( y2[1], y2[36],  y2[71]),x2+1.25 ,c(y2[1], y2[36],  y2[71]), col="black",lwd=0.9, lend=2)#
segments(c(x1),c(y2[10]),x2+1.25,c(y2[10]), col="black",lwd=0.9, lend=2, lty="dashed")#
arrows(x1+0.1,y3,x2-0.1,y3, col="black", length=0.085, angle=25,lwd=lw2+1)  #
arrows(x1+0.1,y3,x2-0.1,y3, col=c(stockcols2), length=0.08, angle=28,lwd=lw2)  #
text(x1-.5, y1[1]+10,"Initial relative density", cex=0.9, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[1]-5,"Over", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[4],"Full", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[9],"Under", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
#
#Carbon thinning line - fit to tree diameters >5 inches with relative densities between 90-110#
F2l <- subset(F2, PREVSTOCKING5mid>=90 & PREVSTOCKING5mid<=110 & DIAmean<40)#
lml <- summary(lm((F2l$TPAsum)~(F2l$DIAmean) ))#
print(c(lml$coefficients[2], "self thinning line best fit scaling exponent"))#
x=seq(0,50,0.5) #seq(22,35.5,0.5)#
y=(lml$coefficients[2]*x+lml$coefficients[1])  #Best fit #
lines((y)~(x), col="#00000090", lty="dotted", lwd=5) # "#00000085"#
#Future average: BASED ON results from future equilibrium model below#
cond <- "3"	#
x <- 34.27#
y <- 116.5#
xer <- 0.372*2#
yer <- 3.54*2#
points(x,y, pch=21, col=NA, bg="grey35", cex=0.75)#
segments(x-xer,y, x+xer, y, col="#00000075", lwd=1.5)#
segments(x,y-yer, x, y+yer, col="#00000075", lwd=1.5)#
####Organize and subset data to plot with FOR loops #
#looped by phase space location to have sufficient underlying data and to exclude excessive vectors#
DuplicatedVectors <- c(5031, 5034.6, 5036.4, 15036.4, 40040, 65040, 85038.2, 65038.2, 85036.4, 65036.4 ) #
slopetable <- NULL#
for(o in 1:2){#
for(l in 1:6){#
#
if(l==1){	  ##Reforestation#
STOCKval <- c(4,15)#
QMDvalues <- c(seq(21.7,30.7, 3), 36, 45) #c(18,21,24,29, 45)  ##
s1 <- 5#
s2 <- 5#
s3 <- 5#
s4 <- 5#
increment=1}#
#
if(l==2){	  ##Early succession		#
STOCKval <- c(seq(0, 70, 121/7), 82, 101, 121) #6#
QMDvalues <- c(seq(14.5,21.7,1.8)) #c(seq(12,18.4,3.2))  ##
s1 <- 5 #30#
s2 <- 5 #10#
s3 <- 5 #10#
s4 <- 5 #5#
increment=1}#
#
if(l==3){	  ##middle#
STOCKval <- c(15, 32, seq(41, 85, 65/5),98,121) #121,121,121#
QMDvalues <- c(seq(21.7,t3, 10.3/6))  ##
s1 <- 30#
s2 <- 10#
s3 <- 20#
s4 <- 2#
increment=1}#
#
if(l==4){	  ##moving average end#
STOCKval <- c(5, 15, NA, 30, 38, NA, NA,20, 40, 55, 55, 60, 75, NA, NA, NA, 65, 85, NA, 98, 100) #121, 121) #121,121,121#
QMDvalues <- c(seq(t3-1,45,1.8), 50)  ##
s1 <- 40 #100#
s2 <- 30 #50#
s3 <- 25 #40#
s4 <- 30 #5#
increment=3}#
#
if(l==5){	  ##Early early succession#
STOCKval <- c(0, 5, 15, seq(30, 121, 91/6)) #6#
QMDvalues <- c(12.7, 14.5) #
s1 <- 3 #30#
s2 <- 3 #10#
s3 <- 3#10#
s4 <- 3#5#
increment=1}#
#
if(l==6){	  ##moving average end top#
STOCKval <- c(100, NA, NA, 125) #
QMDvalues <- c(seq(t3-1,46,1.8), 50)  ##
s1 <- 5 #100#
s2 <- 5 #50#
s3 <- 5# 3 40#
s4 <- 5 #5#
increment=3}#
#
#Subset by stocking range then mean diameter range#
if(o==1){#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{		#
		stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
		if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors#
		stockcol <- (mean(S11q$PREV_STOCKINGmid,na.rm=TRUE)/4)+18#
#Plot mean change vector#
		arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)),col=(stockcol), length=0.085, angle=25,lwd=lw2+1.25) #
#
#Plot bootstraped error associated with mean diameter and stem density change #
endTPAerror <- boot(S11q$TPAchg, meanFunc, R=1000)	#
endTPAerror <- sqrt(var(endTPAerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))+endTPAerror),  #
					col="grey50", type="l", lwd=0.75)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))-endTPAerror),  #
					col="grey50", type="l", lwd=0.75)#
endQMDerror <- boot(S11q$DIAchg, meanFunc, R=1000)				#
endQMDerror <- sqrt(var(endQMDerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)+endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey50", type="l", lwd=0.75)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)-endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey50", type="l", lwd=0.75)#
	}}}}#
#
#Replot with bold vectors#
if(o==2){#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
#print(length(S11q$PREV_DIAmean))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{	#
		stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
		if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors			#
	arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)),col=("grey15"), length=0.085, angle=25,lwd=lw2+0.75) #
	arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)), col= (S11q$PREV_STOCKINGmid/4)+18, length=0.08, angle=28,lwd=lw2)  # VectCols[s] col=s*1.8+10,  s*1.2+7 # s*2+10 #stockcol#
 #text(mean(S11q$DIAmean, na.rm=TRUE),mean(S11q$TPAsum, na.rm=TRUE), stkqmd, cex=0.5)#
print(c(stkqmd, l, s, h, mean(S11q$TPAchg, na.rm=T), sum(S11q$TPAchg>0, na.rm=T)))#
#
	}}}}#
 } #l loop#
} #o loop#
box()#
####################### FIGURE 1 - END
##########################################################################################################################
###############FIGURE 1B - ESM CARBON MODEL ##############################################################################
#
F2 <- subset(S4swPREC)#
#Re-use previous plot variables - Change Y-axis to vegetation carbon#
F2$DIAmean <- (F2$DIAendmean* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <- (F2$DIAbeginmean *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$TPAsum <- F2$carbon1sum* 0.00112085116  #	#convert living carbon to Mg/ha#
F2$PREV_TPAsum <- F2$PREVcarbon1sum* 0.00112085116 ##convert living carbon to Mg/ha#
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
#
#calculate change in CARBON and mean tree diameter for each plot#
F2$TPAchg <- F2$TPAsum-F2$PREV_TPAsum#
F2$DIAchg <- F2$DIAmean-F2$PREV_DIAmean#
#######################################################################
#set up plot#
dev.new(width=8, height=4.5)#
#
#create plot#
plot(c((F2$PREV_DIAmean),(F2$DIAmean)),c((F2$PREV_TPAsum),(F2$TPAsum)), type ="n", col="grey94", #
	main=c("Empirical Model of 5-year forest carbon change, DBH>=12.7 cm", "FIA survey 1997-2012, Eastern USA") #
	,ylim=c(6.5,200), xlim=c(14, 43), mgp=c(2,1,0)#
	,xlab=NA, ylab=NA, axes=FALSE) #1250#
#
axis(side=1, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=2, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=1, lwd=0, line= -0.7)#
axis(side=2, lwd=0, line= -0.7)#
#
mtext(side=1, "Mean tree diameter (cm)", line=1.2)#
mtext(side=2, expression(paste("Carbon, living trees (Mg ha"^"-1",")")), line=1.2)#
#
box()#
#
#plot all plots as individual background vectors colored by inital stocking #
arrows((F2$PREV_DIAmean),(F2$PREV_TPAsum),(F2$DIAmean),(F2$TPAsum), col= (F2$PREV_STOCKINGmid/4)+18, length=0.065, angle=22,lwd=0.9)#
#Set up plot with relative plot locations and legend - ideal for dev.new(width=8, height=4.5)#
x1 <- 14-0.5#
x2 <- 14+0.5#
y1 <- (c(seq(32,26.05,-.55))*2.5-52)*6.1#
y2 <- (c(seq(32.2,26.25,-0.085))*2.5-52)*6.1#
y3 <- (c(seq(31.8,26,-0.73))*2.5-52)*6.1#
x1b <- x1-7 #x1b <- x1-7.5#
y1b <- y1[1]-264 #y1b <- y1[1]-215#
cex1 <- 0.8#
t3 <- 32 #transition mean diameter between independent vectors and moving average#
lw2 <- 2 #arrow width#
#
#LEGEND#
stockcols2 <- rev((seq(1,120,15)/4)+18)#
segments(x1,y2,x2, y2, c(seq(45,18, -0.384)),lwd=2, lend=2) #c(seq(66,38,-0.3))  col="grey85"#
points(30,100, pch=16, cex=200, col="#FFFFFF75" ) #FFFFFF75#
text(x1-0.25, y1[1]+26,"5-year Temperate Forest Carbon Change", pos=4, cex=1.05, font=3)#
segments(c(x1,x1,x1),c( y2[1], y2[36],  y2[71]),x2+1.25 ,c(y2[1], y2[36],  y2[71]), col="black",lwd=0.9, lend=2)#
segments(c(x1),c(y2[10]),x2+1.25,c(y2[10]), col="black",lwd=0.9, lend=2, lty="dashed")#
arrows(x1+0.1,y3,x2-0.1,y3, col="black", length=0.085, angle=25,lwd=lw2+1)  #
arrows(x1+0.1,y3,x2-0.1,y3, col=c(stockcols2), length=0.08, angle=28,lwd=lw2)  #
text(x1-.5, y1[1]+10,"Initial relative density", cex=0.9, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[1]-5,"Over", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[4],"Full", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[9],"Under", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
#
#Carbon thinning line - fit to tree diameters >5 inches with relative densities between 90-110#
F2l <- subset(F2, PREVSTOCKING5mid>=90 & PREVSTOCKING5mid<=110 & DIAmean<40)#
lml <- summary(lm((F2l$TPAsum)~(F2l$DIAmean) ))#
print(c(lml$coefficients[2], "self thinning line best fit scaling exponent"))#
x=seq(0,50,0.5) #seq(22,35.5,0.5)#
y=(lml$coefficients[2]*x+lml$coefficients[1])  #Best fit #
lines((y)~(x), col="#00000090", lty="dotted", lwd=5) # "#00000085"#
#Future average: BASED ON results from future equilibrium model below#
cond <- "3"	#
x <- 34.27#
y <- 116.5#
xer <- 0.372*2#
yer <- 3.54*2#
points(x,y, pch=21, col=NA, bg="grey35", cex=0.75)#
segments(x-xer,y, x+xer, y, col="#00000075", lwd=1.5)#
segments(x,y-yer, x, y+yer, col="#00000075", lwd=1.5)#
####Organize and subset data
DuplicatedVectors <- NA #c(5031, 5034.6, 5036.4, 15036.4, 40040, 65040, 85038.2, 65038.2, 85036.4, 65036.4 )
####Organize and subset data to plot with FOR loops #
#looped by phase space location to have sufficient underlying data and to exclude excessive vectors#
DuplicatedVectors <- NA #c(5031, 5034.6, 5036.4, 15036.4, 40040, 65040, 85038.2, 65038.2, 85036.4, 65036.4 ) #
slopetable <- NULL#
for(o in 1:2){#
for(l in 1:6){#
#
if(l==1){	  ##Reforestation#
STOCKval <- c(4,15)#
QMDvalues <- c(seq(21.7,30.7, 3), 36, 45) #c(18,21,24,29, 45)  ##
s1 <- 5#
s2 <- 5#
s3 <- 5#
s4 <- 5#
increment=1}#
#
if(l==2){	  ##Early succession		#
STOCKval <- c(seq(0, 70, 121/7), 82, 101, 121) #6#
QMDvalues <- c(seq(14.5,21.7,1.8)) #c(seq(12,18.4,3.2))  ##
s1 <- 5 #30#
s2 <- 5 #10#
s3 <- 5 #10#
s4 <- 5 #5#
increment=1}#
#
if(l==3){	  ##middle#
STOCKval <- c(15, 32, seq(41, 85, 65/5),98,121) #121,121,121#
QMDvalues <- c(seq(21.7,t3, 10.3/6))  ##
s1 <- 30#
s2 <- 10#
s3 <- 20#
s4 <- 2#
increment=1}#
#
if(l==4){	  ##moving average end#
STOCKval <- c(5, 15, NA, 30, 38, NA, NA,20, 40, 55, 55, 60, 75, NA, NA, NA, 65, 85, NA, 98, 100) #121, 121) #121,121,121#
QMDvalues <- c(seq(t3-1,45,1.8), 50)  ##
s1 <- 40 #100#
s2 <- 30 #50#
s3 <- 25 #40#
s4 <- 30 #5#
increment=3}#
#
if(l==5){	  ##Early early succession#
STOCKval <- c(0, 5, 15, seq(30, 121, 91/6)) #6#
QMDvalues <- c(12.7, 14.5) #
s1 <- 3 #30#
s2 <- 3 #10#
s3 <- 3#10#
s4 <- 3#5#
increment=1}#
#
if(l==6){	  ##moving average end top#
STOCKval <- c(100, NA, NA, 125) #
QMDvalues <- c(seq(t3-1,46,1.8), 50)  ##
s1 <- 5 #100#
s2 <- 5 #50#
s3 <- 5# 3 40#
s4 <- 5 #5#
increment=3}#
#
#Subset by stocking range then mean diameter range#
if(o==1){#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{		#
		stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
		if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors#
		stockcol <- (mean(S11q$PREV_STOCKINGmid,na.rm=TRUE)/4)+18#
#Plot mean change vector#
		arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)),col=(stockcol), length=0.085, angle=25,lwd=lw2+1.25) #
#
#Plot bootstraped error associated with mean diameter and stem density change #
endTPAerror <- boot(S11q$TPAchg, meanFunc, R=1000)	#
endTPAerror <- sqrt(var(endTPAerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))+endTPAerror),  #
					col="grey50", type="l", lwd=0.75)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))-endTPAerror),  #
					col="grey50", type="l", lwd=0.75)#
endQMDerror <- boot(S11q$DIAchg, meanFunc, R=1000)				#
endQMDerror <- sqrt(var(endQMDerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)+endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey50", type="l", lwd=0.75)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)-endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey50", type="l", lwd=0.75)#
	}}}}#
#
#Replot with bold vectors#
if(o==2){#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
#print(length(S11q$PREV_DIAmean))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{	#
		stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
		if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors			#
	arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)),col=("grey15"), length=0.085, angle=25,lwd=lw2+0.75) #
	arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)), col= (S11q$PREV_STOCKINGmid/4)+18, length=0.08, angle=28,lwd=lw2)  # VectCols[s] col=s*1.8+10,  s*1.2+7 # s*2+10 #stockcol#
 #text(mean(S11q$DIAmean, na.rm=TRUE),mean(S11q$TPAsum, na.rm=TRUE), stkqmd, cex=0.5)#
print(c(stkqmd, l, s, h, mean(S11q$TPAchg, na.rm=T), sum(S11q$TPAchg>0, na.rm=T)))#
#
	}}}}#
 } #l loop#
} #o loop#
box()#
####################### FIGURE 1 - END
QMDvalues <- c(seq(t3-1,46,1.8), 50)
QMDvalues
QMDvalues <- c(seq(t3-1,43.6, 2), 50)
QMDvalues
##########################################################################################################################
###############FIGURE 1B - ESM CARBON MODEL ##############################################################################
#
F2 <- subset(S4swPREC)#
#Re-use previous plot variables - Change Y-axis to vegetation carbon#
F2$DIAmean <- (F2$DIAendmean* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <- (F2$DIAbeginmean *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$TPAsum <- F2$carbon1sum* 0.00112085116  #	#convert living carbon to Mg/ha#
F2$PREV_TPAsum <- F2$PREVcarbon1sum* 0.00112085116 ##convert living carbon to Mg/ha#
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
#
#calculate change in CARBON and mean tree diameter for each plot#
F2$TPAchg <- F2$TPAsum-F2$PREV_TPAsum#
F2$DIAchg <- F2$DIAmean-F2$PREV_DIAmean#
#######################################################################
#set up plot#
dev.new(width=8, height=4.5)#
#
#create plot#
plot(c((F2$PREV_DIAmean),(F2$DIAmean)),c((F2$PREV_TPAsum),(F2$TPAsum)), type ="n", col="grey94", #
	main=c("Empirical Model of 5-year forest carbon change, DBH>=12.7 cm", "FIA survey 1997-2012, Eastern USA") #
	,ylim=c(6.5,200), xlim=c(14, 43), mgp=c(2,1,0)#
	,xlab=NA, ylab=NA, axes=FALSE) #1250#
#
axis(side=1, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=2, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=1, lwd=0, line= -0.7)#
axis(side=2, lwd=0, line= -0.7)#
#
mtext(side=1, "Mean tree diameter (cm)", line=1.2)#
mtext(side=2, expression(paste("Carbon, living trees (Mg ha"^"-1",")")), line=1.2)#
#
box()#
#
#plot all plots as individual background vectors colored by inital stocking #
arrows((F2$PREV_DIAmean),(F2$PREV_TPAsum),(F2$DIAmean),(F2$TPAsum), col= (F2$PREV_STOCKINGmid/4)+18, length=0.065, angle=22,lwd=0.9)#
#Set up plot with relative plot locations and legend - ideal for dev.new(width=8, height=4.5)#
x1 <- 14-0.5#
x2 <- 14+0.5#
y1 <- (c(seq(32,26.05,-.55))*2.5-52)*6.1#
y2 <- (c(seq(32.2,26.25,-0.085))*2.5-52)*6.1#
y3 <- (c(seq(31.8,26,-0.73))*2.5-52)*6.1#
x1b <- x1-7 #x1b <- x1-7.5#
y1b <- y1[1]-264 #y1b <- y1[1]-215#
cex1 <- 0.8#
t3 <- 32 #transition mean diameter between independent vectors and moving average#
lw2 <- 2 #arrow width#
#
#LEGEND#
stockcols2 <- rev((seq(1,120,15)/4)+18)#
segments(x1,y2,x2, y2, c(seq(45,18, -0.384)),lwd=2, lend=2) #c(seq(66,38,-0.3))  col="grey85"#
points(30,100, pch=16, cex=200, col="#FFFFFF75" ) #FFFFFF75#
text(x1-0.25, y1[1]+26,"5-year Temperate Forest Carbon Change", pos=4, cex=1.05, font=3)#
segments(c(x1,x1,x1),c( y2[1], y2[36],  y2[71]),x2+1.25 ,c(y2[1], y2[36],  y2[71]), col="black",lwd=0.9, lend=2)#
segments(c(x1),c(y2[10]),x2+1.25,c(y2[10]), col="black",lwd=0.9, lend=2, lty="dashed")#
arrows(x1+0.1,y3,x2-0.1,y3, col="black", length=0.085, angle=25,lwd=lw2+1)  #
arrows(x1+0.1,y3,x2-0.1,y3, col=c(stockcols2), length=0.08, angle=28,lwd=lw2)  #
text(x1-.5, y1[1]+10,"Initial relative density", cex=0.9, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[1]-5,"Over", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[4],"Full", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[9],"Under", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
#
#Carbon thinning line - fit to tree diameters >5 inches with relative densities between 90-110#
F2l <- subset(F2, PREVSTOCKING5mid>=90 & PREVSTOCKING5mid<=110 & DIAmean<40)#
lml <- summary(lm((F2l$TPAsum)~(F2l$DIAmean) ))#
print(c(lml$coefficients[2], "self thinning line best fit scaling exponent"))#
x=seq(0,50,0.5) #seq(22,35.5,0.5)#
y=(lml$coefficients[2]*x+lml$coefficients[1])  #Best fit #
lines((y)~(x), col="#00000090", lty="dotted", lwd=5) # "#00000085"#
#Future average: BASED ON results from future equilibrium model below#
cond <- "3"	#
x <- 34.27#
y <- 116.5#
xer <- 0.372*2#
yer <- 3.54*2#
points(x,y, pch=21, col=NA, bg="grey35", cex=0.75)#
segments(x-xer,y, x+xer, y, col="#00000075", lwd=1.5)#
segments(x,y-yer, x, y+yer, col="#00000075", lwd=1.5)#
####Organize and subset data to plot with FOR loops #
#looped by phase space location to have sufficient underlying data and to exclude excessive vectors#
DuplicatedVectors <- NA #c(5031, 5034.6, 5036.4, 15036.4, 40040, 65040, 85038.2, 65038.2, 85036.4, 65036.4 ) #
slopetable <- NULL#
for(o in 1:2){#
for(l in 1:6){#
#
if(l==1){	  ##Reforestation#
STOCKval <- c(4,15)#
QMDvalues <- c(seq(21.7,30.7, 3), 36, 45) #c(18,21,24,29, 45)  ##
s1 <- 5#
s2 <- 5#
s3 <- 5#
s4 <- 5#
increment=1}#
#
if(l==2){	  ##Early succession		#
STOCKval <- c(seq(0, 70, 121/7), 82, 101, 121) #6#
QMDvalues <- c(seq(14.5,21.7,1.8)) #c(seq(12,18.4,3.2))  ##
s1 <- 5 #30#
s2 <- 5 #10#
s3 <- 5 #10#
s4 <- 5 #5#
increment=1}#
#
if(l==3){	  ##middle#
STOCKval <- c(15, 32, seq(41, 85, 65/5),98,121) #121,121,121#
QMDvalues <- c(seq(21.7,t3, 10.3/6))  ##
s1 <- 30#
s2 <- 10#
s3 <- 20#
s4 <- 2#
increment=1}#
#
if(l==4){	  ##moving average end#
STOCKval <- c(5, 15, NA, 30, 38, NA, NA,20, 40, 55, 55, 60, 75, NA, NA, NA, 65, 85, NA, 98, 100) #121, 121) #121,121,121#
QMDvalues <- c(seq(t3-1,45,1.8), 50)  ##
s1 <- 40 #100#
s2 <- 30 #50#
s3 <- 25 #40#
s4 <- 30 #5#
increment=3}#
#
if(l==5){	  ##Early early succession#
STOCKval <- c(0, 5, 15, seq(30, 121, 91/6)) #6#
QMDvalues <- c(12.7, 14.5) #
s1 <- 3 #30#
s2 <- 3 #10#
s3 <- 3#10#
s4 <- 3#5#
increment=1}#
#
if(l==6){	  ##moving average end top#
STOCKval <- c(100, NA, NA, 125) #
QMDvalues <- c(seq(t3-1,43.6, 2), 50)  ##
s1 <- 5 #100#
s2 <- 5 #50#
s3 <- 5# 3 40#
s4 <- 5 #5#
increment=3}#
#
#Subset by stocking range then mean diameter range#
if(o==1){#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{		#
		stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
		if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors#
		stockcol <- (mean(S11q$PREV_STOCKINGmid,na.rm=TRUE)/4)+18#
#Plot mean change vector#
		arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)),col=(stockcol), length=0.085, angle=25,lwd=lw2+1.25) #
#
#Plot bootstraped error associated with mean diameter and stem density change #
endTPAerror <- boot(S11q$TPAchg, meanFunc, R=1000)	#
endTPAerror <- sqrt(var(endTPAerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))+endTPAerror),  #
					col="grey50", type="l", lwd=0.75)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))-endTPAerror),  #
					col="grey50", type="l", lwd=0.75)#
endQMDerror <- boot(S11q$DIAchg, meanFunc, R=1000)				#
endQMDerror <- sqrt(var(endQMDerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)+endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey50", type="l", lwd=0.75)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)-endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey50", type="l", lwd=0.75)#
	}}}}#
#
#Replot with bold vectors#
if(o==2){#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
#print(length(S11q$PREV_DIAmean))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{	#
		stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
		if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors			#
	arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)),col=("grey15"), length=0.085, angle=25,lwd=lw2+0.75) #
	arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)), col= (S11q$PREV_STOCKINGmid/4)+18, length=0.08, angle=28,lwd=lw2)  # VectCols[s] col=s*1.8+10,  s*1.2+7 # s*2+10 #stockcol#
 #text(mean(S11q$DIAmean, na.rm=TRUE),mean(S11q$TPAsum, na.rm=TRUE), stkqmd, cex=0.5)#
print(c(stkqmd, l, s, h, mean(S11q$TPAchg, na.rm=T), sum(S11q$TPAchg>0, na.rm=T)))#
#
	}}}}#
 } #l loop#
} #o loop#
box()#
####################### FIGURE 1 - END
text(mean(S11q$DIAmean, na.rm=TRUE),mean(S11q$TPAsum, na.rm=TRUE), stkqmd, cex=0.5)
stkqmd
text(mean(S11q$DIAmean, na.rm=TRUE),mean(S11q$TPAsum, na.rm=TRUE), stkqmd, cex=0.5)
QMDvalues <- c(seq(t3-1,45,1.8), 50)
QMDvalues
#create plot#
plot(c((F2$PREV_DIAmean),(F2$DIAmean)),c((F2$PREV_TPAsum),(F2$TPAsum)), type ="n", col="grey94", #
	main=c("Empirical Model of 5-year forest carbon change, DBH>=12.7 cm", "FIA survey 1997-2012, Eastern USA") #
	,ylim=c(6.5,200), xlim=c(14, 43), mgp=c(2,1,0)#
	,xlab=NA, ylab=NA, axes=FALSE) #1250#
#
axis(side=1, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=2, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=1, lwd=0, line= -0.7)#
axis(side=2, lwd=0, line= -0.7)#
#
mtext(side=1, "Mean tree diameter (cm)", line=1.2)#
mtext(side=2, expression(paste("Carbon, living trees (Mg ha"^"-1",")")), line=1.2)#
#
box()#
#
#plot all plots as individual background vectors colored by inital stocking #
arrows((F2$PREV_DIAmean),(F2$PREV_TPAsum),(F2$DIAmean),(F2$TPAsum), col= (F2$PREV_STOCKINGmid/4)+18, length=0.065, angle=22,lwd=0.9)#
#Set up plot with relative plot locations and legend - ideal for dev.new(width=8, height=4.5)#
x1 <- 14-0.5#
x2 <- 14+0.5#
y1 <- (c(seq(32,26.05,-.55))*2.5-52)*6.1#
y2 <- (c(seq(32.2,26.25,-0.085))*2.5-52)*6.1#
y3 <- (c(seq(31.8,26,-0.73))*2.5-52)*6.1#
x1b <- x1-7 #x1b <- x1-7.5#
y1b <- y1[1]-264 #y1b <- y1[1]-215#
cex1 <- 0.8#
t3 <- 32 #transition mean diameter between independent vectors and moving average#
lw2 <- 2 #arrow width#
#
#LEGEND#
stockcols2 <- rev((seq(1,120,15)/4)+18)#
segments(x1,y2,x2, y2, c(seq(45,18, -0.384)),lwd=2, lend=2) #c(seq(66,38,-0.3))  col="grey85"#
points(30,100, pch=16, cex=200, col="#FFFFFF75" ) #FFFFFF75#
text(x1-0.25, y1[1]+26,"5-year Temperate Forest Carbon Change", pos=4, cex=1.05, font=3)#
segments(c(x1,x1,x1),c( y2[1], y2[36],  y2[71]),x2+1.25 ,c(y2[1], y2[36],  y2[71]), col="black",lwd=0.9, lend=2)#
segments(c(x1),c(y2[10]),x2+1.25,c(y2[10]), col="black",lwd=0.9, lend=2, lty="dashed")#
arrows(x1+0.1,y3,x2-0.1,y3, col="black", length=0.085, angle=25,lwd=lw2+1)  #
arrows(x1+0.1,y3,x2-0.1,y3, col=c(stockcols2), length=0.08, angle=28,lwd=lw2)  #
text(x1-.5, y1[1]+10,"Initial relative density", cex=0.9, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[1]-5,"Over", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[4],"Full", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[9],"Under", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
#
#Carbon thinning line - fit to tree diameters >5 inches with relative densities between 90-110#
F2l <- subset(F2, PREVSTOCKING5mid>=90 & PREVSTOCKING5mid<=110 & DIAmean<40)#
lml <- summary(lm((F2l$TPAsum)~(F2l$DIAmean) ))#
print(c(lml$coefficients[2], "self thinning line best fit scaling exponent"))#
x=seq(0,50,0.5) #seq(22,35.5,0.5)#
y=(lml$coefficients[2]*x+lml$coefficients[1])  #Best fit #
lines((y)~(x), col="#00000090", lty="dotted", lwd=5) # "#00000085"#
#Future average: BASED ON results from future equilibrium model below#
cond <- "3"	#
x <- 34.27#
y <- 116.5#
xer <- 0.372*2#
yer <- 3.54*2#
points(x,y, pch=21, col=NA, bg="grey35", cex=0.75)#
segments(x-xer,y, x+xer, y, col="#00000075", lwd=1.5)#
segments(x,y-yer, x, y+yer, col="#00000075", lwd=1.5)#
####Organize and subset data to plot with FOR loops #
#looped by phase space location to have sufficient underlying data and to exclude excessive vectors#
DuplicatedVectors <- NA #c(5031, 5034.6, 5036.4, 15036.4, 40040, 65040, 85038.2, 65038.2, 85036.4, 65036.4 ) #
slopetable <- NULL#
for(o in 1:2){#
for(l in 1:6){#
#
if(l==1){	  ##Reforestation#
STOCKval <- c(4,15)#
QMDvalues <- c(seq(21.7,30.7, 3), 36, 45) #c(18,21,24,29, 45)  ##
s1 <- 5#
s2 <- 5#
s3 <- 5#
s4 <- 5#
increment=1}#
#
if(l==2){	  ##Early succession		#
STOCKval <- c(seq(0, 70, 121/7), 82, 101, 121) #6#
QMDvalues <- c(seq(14.5,21.7,1.8)) #c(seq(12,18.4,3.2))  ##
s1 <- 5 #30#
s2 <- 5 #10#
s3 <- 5 #10#
s4 <- 5 #5#
increment=1}#
#
if(l==3){	  ##middle#
STOCKval <- c(15, 32, seq(41, 85, 65/5),98,121) #121,121,121#
QMDvalues <- c(seq(21.7,t3, 10.3/6))  ##
s1 <- 30#
s2 <- 10#
s3 <- 20#
s4 <- 2#
increment=1}#
#
if(l==4){	  ##moving average end#
STOCKval <- c(5, 15, NA, 30, 38, NA, NA,20, 40, 55, 55, 60, 75, NA, NA, NA, 65, 85, NA, 98, 100) #121, 121) #121,121,121#
QMDvalues <- c(seq(t3-1,43.6,1.8), 50)  ##
s1 <- 40 #100#
s2 <- 30 #50#
s3 <- 25 #40#
s4 <- 30 #5#
increment=3}#
#
if(l==5){	  ##Early early succession#
STOCKval <- c(0, 5, 15, seq(30, 121, 91/6)) #6#
QMDvalues <- c(12.7, 14.5) #
s1 <- 3 #30#
s2 <- 3 #10#
s3 <- 3#10#
s4 <- 3#5#
increment=1}#
#
if(l==6){	  ##moving average end top#
STOCKval <- c(100, NA, NA, 125) #
QMDvalues <- c(seq(t3-1,43.6, 1.8), 50)  ##
s1 <- 5 #100#
s2 <- 5 #50#
s3 <- 5# 3 40#
s4 <- 5 #5#
increment=3}#
#
#Subset by stocking range then mean diameter range#
if(o==1){#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{		#
		stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
		if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors#
		stockcol <- (mean(S11q$PREV_STOCKINGmid,na.rm=TRUE)/4)+18#
#Plot mean change vector#
		arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)),col=(stockcol), length=0.085, angle=25,lwd=lw2+1.25) #
#
#Plot bootstraped error associated with mean diameter and stem density change #
endTPAerror <- boot(S11q$TPAchg, meanFunc, R=1000)	#
endTPAerror <- sqrt(var(endTPAerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))+endTPAerror),  #
					col="grey50", type="l", lwd=0.75)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))-endTPAerror),  #
					col="grey50", type="l", lwd=0.75)#
endQMDerror <- boot(S11q$DIAchg, meanFunc, R=1000)				#
endQMDerror <- sqrt(var(endQMDerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)+endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey50", type="l", lwd=0.75)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)-endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey50", type="l", lwd=0.75)#
	}}}}#
#
#Replot with bold vectors#
if(o==2){#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
#print(length(S11q$PREV_DIAmean))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{	#
		stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
		if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors			#
	arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)),col=("grey15"), length=0.085, angle=25,lwd=lw2+0.75) #
	arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)), col= (S11q$PREV_STOCKINGmid/4)+18, length=0.08, angle=28,lwd=lw2)  # VectCols[s] col=s*1.8+10,  s*1.2+7 # s*2+10 #stockcol#
 text(mean(S11q$DIAmean, na.rm=TRUE),mean(S11q$TPAsum, na.rm=TRUE), stkqmd, cex=0.5)#
print(c(stkqmd, l, s, h, mean(S11q$TPAchg, na.rm=T), sum(S11q$TPAchg>0, na.rm=T)))#
#
	}}}}#
 } #l loop#
} #o loop#
box()#
####################### FIGURE 1 - END
#create plot#
plot(c((F2$PREV_DIAmean),(F2$DIAmean)),c((F2$PREV_TPAsum),(F2$TPAsum)), type ="n", col="grey94", #
	main=c("Empirical Model of 5-year forest carbon change, DBH>=12.7 cm", "FIA survey 1997-2012, Eastern USA") #
	,ylim=c(6.5,200), xlim=c(14, 43), mgp=c(2,1,0)#
	,xlab=NA, ylab=NA, axes=FALSE) #1250#
#
axis(side=1, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=2, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=1, lwd=0, line= -0.7)#
axis(side=2, lwd=0, line= -0.7)#
#
mtext(side=1, "Mean tree diameter (cm)", line=1.2)#
mtext(side=2, expression(paste("Carbon, living trees (Mg ha"^"-1",")")), line=1.2)#
#
box()#
#
#plot all plots as individual background vectors colored by inital stocking #
arrows((F2$PREV_DIAmean),(F2$PREV_TPAsum),(F2$DIAmean),(F2$TPAsum), col= (F2$PREV_STOCKINGmid/4)+18, length=0.065, angle=22,lwd=0.9)#
#Set up plot with relative plot locations and legend - ideal for dev.new(width=8, height=4.5)#
x1 <- 14-0.5#
x2 <- 14+0.5#
y1 <- (c(seq(32,26.05,-.55))*2.5-52)*6.1#
y2 <- (c(seq(32.2,26.25,-0.085))*2.5-52)*6.1#
y3 <- (c(seq(31.8,26,-0.73))*2.5-52)*6.1#
x1b <- x1-7 #x1b <- x1-7.5#
y1b <- y1[1]-264 #y1b <- y1[1]-215#
cex1 <- 0.8#
t3 <- 32 #transition mean diameter between independent vectors and moving average#
lw2 <- 2 #arrow width#
#
#LEGEND#
stockcols2 <- rev((seq(1,120,15)/4)+18)#
segments(x1,y2,x2, y2, c(seq(45,18, -0.384)),lwd=2, lend=2) #c(seq(66,38,-0.3))  col="grey85"#
points(30,100, pch=16, cex=200, col="#FFFFFF75" ) #FFFFFF75#
text(x1-0.25, y1[1]+26,"5-year Temperate Forest Carbon Change", pos=4, cex=1.05, font=3)#
segments(c(x1,x1,x1),c( y2[1], y2[36],  y2[71]),x2+1.25 ,c(y2[1], y2[36],  y2[71]), col="black",lwd=0.9, lend=2)#
segments(c(x1),c(y2[10]),x2+1.25,c(y2[10]), col="black",lwd=0.9, lend=2, lty="dashed")#
arrows(x1+0.1,y3,x2-0.1,y3, col="black", length=0.085, angle=25,lwd=lw2+1)  #
arrows(x1+0.1,y3,x2-0.1,y3, col=c(stockcols2), length=0.08, angle=28,lwd=lw2)  #
text(x1-.5, y1[1]+10,"Initial relative density", cex=0.9, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[1]-5,"Over", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[4],"Full", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[9],"Under", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
#
#Carbon thinning line - fit to tree diameters >5 inches with relative densities between 90-110#
F2l <- subset(F2, PREVSTOCKING5mid>=90 & PREVSTOCKING5mid<=110 & DIAmean<40)#
lml <- summary(lm((F2l$TPAsum)~(F2l$DIAmean) ))#
print(c(lml$coefficients[2], "self thinning line best fit scaling exponent"))#
x=seq(0,50,0.5) #seq(22,35.5,0.5)#
y=(lml$coefficients[2]*x+lml$coefficients[1])  #Best fit #
lines((y)~(x), col="#00000090", lty="dotted", lwd=5) # "#00000085"#
#Future average: BASED ON results from future equilibrium model below#
cond <- "3"	#
x <- 34.27#
y <- 116.5#
xer <- 0.372*2#
yer <- 3.54*2#
points(x,y, pch=21, col=NA, bg="grey35", cex=0.75)#
segments(x-xer,y, x+xer, y, col="#00000075", lwd=1.5)#
segments(x,y-yer, x, y+yer, col="#00000075", lwd=1.5)#
####Organize and subset data to plot with FOR loops #
#looped by phase space location to have sufficient underlying data and to exclude excessive vectors#
DuplicatedVectors <- NA #c(5031, 5034.6, 5036.4, 15036.4, 40040, 65040, 85038.2, 65038.2, 85036.4, 65036.4 ) #
slopetable <- NULL#
for(o in 2:2){#
for(l in 1:6){#
#
if(l==1){	  ##Reforestation#
STOCKval <- c(4,15)#
QMDvalues <- c(seq(21.7,30.7, 3), 36, 45) #c(18,21,24,29, 45)  ##
s1 <- 5#
s2 <- 5#
s3 <- 5#
s4 <- 5#
increment=1}#
#
if(l==2){	  ##Early succession		#
STOCKval <- c(seq(0, 70, 121/7), 82, 101, 121) #6#
QMDvalues <- c(seq(14.5,21.7,1.8)) #c(seq(12,18.4,3.2))  ##
s1 <- 5 #30#
s2 <- 5 #10#
s3 <- 5 #10#
s4 <- 5 #5#
increment=1}#
#
if(l==3){	  ##middle#
STOCKval <- c(15, 32, seq(41, 85, 65/5),98,121) #121,121,121#
QMDvalues <- c(seq(21.7,t3, 10.3/6))  ##
s1 <- 30#
s2 <- 10#
s3 <- 20#
s4 <- 2#
increment=1}#
#
if(l==4){	  ##moving average end#
STOCKval <- c(5, 15, NA, 30, 38, NA, NA,20, 40, 55, 55, 60, 75, NA, NA, NA, 65, 85, NA, 98, 100) #121, 121) #121,121,121#
QMDvalues <- c(seq(t3-1,43.6,1.8), 50)  ##
s1 <- 40 #100#
s2 <- 3 #50#
s3 <- 5 #40#
s4 <- 3 #5#
increment=3}#
#
if(l==5){	  ##Early early succession#
STOCKval <- c(0, 5, 15, seq(30, 121, 91/6)) #6#
QMDvalues <- c(12.7, 14.5) #
s1 <- 3 #30#
s2 <- 3 #10#
s3 <- 3#10#
s4 <- 3#5#
increment=1}#
#
if(l==6){	  ##moving average end top#
STOCKval <- c(100, NA, NA, 125) #
QMDvalues <- c(seq(t3-1,43.6, 1.8), 50)  ##
s1 <- 5 #100#
s2 <- 5 #50#
s3 <- 5# 3 40#
s4 <- 5 #5#
increment=3}#
#
#Subset by stocking range then mean diameter range#
if(o==1){#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{		#
		stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
		if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors#
		stockcol <- (mean(S11q$PREV_STOCKINGmid,na.rm=TRUE)/4)+18#
#Plot mean change vector#
		arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)),col=(stockcol), length=0.085, angle=25,lwd=lw2+1.25) #
#
#Plot bootstraped error associated with mean diameter and stem density change #
endTPAerror <- boot(S11q$TPAchg, meanFunc, R=1000)	#
endTPAerror <- sqrt(var(endTPAerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))+endTPAerror),  #
					col="grey50", type="l", lwd=0.75)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))-endTPAerror),  #
					col="grey50", type="l", lwd=0.75)#
endQMDerror <- boot(S11q$DIAchg, meanFunc, R=1000)				#
endQMDerror <- sqrt(var(endQMDerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)+endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey50", type="l", lwd=0.75)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)-endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey50", type="l", lwd=0.75)#
	}}}}#
#
#Replot with bold vectors#
if(o==2){#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
#print(length(S11q$PREV_DIAmean))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{	#
		stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
		if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors			#
	arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)),col=("grey15"), length=0.085, angle=25,lwd=lw2+0.75) #
	arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)), col= (S11q$PREV_STOCKINGmid/4)+18, length=0.08, angle=28,lwd=lw2)  # VectCols[s] col=s*1.8+10,  s*1.2+7 # s*2+10 #stockcol#
 text(mean(S11q$DIAmean, na.rm=TRUE),mean(S11q$TPAsum, na.rm=TRUE), stkqmd, cex=0.5)#
print(c(stkqmd, l, s, h, mean(S11q$TPAchg, na.rm=T), sum(S11q$TPAchg>0, na.rm=T)))#
#
	}}}}#
 } #l loop#
} #o loop#
box()#
####################### FIGURE 1 - END
#create plot#
plot(c((F2$PREV_DIAmean),(F2$DIAmean)),c((F2$PREV_TPAsum),(F2$TPAsum)), type ="n", col="grey94", #
	main=c("Empirical Model of 5-year forest carbon change, DBH>=12.7 cm", "FIA survey 1997-2012, Eastern USA") #
	,ylim=c(6.5,200), xlim=c(14, 43), mgp=c(2,1,0)#
	,xlab=NA, ylab=NA, axes=FALSE) #1250#
#
axis(side=1, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=2, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=1, lwd=0, line= -0.7)#
axis(side=2, lwd=0, line= -0.7)#
#
mtext(side=1, "Mean tree diameter (cm)", line=1.2)#
mtext(side=2, expression(paste("Carbon, living trees (Mg ha"^"-1",")")), line=1.2)#
#
box()#
#
#plot all plots as individual background vectors colored by inital stocking #
arrows((F2$PREV_DIAmean),(F2$PREV_TPAsum),(F2$DIAmean),(F2$TPAsum), col= (F2$PREV_STOCKINGmid/4)+18, length=0.065, angle=22,lwd=0.9)#
#Set up plot with relative plot locations and legend - ideal for dev.new(width=8, height=4.5)#
x1 <- 14-0.5#
x2 <- 14+0.5#
y1 <- (c(seq(32,26.05,-.55))*2.5-52)*6.1#
y2 <- (c(seq(32.2,26.25,-0.085))*2.5-52)*6.1#
y3 <- (c(seq(31.8,26,-0.73))*2.5-52)*6.1#
x1b <- x1-7 #x1b <- x1-7.5#
y1b <- y1[1]-264 #y1b <- y1[1]-215#
cex1 <- 0.8#
t3 <- 32 #transition mean diameter between independent vectors and moving average#
lw2 <- 2 #arrow width#
#
#LEGEND#
stockcols2 <- rev((seq(1,120,15)/4)+18)#
segments(x1,y2,x2, y2, c(seq(45,18, -0.384)),lwd=2, lend=2) #c(seq(66,38,-0.3))  col="grey85"#
points(30,100, pch=16, cex=200, col="#FFFFFF75" ) #FFFFFF75#
text(x1-0.25, y1[1]+26,"5-year Temperate Forest Carbon Change", pos=4, cex=1.05, font=3)#
segments(c(x1,x1,x1),c( y2[1], y2[36],  y2[71]),x2+1.25 ,c(y2[1], y2[36],  y2[71]), col="black",lwd=0.9, lend=2)#
segments(c(x1),c(y2[10]),x2+1.25,c(y2[10]), col="black",lwd=0.9, lend=2, lty="dashed")#
arrows(x1+0.1,y3,x2-0.1,y3, col="black", length=0.085, angle=25,lwd=lw2+1)  #
arrows(x1+0.1,y3,x2-0.1,y3, col=c(stockcols2), length=0.08, angle=28,lwd=lw2)  #
text(x1-.5, y1[1]+10,"Initial relative density", cex=0.9, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[1]-5,"Over", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[4],"Full", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[9],"Under", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
#
#Carbon thinning line - fit to tree diameters >5 inches with relative densities between 90-110#
F2l <- subset(F2, PREVSTOCKING5mid>=90 & PREVSTOCKING5mid<=110 & DIAmean<40)#
lml <- summary(lm((F2l$TPAsum)~(F2l$DIAmean) ))#
print(c(lml$coefficients[2], "self thinning line best fit scaling exponent"))#
x=seq(0,50,0.5) #seq(22,35.5,0.5)#
y=(lml$coefficients[2]*x+lml$coefficients[1])  #Best fit #
lines((y)~(x), col="#00000090", lty="dotted", lwd=5) # "#00000085"#
#Future average: BASED ON results from future equilibrium model below#
cond <- "3"	#
x <- 34.27#
y <- 116.5#
xer <- 0.372*2#
yer <- 3.54*2#
points(x,y, pch=21, col=NA, bg="grey35", cex=0.75)#
segments(x-xer,y, x+xer, y, col="#00000075", lwd=1.5)#
segments(x,y-yer, x, y+yer, col="#00000075", lwd=1.5)#
####Organize and subset data to plot with FOR loops #
#looped by phase space location to have sufficient underlying data and to exclude excessive vectors#
DuplicatedVectors <- c(5031, 5034.6, 5036.4, 15036.4, 85038.2, 65038.2) #, 85036.4, 65036.4 ) #
slopetable <- NULL#
for(o in 2:2){#
for(l in 1:6){#
#
if(l==1){	  ##Reforestation#
STOCKval <- c(4,15)#
QMDvalues <- c(seq(21.7,30.7, 3), 36, 45) #c(18,21,24,29, 45)  ##
s1 <- 5#
s2 <- 5#
s3 <- 5#
s4 <- 5#
increment=1}#
#
if(l==2){	  ##Early succession		#
STOCKval <- c(seq(0, 70, 121/7), 82, 101, 121) #6#
QMDvalues <- c(seq(14.5,21.7,1.8)) #c(seq(12,18.4,3.2))  ##
s1 <- 5 #30#
s2 <- 5 #10#
s3 <- 5 #10#
s4 <- 5 #5#
increment=1}#
#
if(l==3){	  ##middle#
STOCKval <- c(15, 32, seq(41, 85, 65/5),98,121) #121,121,121#
QMDvalues <- c(seq(21.7,t3, 10.3/6))  ##
s1 <- 30#
s2 <- 10#
s3 <- 20#
s4 <- 2#
increment=1}#
#
if(l==4){	  ##moving average end#
STOCKval <- c(5, 15, NA, 30, 38, NA, NA,20, 40, 55, 55, 60, 75, NA, NA, NA, 65, 85, NA, 98, 100) #121, 121) #121,121,121#
QMDvalues <- c(seq(t3-1,43.6,1.8), 50)  ##
s1 <- 40 #100#
s2 <- 3 #50#
s3 <- 5 #40#
s4 <- 3 #5#
increment=3}#
#
if(l==5){	  ##Early early succession#
STOCKval <- c(0, 5, 15, seq(30, 121, 91/6)) #6#
QMDvalues <- c(12.7, 14.5) #
s1 <- 3 #30#
s2 <- 3 #10#
s3 <- 3#10#
s4 <- 3#5#
increment=1}#
#
if(l==6){	  ##moving average end top#
STOCKval <- c(100, NA, NA, 125) #
QMDvalues <- c(seq(t3-1,43.6, 1.8), 50)  ##
s1 <- 5 #100#
s2 <- 5 #50#
s3 <- 5# 3 40#
s4 <- 5 #5#
increment=3}#
#
#Subset by stocking range then mean diameter range#
if(o==1){#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{		#
		stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
		if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors#
		stockcol <- (mean(S11q$PREV_STOCKINGmid,na.rm=TRUE)/4)+18#
#Plot mean change vector#
		arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)),col=(stockcol), length=0.085, angle=25,lwd=lw2+1.25) #
#
#Plot bootstraped error associated with mean diameter and stem density change #
endTPAerror <- boot(S11q$TPAchg, meanFunc, R=1000)	#
endTPAerror <- sqrt(var(endTPAerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))+endTPAerror),  #
					col="grey50", type="l", lwd=0.75)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))-endTPAerror),  #
					col="grey50", type="l", lwd=0.75)#
endQMDerror <- boot(S11q$DIAchg, meanFunc, R=1000)				#
endQMDerror <- sqrt(var(endQMDerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)+endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey50", type="l", lwd=0.75)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)-endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey50", type="l", lwd=0.75)#
	}}}}#
#
#Replot with bold vectors#
if(o==2){#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
#print(length(S11q$PREV_DIAmean))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{	#
		stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
		if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors			#
	arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)),col=("grey15"), length=0.085, angle=25,lwd=lw2+0.75) #
	arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)), col= (S11q$PREV_STOCKINGmid/4)+18, length=0.08, angle=28,lwd=lw2)  # VectCols[s] col=s*1.8+10,  s*1.2+7 # s*2+10 #stockcol#
 text(mean(S11q$DIAmean, na.rm=TRUE),mean(S11q$TPAsum, na.rm=TRUE), stkqmd, cex=0.5)#
print(c(stkqmd, l, s, h, mean(S11q$TPAchg, na.rm=T), sum(S11q$TPAchg>0, na.rm=T)))#
#
	}}}}#
 } #l loop#
} #o loop#
box()#
####################### FIGURE 1 - END
F2 <- subset(S4swPREC)#
#Re-use previous plot variables - Change Y-axis to vegetation carbon#
F2$DIAmean <- (F2$DIAendmean* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <- (F2$DIAbeginmean *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$TPAsum <- F2$carbon1sum* 0.00112085116  #	#convert living carbon to Mg/ha#
F2$PREV_TPAsum <- F2$PREVcarbon1sum* 0.00112085116 ##convert living carbon to Mg/ha#
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
#
#calculate change in CARBON and mean tree diameter for each plot#
F2$TPAchg <- F2$TPAsum-F2$PREV_TPAsum#
F2$DIAchg <- F2$DIAmean-F2$PREV_DIAmean#
#######################################################################
#set up plot#
dev.new(width=8, height=4.5)#
#
#create plot#
plot(c((F2$PREV_DIAmean),(F2$DIAmean)),c((F2$PREV_TPAsum),(F2$TPAsum)), type ="n", col="grey94", #
	main=c("Empirical Model of 5-year forest carbon change, DBH>=12.7 cm", "FIA survey 1997-2012, Eastern USA") #
	,ylim=c(6.5,200), xlim=c(14, 43), mgp=c(2,1,0)#
	,xlab=NA, ylab=NA, axes=FALSE) #1250#
#
axis(side=1, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=2, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=1, lwd=0, line= -0.7)#
axis(side=2, lwd=0, line= -0.7)#
#
mtext(side=1, "Mean tree diameter (cm)", line=1.2)#
mtext(side=2, expression(paste("Carbon, living trees (Mg ha"^"-1",")")), line=1.2)#
#
box()#
#
#plot all plots as individual background vectors colored by inital stocking #
arrows((F2$PREV_DIAmean),(F2$PREV_TPAsum),(F2$DIAmean),(F2$TPAsum), col= (F2$PREV_STOCKINGmid/4)+18, length=0.065, angle=22,lwd=0.9)#
#Set up plot with relative plot locations and legend - ideal for dev.new(width=8, height=4.5)#
x1 <- 14-0.5#
x2 <- 14+0.5#
y1 <- (c(seq(32,26.05,-.55))*2.5-52)*6.1#
y2 <- (c(seq(32.2,26.25,-0.085))*2.5-52)*6.1#
y3 <- (c(seq(31.8,26,-0.73))*2.5-52)*6.1#
x1b <- x1-7 #x1b <- x1-7.5#
y1b <- y1[1]-264 #y1b <- y1[1]-215#
cex1 <- 0.8#
t3 <- 32 #transition mean diameter between independent vectors and moving average#
lw2 <- 2 #arrow width#
#
#LEGEND#
stockcols2 <- rev((seq(1,120,15)/4)+18)#
segments(x1,y2,x2, y2, c(seq(45,18, -0.384)),lwd=2, lend=2) #c(seq(66,38,-0.3))  col="grey85"#
points(30,100, pch=16, cex=200, col="#FFFFFF75" ) #FFFFFF75#
text(x1-0.25, y1[1]+26,"5-year Temperate Forest Carbon Change", pos=4, cex=1.05, font=3)#
segments(c(x1,x1,x1),c( y2[1], y2[36],  y2[71]),x2+1.25 ,c(y2[1], y2[36],  y2[71]), col="black",lwd=0.9, lend=2)#
segments(c(x1),c(y2[10]),x2+1.25,c(y2[10]), col="black",lwd=0.9, lend=2, lty="dashed")#
arrows(x1+0.1,y3,x2-0.1,y3, col="black", length=0.085, angle=25,lwd=lw2+1)  #
arrows(x1+0.1,y3,x2-0.1,y3, col=c(stockcols2), length=0.08, angle=28,lwd=lw2)  #
text(x1-.5, y1[1]+10,"Initial relative density", cex=0.9, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[1]-5,"Over", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[4],"Full", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[9],"Under", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
#
#Carbon thinning line - fit to tree diameters >5 inches with relative densities between 90-110#
F2l <- subset(F2, PREVSTOCKING5mid>=90 & PREVSTOCKING5mid<=110 & DIAmean<40)#
lml <- summary(lm((F2l$TPAsum)~(F2l$DIAmean) ))#
print(c(lml$coefficients[2], "self thinning line best fit scaling exponent"))#
x=seq(0,50,0.5) #seq(22,35.5,0.5)#
y=(lml$coefficients[2]*x+lml$coefficients[1])  #Best fit #
lines((y)~(x), col="#00000090", lty="dotted", lwd=5) # "#00000085"#
#Future average: BASED ON results from future equilibrium model below#
cond <- "3"	#
x <- 34.27#
y <- 116.5#
xer <- 0.372*2#
yer <- 3.54*2#
points(x,y, pch=21, col=NA, bg="grey35", cex=0.75)#
segments(x-xer,y, x+xer, y, col="#00000075", lwd=1.5)#
segments(x,y-yer, x, y+yer, col="#00000075", lwd=1.5)#
####Organize and subset data to plot with FOR loops #
#looped by phase space location to have sufficient underlying data and to exclude excessive vectors#
DuplicatedVectors <- c(5031, 5034.6, 5036.4, 15036.4, 85038.2, 65038.2, 85040, 85036.4, 65036.4 ) #
slopetable <- NULL#
for(o in 2:2){#
for(l in 1:6){#
#
if(l==1){	  ##Reforestation#
STOCKval <- c(4,15)#
QMDvalues <- c(seq(21.7,30.7, 3), 36, 45) #c(18,21,24,29, 45)  ##
s1 <- 5#
s2 <- 5#
s3 <- 5#
s4 <- 5#
increment=1}#
#
if(l==2){	  ##Early succession		#
STOCKval <- c(seq(0, 70, 121/7), 82, 101, 121) #6#
QMDvalues <- c(seq(14.5,21.7,1.8)) #c(seq(12,18.4,3.2))  ##
s1 <- 5 #30#
s2 <- 5 #10#
s3 <- 5 #10#
s4 <- 5 #5#
increment=1}#
#
if(l==3){	  ##middle#
STOCKval <- c(15, 32, seq(41, 85, 65/5),98,121) #121,121,121#
QMDvalues <- c(seq(21.7,t3, 10.3/6))  ##
s1 <- 30#
s2 <- 10#
s3 <- 20#
s4 <- 2#
increment=1}#
#
if(l==4){	  ##moving average end#
STOCKval <- c(5, 15, NA, 30, 38, NA, NA,20, 40, 55, 55, 60, 75, NA, NA, NA, 65, 85, NA, 98, 100) #121, 121) #121,121,121#
QMDvalues <- c(seq(t3-1,43.6,1.8), 50)  ##
s1 <- 40 #100#
s2 <- 3 #50#
s3 <- 5 #40#
s4 <- 3 #5#
increment=3}#
#
if(l==5){	  ##Early early succession#
STOCKval <- c(0, 5, 15, seq(30, 121, 91/6)) #6#
QMDvalues <- c(12.7, 14.5) #
s1 <- 3 #30#
s2 <- 3 #10#
s3 <- 3#10#
s4 <- 3#5#
increment=1}#
#
if(l==6){	  ##moving average end top#
STOCKval <- c(100, NA, NA, 125) #
QMDvalues <- c(seq(t3-1,43.6, 1.8), 50)  ##
s1 <- 5 #100#
s2 <- 5 #50#
s3 <- 5# 3 40#
s4 <- 5 #5#
increment=3}#
#
#Subset by stocking range then mean diameter range#
if(o==1){#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{		#
		stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
		if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors#
		stockcol <- (mean(S11q$PREV_STOCKINGmid,na.rm=TRUE)/4)+18#
#Plot mean change vector#
		arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)),col=(stockcol), length=0.085, angle=25,lwd=lw2+1.25) #
#
#Plot bootstraped error associated with mean diameter and stem density change #
endTPAerror <- boot(S11q$TPAchg, meanFunc, R=1000)	#
endTPAerror <- sqrt(var(endTPAerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))+endTPAerror),  #
					col="grey50", type="l", lwd=0.75)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))-endTPAerror),  #
					col="grey50", type="l", lwd=0.75)#
endQMDerror <- boot(S11q$DIAchg, meanFunc, R=1000)				#
endQMDerror <- sqrt(var(endQMDerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)+endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey50", type="l", lwd=0.75)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)-endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey50", type="l", lwd=0.75)#
	}}}}#
#
#Replot with bold vectors#
if(o==2){#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
#print(length(S11q$PREV_DIAmean))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{	#
		stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
		if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors			#
	arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)),col=("grey15"), length=0.085, angle=25,lwd=lw2+0.75) #
	arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)), col= (S11q$PREV_STOCKINGmid/4)+18, length=0.08, angle=28,lwd=lw2)  # VectCols[s] col=s*1.8+10,  s*1.2+7 # s*2+10 #stockcol#
 text(mean(S11q$DIAmean, na.rm=TRUE),mean(S11q$TPAsum, na.rm=TRUE), stkqmd, cex=0.5)#
print(c(stkqmd, l, s, h, mean(S11q$TPAchg, na.rm=T), sum(S11q$TPAchg>0, na.rm=T)))#
#
	}}}}#
 } #l loop#
} #o loop#
box()#
####################### FIGURE 1 - END
##########################################################################################################################
###############FIGURE 1B - ESM CARBON MODEL ##############################################################################
#
F2 <- subset(S4swPREC)#
#Re-use previous plot variables - Change Y-axis to vegetation carbon#
F2$DIAmean <- (F2$DIAendmean* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <- (F2$DIAbeginmean *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$TPAsum <- F2$carbon1sum* 0.00112085116  #	#convert living carbon to Mg/ha#
F2$PREV_TPAsum <- F2$PREVcarbon1sum* 0.00112085116 ##convert living carbon to Mg/ha#
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
#
#calculate change in CARBON and mean tree diameter for each plot#
F2$TPAchg <- F2$TPAsum-F2$PREV_TPAsum#
F2$DIAchg <- F2$DIAmean-F2$PREV_DIAmean#
#######################################################################
#set up plot#
dev.new(width=8, height=4.5)#
#
#create plot#
plot(c((F2$PREV_DIAmean),(F2$DIAmean)),c((F2$PREV_TPAsum),(F2$TPAsum)), type ="n", col="grey94", #
	main=c("Empirical Model of 5-year forest carbon change, DBH>=12.7 cm", "FIA survey 1997-2012, Eastern USA") #
	,ylim=c(6.5,200), xlim=c(14, 43), mgp=c(2,1,0)#
	,xlab=NA, ylab=NA, axes=FALSE) #1250#
#
axis(side=1, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=2, tck=-0.01, labels=NA, lwd=0.75)#
axis(side=1, lwd=0, line= -0.7)#
axis(side=2, lwd=0, line= -0.7)#
#
mtext(side=1, "Mean tree diameter (cm)", line=1.2)#
mtext(side=2, expression(paste("Carbon, living trees (Mg ha"^"-1",")")), line=1.2)#
#
box()#
#
#plot all plots as individual background vectors colored by inital stocking #
arrows((F2$PREV_DIAmean),(F2$PREV_TPAsum),(F2$DIAmean),(F2$TPAsum), col= (F2$PREV_STOCKINGmid/4)+18, length=0.065, angle=22,lwd=0.9)#
#Set up plot with relative plot locations and legend - ideal for dev.new(width=8, height=4.5)#
x1 <- 14-0.5#
x2 <- 14+0.5#
y1 <- (c(seq(32,26.05,-.55))*2.5-52)*6.1#
y2 <- (c(seq(32.2,26.25,-0.085))*2.5-52)*6.1#
y3 <- (c(seq(31.8,26,-0.73))*2.5-52)*6.1#
x1b <- x1-7 #x1b <- x1-7.5#
y1b <- y1[1]-264 #y1b <- y1[1]-215#
cex1 <- 0.8#
t3 <- 32 #transition mean diameter between independent vectors and moving average#
lw2 <- 2 #arrow width#
#
#LEGEND#
stockcols2 <- rev((seq(1,120,15)/4)+18)#
segments(x1,y2,x2, y2, c(seq(45,18, -0.384)),lwd=2, lend=2) #c(seq(66,38,-0.3))  col="grey85"#
points(30,100, pch=16, cex=200, col="#FFFFFF75" ) #FFFFFF75#
text(x1-0.25, y1[1]+26,"5-year Temperate Forest Carbon Change", pos=4, cex=1.05, font=3)#
segments(c(x1,x1,x1),c( y2[1], y2[36],  y2[71]),x2+1.25 ,c(y2[1], y2[36],  y2[71]), col="black",lwd=0.9, lend=2)#
segments(c(x1),c(y2[10]),x2+1.25,c(y2[10]), col="black",lwd=0.9, lend=2, lty="dashed")#
arrows(x1+0.1,y3,x2-0.1,y3, col="black", length=0.085, angle=25,lwd=lw2+1)  #
arrows(x1+0.1,y3,x2-0.1,y3, col=c(stockcols2), length=0.08, angle=28,lwd=lw2)  #
text(x1-.5, y1[1]+10,"Initial relative density", cex=0.9, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[1]-5,"Over", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[4],"Full", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
text(x2, y1[9],"Under", cex=cex1, pos=4) #initial plot stocking and mean change vector increments#
#
#Carbon thinning line - fit to tree diameters >5 inches with relative densities between 90-110#
F2l <- subset(F2, PREVSTOCKING5mid>=90 & PREVSTOCKING5mid<=110 & DIAmean<40)#
lml <- summary(lm((F2l$TPAsum)~(F2l$DIAmean) ))#
print(c(lml$coefficients[2], "self thinning line best fit scaling exponent"))#
x=seq(0,50,0.5) #seq(22,35.5,0.5)#
y=(lml$coefficients[2]*x+lml$coefficients[1])  #Best fit #
lines((y)~(x), col="#00000090", lty="dotted", lwd=5) # "#00000085"#
#Future average: BASED ON results from future equilibrium model below#
cond <- "3"	#
x <- 34.27#
y <- 116.5#
xer <- 0.372*2#
yer <- 3.54*2#
points(x,y, pch=21, col=NA, bg="grey35", cex=0.75)#
segments(x-xer,y, x+xer, y, col="#00000075", lwd=1.5)#
segments(x,y-yer, x, y+yer, col="#00000075", lwd=1.5)
####Organize and subset data to plot with FOR loops #
#looped by phase space location to have sufficient underlying data and to exclude excessive vectors#
DuplicatedVectors <- c(5031, 5034.6, 5036.4, 15036.4, 85038.2, 65038.2, 85040, 85036.4, 65036.4 ) #
slopetable <- NULL#
for(o in 1:2){#
for(l in 1:6){#
#
if(l==1){	  ##Reforestation#
STOCKval <- c(4,15)#
QMDvalues <- c(seq(21.7,30.7, 3), 36, 45) #c(18,21,24,29, 45)  ##
s1 <- 5#
s2 <- 5#
s3 <- 5#
s4 <- 5#
increment=1}#
#
if(l==2){	  ##Early succession		#
STOCKval <- c(seq(0, 70, 121/7), 82, 101, 121) #6#
QMDvalues <- c(seq(14.5,21.7,1.8)) #c(seq(12,18.4,3.2))  ##
s1 <- 5 #30#
s2 <- 5 #10#
s3 <- 5 #10#
s4 <- 5 #5#
increment=1}#
#
if(l==3){	  ##middle#
STOCKval <- c(15, 32, seq(41, 85, 65/5),98,121) #121,121,121#
QMDvalues <- c(seq(21.7,t3, 10.3/6))  ##
s1 <- 30#
s2 <- 10#
s3 <- 20#
s4 <- 2#
increment=1}#
#
if(l==4){	  ##moving average end#
STOCKval <- c(5, 15, NA, 30, 38, NA, NA,20, 40, 55, 55, 60, 75, NA, NA, NA, 65, 85, NA, 98, 100) #121, 121) #121,121,121#
QMDvalues <- c(seq(t3-1,43.6,1.8), 50)  ##
s1 <- 40 #100#
s2 <- 3 #50#
s3 <- 5 #40#
s4 <- 3 #5#
increment=3}#
#
if(l==5){	  ##Early early succession#
STOCKval <- c(0, 5, 15, seq(30, 121, 91/6)) #6#
QMDvalues <- c(12.7, 14.5) #
s1 <- 3 #30#
s2 <- 3 #10#
s3 <- 3#10#
s4 <- 3#5#
increment=1}#
#
if(l==6){	  ##moving average end top#
STOCKval <- c(100, NA, NA, 125) #
QMDvalues <- c(seq(t3-1,43.6, 1.8), 50)  ##
s1 <- 5 #100#
s2 <- 5 #50#
s3 <- 5# 3 40#
s4 <- 5 #5#
increment=3}#
#
#Subset by stocking range then mean diameter range#
if(o==1){#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{		#
		stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
		if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors#
		stockcol <- (mean(S11q$PREV_STOCKINGmid,na.rm=TRUE)/4)+18#
#Plot mean change vector#
		arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)),col=(stockcol), length=0.085, angle=25,lwd=lw2+1.25) #
#
#Plot bootstraped error associated with mean diameter and stem density change #
endTPAerror <- boot(S11q$TPAchg, meanFunc, R=1000)	#
endTPAerror <- sqrt(var(endTPAerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))+endTPAerror),  #
					col="grey50", type="l", lwd=0.75)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE))),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))-endTPAerror),  #
					col="grey50", type="l", lwd=0.75)#
endQMDerror <- boot(S11q$DIAchg, meanFunc, R=1000)				#
endQMDerror <- sqrt(var(endQMDerror$t))*1.96#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)+endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey50", type="l", lwd=0.75)#
			lines(c((mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)-endQMDerror)),#
				 c((mean(S11q$TPAsum, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE))),  #
					col="grey50", type="l", lwd=0.75)#
	}}}}#
#
#Replot with bold vectors#
if(o==2){#
g <- length(QMDvalues-1)#
r <- length(STOCKval-1)#
 for(s in 1:r)#
 { S11r <- subset(F2, PREV_STOCKINGmid>= STOCKval[s] & PREV_STOCKINGmid <STOCKval[s+increment]) 	#
	for(h in 1:g)#
	{ #
	S11q <- subset(S11r, PREV_DIAmean>=(QMDvalues[h]) & PREV_DIAmean<(QMDvalues[h+increment]))#
#print(length(S11q$PREV_DIAmean))#
	if(length(S11q$PREV_DIAmean)>s1 & s==1 | length(S11q$PREV_DIAmean)>s2 & s==2 | length(S11q$PREV_DIAmean)>s3  & s==3 | length(S11q$PREV_DIAmean)>s4  & s>=4)#
		{	#
		stkqmd <- STOCKval[s]*1000+QMDvalues[h]#
		if(stkqmd %in% DuplicatedVectors){next} #remove overlapping vectors			#
	arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)),col=("grey15"), length=0.085, angle=25,lwd=lw2+0.75) #
	arrows((mean(S11q$PREV_DIAmean, na.rm=TRUE)),(mean(S11q$PREV_TPAsum, na.rm=TRUE)),(mean(S11q$DIAmean, na.rm=TRUE)),(mean(S11q$TPAsum, na.rm=TRUE)), col= (S11q$PREV_STOCKINGmid/4)+18, length=0.08, angle=28,lwd=lw2)  # VectCols[s] col=s*1.8+10,  s*1.2+7 # s*2+10 #stockcol#
 #text(mean(S11q$DIAmean, na.rm=TRUE),mean(S11q$TPAsum, na.rm=TRUE), stkqmd, cex=0.5)#
print(c(stkqmd, l, s, h, mean(S11q$TPAchg, na.rm=T), sum(S11q$TPAchg>0, na.rm=T)))#
#
	}}}}#
 } #l loop#
} #o loop#
box()#
####################### FIGURE 1 - END
box()
####CAUTION for() LOOPS AHEAD#####
#
#Load library, set options, simple fuctions#
library(RColorBrewer)#
library(sp)#
library(data.table)#
library(spam)#
library(nlme)#
library(maps)#
library(ggplot2)#
library(modeest)#
library(effects)#
library(plyr)#
library(reshape2)#
library(ggmap)#
library(boot)#
library(gplots)#
library(shape)#
library(SDMTools)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(foreach)#
library(doParallel)#
library(doMC)#
registerDoMC(cores=2)#
library(quantreg)#
library(fields)#
library(grDevices)#
library(RCurl)#
options(scipen=999) #remove sci notation#
meanFunc <- function(x,i){mean(x[i], na.rm=TRUE)}
##Load data from GITHUB#
 data.url <- "https://raw.githubusercontent.com/wanderswest/ESM-FIA/master/ESM.data.csv"
ESM.data <- getURL(data.url)                #
    ESM.data <- read.csv(textConnection(ESM.data), header = TRUE, sep = ",", quote="\"", dec=".")#
RM5mergedfullcut1991.11.17.2014  <- as.data.table(ESM.data)
#or load filtered data from local drive#
#RM5mergedfullcut1991.11.17.2014  <- as.data.table(read.csv("/Users/travis/GitHub/ESM-FIA/ESM.data.csv", header = TRUE, sep = ",", quote="\"", dec="."))#
#
RM5mergedfullcut1991.11.17.2014 <-  subset(RM5mergedfullcut1991.11.17.2014, STDORGCD==0 ) # remove planted forests#
S4swPREC <-  subset(RM5mergedfullcut1991.11.17.2014, STDORGCD==0 & cut==0 ) #exclude planted and harvested forests#
F2 <- subset(S4swPREC)
#Intro staatistics#
print(c(sum(RM5mergedfullcut1991.11.17.2014$startsumTPA)/(1/0.166166884), "Trees initially surveyed"))#
print(c(sum(RM5mergedfullcut1991.11.17.2014$endsumTPA)/(1/0.166166884), "Trees resurveyed"))#
print(c(sum(RM5mergedfullcut1991.11.17.2014$PLT_CN>0), "Plots resurveyed"))#
print(c(mean(F2$REMPER), "mean resurvey period")) #most appropriate dataset for analyses #
print(c(std.error(F2$REMPER), "SE resurvey period"))#
print(c(sum(RM5mergedfullcut1991.11.17.2014$cut>0), "Plots with harvesting"))#
print(c(sum(RM5mergedfullcut1991.11.17.2014$STDORGCD>0, na.rm=T), "Planted plots"))
##################################################################################################################
################ FIGURE 2 - Climate Condition DIVERGENCE #########################################################
#####
###
#
#palette(adjustcolor(((rich.colors(60))), transform=diag(c(0.85,0.95,0.75,1)))) # alpha.f=0.15 #60#
#
#Climate Colors:#
pt <- "steelblue1" #pluvial trend#
pe <- "royalblue"	#pluvial event#
dt <- "goldenrod1" #drought trend#
de <- "orange2"  	#drought event#
nt <- "grey55"#
ne <- "grey35"#
wt <- "peachpuff"#
ct <- "slategray1"#
errorcol <- "grey75"#
errorlwd <- 0.53#
ag1 <- 25#
#
#S4swPREC <- as.data.table(read.csv("/Volumes/m-z/tda210/USFS/RM5mergedfullcut1991.11.17.2014.csv", header = TRUE, sep = ",", quote="\"", dec="."))#
F2 <- subset(S4swPREC, temp5grow>0 ) #& SISP<300) #remove any NA's from temperature data#
#
#dataset for undisturbed analysis Fig S2#
if(1==2)#
{#
F2$vegetation[F2$vegetation!=0]<-F2$vegetation[F2$vegetation>0]+rnorm(sum(F2$vegetation>0),0, 0.1)#
vg<-quantile(F2$vegetation[F2$vegetation!=0], 0.99, na.rm=T)#
F2$unknowndamage[F2$unknowndamage!=0]<-F2$unknowndamage[F2$unknowndamage>0]+rnorm(sum(F2$unknowndamage>0),0, 0.1)#
un<-quantile(F2$unknowndamage[F2$unknowndamage!=0], 0.98, na.rm=T)#
F2 <- subset(F2,  unknowndamage<=un & vegetation<=vg & disease==0 & animal==0 & insect==0 & weather==0 & fire==0) #
}#
#
#Convert variables to standard names and metric units#
F2$DIAmean <- (F2$DIAendmean* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <- (F2$DIAbeginmean *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$TPAsum <- (F2$endsumTPA /0.404686)			#number of trees per hectare by plot at resurvey#
F2$PREV_TPAsum <- (F2$startsumTPA /0.404686)	#number of trees per hectare by plot at initial survey (cm)#
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
F2$TPAchg <- (F2$TPAsum-F2$PREV_TPAsum)/F2$REMPER#
F2$SISPchg<-ifelse(F2$SISP>=300, 1, ifelse(F2$SISP<300, -1, NA) )#
F2$PREVcarbon1sum<-F2$PREVNPP#
F2$carbon1sum<-F2$NPP
#set grid cell size#
a <- b <- 2  #2=0.5degrees, 0.5=2degrees#
	F2$iLAT <- ((ceiling(F2$LAT*a))/a)-0.5 #+0.25  #round down to integer then add .25 ; switched /* removed ).25 addition#
	F2$iLON <- ((floor(F2$LON*b))/b)+0.5 #-0.25  #round down to integer then subtract .25; switched /*  ).25 addition#
	F2$LATLONYR <- (F2$iLAT*10000000000000) +(F2$iLON*(-100000000)) +F2$INVYR#
	F2$LATLON <- as.factor(F2$iLAT*100000000+ F2$iLON*-1000) #LATLON identifyier#
#
#Find climate variable mean and range for each grid cell#
F2$TEMPminLL <- ave(F2$temp5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$TEMPgrowminLL <- ave(F2$temp5grow, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$TEMP5chg <- F2$temp5-F2$TEMPminLL#
F2$TEMP5growchg <- F2$temp5grow-F2$TEMPgrowminLL#
F2$TEMP5growchg[is.na(F2$TEMP5growchg)==T] <- 0#
F2$TEMP5growchg[F2$TEMP5growchg==0] <- rnorm(sum(F2$TEMP5growchg==0),0,sd=0.01) #make median 0 value a distribution for subseting#
#F2$PREC5grow <- F2$PREC5grow*92/3/10 #convert mm/day to cm per month#
F2$PRECminLL <- ave(F2$PREC5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$PRECgrowminLL <- ave(F2$PREC5grow, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$PREC5chg <- F2$PREC5-F2$PRECminLL#
F2$PREC5growchg <- F2$PREC5grow-F2$PRECgrowminLL#
F2$PREC5growchg[F2$PREC5growchg==0] <- rnorm(sum(F2$PREC5growchg==0),0,sd=0.01) #make median 0 value a distribution for subseting#
#
F2$SWdroughtLL <- ave(F2$SWdrought5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$SWpluvialLL <- ave(F2$SWpluvial5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$SWdrought5chg <- F2$SWdrought5-F2$SWdroughtLL#
F2$SWpluvial5chg <- F2$SWpluvial5-F2$SWpluvialLL#
F2$SWpluvial5chg[F2$SWpluvial5chg==0] <- rnorm(sum(F2$SWpluvial5chg==0),0,sd=0.01) #make median 0 value a distribution for subseting#
F2$SWdrought5chg[F2$SWdrought5chg==0] <- rnorm(sum(F2$SWdrought5chg==0),0,sd=0.01) #make median 0 value a distribution for subseting#
F2$nsampTOT <- ave(F2$DIAmean>0,F2$LATLON, FUN=function(x) sum(x, na.rm=TRUE))#
#
vari <- c("PREC5growchg", "TEMP5growchg", "SWpluvial5chg", "SWdrought5chg") #"PREC5growchg", "TEMP5growchg"#
vari1 <- subset(F2, select=c(PREC5growchg, TEMP5growchg, SWpluvial5chg, SWdrought5chg))#
vari2 <- c("5-yr JJA precip. anomaly (mm/day)", "5-yr JJA temp. anomaly (C)", "1-yr JJA soil moist. anomaly (z-score)", "1-yr JJA soil moist. anomaly (z-score)")#
#
qt1 <- c(seq(0,1,1/9)/100,seq(1,59,2)/100)#
qt2 <- c(seq(41,99, 2)/100, seq(99,100,1/9)/100) #0.98, 0.99 added to ease moving average transistion to 1 at end#
int <- 10#
F5 <- NULL#
for(v in 1:3)#
{v=v#
F4<-foreach(c = 1:60, .combine=rbind) %dopar%#
{#
	if(c<=30 & v<3)#
	{#
		f22 <- subset(F2, get(vari[v])> quantile(vari1[[v]], qt2[c], na.rm=TRUE) & get(vari[v])< quantile(vari1[[v]], qt2[c+int], na.rm=TRUE)) 		#
		f23 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- vari[v]#
		col3=ifelse(qt2[c+(int/2)]>=0.85, 3, 2)#
		qta <- qt2[c]#
		qtb <- qt2[c+int]#
		}#
	if(c>30 & v<3)#
	{ #
		d=c-20#
		f22 <- subset(F2, get(vari[v])< quantile(vari1[[v]], qt1[d], na.rm=TRUE) & get(vari[v])> quantile(vari1[[v]], qt1[d-int], na.rm=TRUE)) #		#
		f23 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- vari[v]#
		col3=ifelse(qt1[d-(int/2)]<=0.15, 1, 2)#
		qtb <- qt1[d]#
		qta <- qt1[d-int]#
	}#
	if(c<=30 & v==3)#
	{#
			f22 <- subset(F2, get(vari[v])> quantile(vari1[[v]], qt2[c], na.rm=TRUE) & get(vari[v])< quantile(vari1[[v]], qt2[c+int], na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.15, na.rm=TRUE)) #exclude droughts#
			f23 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.15, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- "Wet summer"#
		col3=ifelse(qt2[c+(int/2)]>=0.85, 3, 2)#
		qta <- qt2[c]#
		qtb <- qt2[c+int]#
	}#
	if(c>30 & v==3)#
	{ #
		d=c-20#
		f22 <- subset(F2, get(vari[v+1])< quantile(vari1[[v+1]], qt1[d], na.rm=TRUE) & get(vari[v+1])> quantile(vari1[[v+1]], qt1[d-int], na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.85, na.rm=TRUE)) #exclude wet summers  #
		f23 <- subset(F2, get(vari[v+1])<= quantile(vari1[[v+1]], 0.7, na.rm=TRUE) & get(vari[v+1])>= quantile(vari1[[v+1]], 0.3, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.85, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- "Dry summer"#
		col3=ifelse(qt1[d-(int/2)]<=0.15, 1, 2)#
		qtb <- qt1[d]#
		qta <- qt1[d-int]#
	}#
f22$nsamp <- (ave(f22$DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #sample proportion of each grid cell #
#print(c(table(f22$nsamp<0.75), col3))#
#
#f22$col3 <- col3#
PLT_CNsamp1 <- f23$PLT_CN   #
#
f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, nsamp))#
#
F33 <- subset(F2, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
F33 <- merge(F33, f24, all.x=T, by="LATLON")#
F33 <- subset(F33, PLT_CN %in% (PLT_CNsamp1)) # not neccesaary bc weighting will eliminate latlons not in f22!#
#
F33$aPREVSTOCKDIAbin <- floor(F33$PREV_STOCKINGmid/10)*10000+(floor(F33$PREV_DIAmean/2)*2)#
F33$n1 <- 1#
F33$aPREVSTOCKDIAbinlength <- ave(F33$n1, F33$aPREVSTOCKDIAbin, FUN=function(x) sum(x, na.rm=TRUE))#
F33$nbin <- ave(F33$nsamp, F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)) #average AC proportion in stock/dia bins#
#
F33 <- subset(F33, aPREVSTOCKDIAbinlength> 25) #Null model needs at least 25 comparison plots at each diameter/stocking bin#
#
##Carbon Model#
c6 <- (((F33$carbon1sum-F33$PREVcarbon1sum)* 0.00112085116 )/F33$REMPER)#
F33$avgCchg <- (ave(c6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)))/F33$nbin #multiply by AC proportion divided by mean proportion in each stocking/dia bin#
#
##Carbon Model 5 inch and greater trees#
c5 <- (((F33$carbon5sum-F33$PREVcarbon5sum)* 0.00112085116 )/F33$REMPER)#
F33$avgC5chg <- (ave(c5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)))/F33$nbin#
#
##radial growth 5,10,15 inch min DIA #
rx5 <- (F33$DIAgrowmean/F33$REMPER)/2 ## convert from diameter to radial growth#
F33$avgx5 <- ave(rx5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##Mortality diameter mean#
mortrx5 <- F33$mortDIAmean  ##
F33$avgmortx5 <- ave(mortrx5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##Density Model#
y6 <- (F33$TPAsum-F33$PREV_TPAsum)/F33$REMPER  ##
F33$avgTPAchg <- ave(y6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##SAPLINGS Density Model#
sap6 <- ((F33$TPAsum05/0.404686)-(F33$PREVTPAsum05/0.404686))/F33$REMPER  # convert to hectares#
F33$sapavgTPAchg <- ave(sap6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
##SAPLINGS mortality /recruitment#
F33$sapavgMORT <- ave(F33$sapMortsum*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin #sapling mortality per plot#
F33$sapavgRECR <- ave(F33$sapRecruitsum*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin #sapling plot recuritment#
#
#SISP ratio#
F33$sp1<- mean(F33$SISPchg, na.rm=T) #F33$nsamp#
F33$spavgchg <- ave(F33$sp1,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)) #/F33$nbin#
#
#Merge null and conditional model data#
F34 <- subset(F33, !duplicated(aPREVSTOCKDIAbin), select=c(aPREVSTOCKDIAbin, avgCchg, avgx5, avgTPAchg, sapavgTPAchg, avgC5chg, avgmortx5, sapavgMORT, sapavgRECR))#
f22$aPREVSTOCKDIAbin <- floor(f22$PREV_STOCKINGmid/10)*10000+(floor(f22$PREV_DIAmean/2)*2)#
f22 <- merge(f22, F34, by="aPREVSTOCKDIAbin") #, all.x=T#
#
#carbon 1 and 5 inch#
c8 <- (((f22$carbon1sum-f22$PREVcarbon1sum)* 0.00112085116 )/f22$REMPER)#
f22$xcarbon <- ((c8)-f22$avgCchg)#
#
c55 <- (((f22$carbon5sum-f22$PREVcarbon5sum)* 0.00112085116 )/f22$REMPER)#
f22$xcarbon5 <- ((c55)-f22$avgC5chg)#
#
##radial growth  #
x8 <- (f22$DIAgrowmean/f22$REMPER)/2  # convert from diameter to radial growth#
f22$x5 <-  (x8-f22$avgx5)#
#
##mortality size#
mortx8 <- f22$mortDIAmean ##
f22$mortx5 <-  (mortx8-f22$avgmortx5)#
#
##Density Model#
TPA <- (f22$TPAsum-f22$PREV_TPAsum)/f22$REMPER  ##
f22$TPAchg <-  (TPA-f22$avgTPAchg)#
#
##SAPLING Density Model#
sapTPA <- ((f22$TPAsum05/0.404686)-(f22$PREVTPAsum05/0.404686))/f22$REMPER  ##
f22$sapTPAchg <-  (sapTPA-f22$sapavgTPAchg)#
f22$sapMORTchg <- (f22$sapMortsum/f22$sapavgMORT)*100 #sapling mortaltiy percent difference from null#
f22$sapRECRchg <- (f22$sapRecruitsum/f22$sapavgRECR)*100 #sapling recruitment percent difference from null#
#
##SISP ratio#
sp22 <- mean(f22$SISPchg-f22$sapavgTPAchg, na.rm=T)#
#
#calculate mean condition for x-axis based on v loop#
if(length(f22$xcarbon)>= 10)#
{#
if(v==2)#
{#
	x3 <- mean(f22$TEMP5growchg, na.rm=TRUE)#
}#
if(v==1)#
{#
	x3 <- mean(f22$PREC5growchg, na.rm=TRUE)#
}#
if(v==3)#
{#
x3 <- ifelse(c<=30,mean(f22$SWpluvial5chg, na.rm=TRUE), mean(f22$SWdrought5chg, na.rm=TRUE))#
}#
#
#calculate y-axis variables#
y3 <- mean(f22$xcarbon, na.rm=TRUE) #
y3pctdif<-(mean(f22$xcarbon, na.rm=TRUE)/mean(f22$avgCchg, na.rm=TRUE))*100   ##
y3start <-  mean(c6, na.rm=T) #null model zero line for plotting#
y5 <- mean(f22$xcarbon5, na.rm=TRUE)  ##
y5start <- mean(c5, na.rm=T) #null model zero line for plotting#
TPA3 <- mean(f22$TPAchg, na.rm=TRUE) ##
sapTPA3 <- mean(f22$sapTPAchg, na.rm=TRUE) ##
TPA3start <-  mean(y6, na.rm=T)#
sapTPA3start <- mean(sap6, na.rm=T)#
x5 <- mean(f22$x5, na.rm=TRUE) ##
x5start <-  mean(rx5, na.rm=T)#
mortx5 <- mean(f22$mortx5, na.rm=TRUE) ##
mortx5start <-   mean(mortx8, na.rm=T)#
#
sapMORT <- mean(f22$sapMORTchg, na.rm=T)#
sapRECR <- mean(f22$sapRECRchg, na.rm=T)#
#
#calc y-axis error#
R2 <- 100 #repetitions set to 10 for faster looping#
enderror <- boot(f22$xcarbon, meanFunc, R=R2)#
enderrory3 <- sqrt(var(enderror$t))*1.96#
enderror5 <- boot(f22$xcarbon5, meanFunc, R= R2)#
enderrory5 <- sqrt(var(enderror5$t))*1.96#
enderror2 <- boot(f22$TPAchg, meanFunc, R= R2)#
enderrorTPA <- sqrt(var(enderror2$t))*1.96#
enderrorsap <- boot(f22$sapTPAchg, meanFunc, R= R2)#
enderrorsapTPA <- sqrt(var(enderrorsap$t))*1.96#
enderror4 <- boot(f22$x5, meanFunc, R= R2)#
enderrorx5 <- sqrt(var(enderror4$t))*1.96#
enderrormort4 <- boot(f22$x5, meanFunc, R= R2)#
enderrormortx5 <- sqrt(var(enderrormort4$t))*1.96#
enderrorsapMORT <- std.error(f22$sapMORTchg, na.rm=T)#
enderrorsapRECR <- std.error(f22$sapRECRchg, na.rm=T)#
enderrorsp2error <- boot((f22$SISPchg-f22$sapavgTPAchg), meanFunc, R= R2)#
enderrorsp22error <- sqrt(var(enderrorsp2error$t))*1.96#
#
n <- length(f22$xcarbon) #conditional model n#
nnull <- length(F33$avgx5) #null model n#
print(c(n, ccond, c, nnull))#
#
f23 <- c(x3, y3, y5, TPA3, sapTPA3, x5, mortx5, enderrory3, enderrory5, enderrorTPA, enderrorsapTPA, enderrorx5, enderrormortx5, n, v, col3, y3start, y5start, TPA3start, x5start, sapTPA3start, mortx5start, sapMORT, sapRECR, enderrorsapMORT, enderrorsapRECR, sp22, enderrorsp22error, y3pctdif)#
#
}#
}#
F5 <- rbind(F5,F4)#
}#
#
F6 <- as.data.table(F5)#
setnames(F6, c("x3","y3","y5", "TPA","sapTPA", "x5", "DIAmortality", "errory3","errory5", "errorTPA","errorsapTPA", "errorx5","DIAmorterror", "n", "v", "col3", "y3start", "y5start", "TPA3start", "x5start", "sapTPA3start", "DIAmortstart", "sapMORTpct", "sapRECRpct", "enderrorsapMORT", "enderrorsapRECR", "SISPratio", "SISPerror", "y3pctdif"))#
F6 <- subset(F6, n>350)
#convert radial growth from cm to mm#
F6$x5 <- F6$x5*10 #
F6$errorx5 <- F6$errorx5*10#
#convert to percent difference#
F6$sapMORTpct <-  (F6$sapMORTpct-100)#
F6$sapRECRpct <-  (F6$sapRECRpct-100)#
F6$sapCpct <-  ((F6$y3-F6$y5)/F6$y3)*100#
#calc plot y-scales#
sapscale  <-  30 #mean(F6$sapTPA3start)/mean(F6$TPA3start) #
Cymax  <-  max(F6$y3+F6$errory3)#
Cymin  <-  min(F6$y3-F6$errory3)#
TPAymax <- max(F6$sapTPA/sapscale+F6$errorsapTPA/sapscale, na.rm=T)#
#TPAymax <- (max(F6$sapTPA+F6$errorsapTPA))/sapscale#
TPAymin <- min(F6$TPA-F6$errorTPA)#
#TPAymin <- (min(F6$sapTPA-F6$errorsapTPA))/sapscale#
DIAmax <- max(F6$x5+F6$errorx5)#
DIAmin <- min(F6$x5-F6$errorx5)#
sapmax <- max(F6$sapMORTpct+F6$enderrorsapMORT)#
sapmin <- min(F6$sapMORTpct-F6$enderrorsapMORT)#
#
#plot only sapling data that is significantly different with scaling than larger trees. #
F6$sapTPA <- ifelse(((F6$sapTPA/sapscale)>(F6$TPA+F6$errorTPA))|((F6$sapTPA/sapscale)<(F6$TPA-F6$errorTPA)), F6$sapTPA, NA)#
#
#set up 5-year precip plots using ggplot#
F7 <- subset(F6, v==1)#
F7$sapTPA <- ifelse(F7$col3==2,NA, F7$sapTPA)#
v=1#
y3start1 <-mean(F6$y3start)#
TPA3start1 <-mean(F6$TPA3start) #mean(F2$TPAchg) ##
sapTPA3start1 <-mean(F6$sapTPA3start)#
x5start1 <- mean((F6$x5start)*10)#
col4 <- c(dt,"grey35", pt)#
#
#NPP plot#
#limitssap <- aes(ymax=(y5/y5scale +errorsapTPA/sapscale)+TPA3start1, ymin=(sapTPA/sapscale-errorsapTPA/sapscale)+TPA3start1)#
limits <- aes(ymax=(y3+errory3)+y3start1, ymin=(y3-errory3+y3start1))#
P1 <- ggplot(F7, aes(x=x3, y=(y3+y3start1), fill=as.factor(col3)))  +geom_hline(y=y3start1, linetype=3) +geom_vline(linetype=3)+ geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21)  + theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_text(angle = 90, hjust = 0.5, size=11, colour="black"))+ theme(axis.text.x = element_blank())+ scale_y_continuous(name=expression(paste(Delta, " NPP (Mg C ha"^"-1","yr" ^"-1",")")), limits=c(Cymin, Cymax)+y3start1, breaks=c(1.1, 1.4, round(y3start1, 2), 2.0, 2.3), labels=c(1.1, 1.4, round(y3start1, 1), 2.0, 2.3)) + scale_x_continuous(element_blank(), breaks=c(-0.5, 0, 0.5))+ theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.9),plot.margin=unit(c(0,0,0,0), "cm")) +scale_fill_manual( name=NULL, breaks=c("1", "3"), label=c( "Dry 5-yr period", "Wet 5-yr period"), values=c(col4)) #
#Stem density plot#
limits <- aes(ymax=(TPA+errorTPA)+TPA3start1, ymin=(TPA-errorTPA)+TPA3start1)#
limitssap <- aes(ymax=(sapTPA/sapscale +errorsapTPA/sapscale)+TPA3start1, ymin=(sapTPA/sapscale-errorsapTPA/sapscale)+TPA3start1)#
P2 <- ggplot(F7, aes(x=x3, y=(TPA+TPA3start1), fill=as.factor(col3)))  +geom_hline(y=TPA3start1, linetype=3) +geom_vline(linetype=3) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(-0.07, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_text(angle = 90, hjust = 0.5, size=11, colour="black"))+ theme(axis.text.x = element_blank())+ scale_y_continuous(name=expression(paste(Delta, " Stem density (ha"^"-1","yr" ^"-1",")")), limits=c(TPAymin, TPAymax)+TPA3start1, breaks=c(2.0, 4.4866, 7.0), labels=c(expression("2.0"[" (-40)"]), expression("4.5" [" (35)"]), expression("7.0" [" (110)"]))) + scale_x_continuous(element_blank(), breaks=c(-0.5, 0, 0.5)) +scale_fill_manual(values=c(col4), breaks=NULL) +geom_errorbar(limitssap, width=0.01, colour="grey70") + geom_point(aes( y=(sapTPA/sapscale)+ TPA3start1, col=as.factor(col3)), size=1.5, pch=8) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.9),plot.margin=unit(c(0,0,0.15,0), "cm")) +scale_colour_manual(values=c(col9), name=NULL, breaks=c("2"), label=c("(Saplings)"))+ geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) #
#
#Radial growth plot#
limits <- aes(ymax=(x5+errorx5)+x5start1, ymin=(x5-errorx5)+x5start1)#
P3 <- ggplot(F7, aes(x=x3, y=(x5+x5start1), fill=as.factor(col3)))  +geom_hline(y=x5start1, linetype=3) +geom_vline(linetype=3)+ geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0.27,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_text(angle = 90, hjust = 0.5, size=11, colour="black"))+ theme(axis.text.x = element_text( hjust = 0.5, size=11, colour="black"))+ scale_y_continuous(name=expression(paste("Radial growth (mm yr" ^"-1",")")), limits=c(DIAmin, DIAmax)+x5start1, breaks=c(-0.05, 0, 0.05)+x5start1, labels=c(-0.05, 0, 0.05)+round(x5start1,2)) + scale_x_continuous(name=expression(paste("   Precipitation JJA 5-yr\nmean anomaly (mm day"^"-1",")")), breaks=c(-0.5, 0, 0.5)) +scale_fill_manual(values=c(col4)) + theme(axis.title.x = element_text(vjust=-0.85))#
#set up 5-year TEMP plots using ggplot#
F8 <- subset(F6, v==2) # & x3>0.2)#
v=2#
col8 <- c(ct,"grey35", wt)#
#NPP plot#
limits <- aes(ymax=(y3+errory3)+y3start1, ymin=(y3-errory3+y3start1))#
T1 <- ggplot(F8, aes(x=x3, y=(y3+y3start1), fill=as.factor(col3)))  +geom_hline(y=y3start1, linetype=3)+geom_vline(linetype=3)+ geom_errorbar(limits, width=0.01, colour="grey50")+ geom_point(colour="grey25", size=2.5, pch=21) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_blank())+ theme(axis.text.x =element_blank())+ scale_y_continuous(element_blank(), limits=c(Cymin, Cymax)+y3start1, breaks=c(1.1, 1.4, round(y3start1, 2), 2.0, 2.3)) + scale_x_continuous(element_blank(),breaks=c(-0.5, 0, 0.5, 1.0))+ theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.9),plot.margin=unit(c(0,0,0,0), "cm")) +scale_fill_manual( name=NULL, breaks=c("1", "3"), label=c("Cool 5-yr period", "Warm 5-yr period"), values=c(col8))#
#
#stem density#
limits <- aes(ymax=(TPA+errorTPA)+TPA3start1, ymin=(TPA-errorTPA)+TPA3start1)#
T2 <- ggplot(F8,aes(x=x3, y=(TPA+TPA3start1), fill=as.factor(col3)))    +geom_hline(y=TPA3start1, linetype=3) +geom_vline(linetype=3) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm"))  + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_blank())+ theme(axis.text.x =(element_blank())) + scale_y_continuous(element_blank(), limits=c(TPAymin, TPAymax)+TPA3start1, breaks=c(2.0, 4.4866, 7.0)) + scale_x_continuous(element_blank())  +scale_fill_manual(values=c(col8), breaks=NULL) +geom_errorbar(limitssap, width=0.01, colour="grey70") + geom_point(aes( y=(sapTPA/sapscale)+ TPA3start1, col=as.factor(col3)), size=1.5, pch=8) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.9),plot.margin=unit(c(0,0,0,0), "cm")) +scale_colour_manual(values=c(col8), name=NULL, breaks=c("2"), label=c("(Saplings)"))+ geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21)  #
#
#Radial growth plot#
limits <- aes(ymax=(x5+errorx5)+x5start1, ymin=(x5-errorx5)+x5start1)#
T3 <- ggplot(F8, aes(x=x3, y=(x5+x5start1), fill=as.factor(col3)))   +geom_hline(y=x5start1, linetype=3) +geom_vline(linetype=3)+ geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y =element_blank())+ theme(axis.text.x = element_text( hjust = 0.5, size=11, colour="black")) + scale_y_continuous(element_blank(), limits=c(DIAmin, DIAmax)+x5start1, breaks=c(-0.05, 0, 0.05)+x5start1) + scale_x_continuous(name=("Temperature JJA 5-yr\nmean anomaly (C)")) +scale_fill_manual(values=c(col8))#
#set up 1-year soil moist. plots using ggplot#
F9 <- subset(F6, v==3)#
v=3#
col9 <- c(de,"grey35", pe)#
limits <- aes(ymax=(y3+errory3)+y3start1, ymin=(y3-errory3+y3start1))#
#NPP plot#
R1 <- ggplot(F9,aes(x=x3, y=(y3+y3start1), fill=as.factor(col3))) +geom_hline(y=y3start1, linetype=3) +geom_vline(linetype=3)+ geom_errorbar(limits, width=0.02, colour="grey50")+ geom_point(colour="grey25", size=2.5, pch=21) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_blank())+ theme(axis.text.x =(element_blank())) + scale_y_continuous(element_blank(), limits=c(Cymin, Cymax)+y3start1, breaks=c(1.1, 1.4, round(y3start1, 2), 2.0, 2.3)) + scale_x_continuous(element_blank()) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.9),plot.margin=unit(c(0,0,0,0), "cm")) +scale_fill_manual( name=NULL, breaks=c("1", "3"), label=c( "Dry summer", "Wet summer"), values=c(col9))#
#
#Stem density plot#
limits <- aes(ymax=(TPA+errorTPA)+TPA3start1, ymin=(TPA-errorTPA)+TPA3start1)#
limitssap <- aes(ymax=(sapTPA/sapscale +errorsapTPA/sapscale)+TPA3start1, ymin=(sapTPA/sapscale-errorsapTPA/sapscale)+TPA3start1)#
R2 <- ggplot(F9,aes(x=x3, y=(TPA+TPA3start1), fill=as.factor(col3)))   +geom_hline(y=TPA3start1, linetype=3) +geom_vline(linetype=3)+theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_blank())+ theme(axis.text.x =(element_blank()))+ scale_y_continuous(element_blank(), limits=c(TPAymin, TPAymax)+TPA3start1, breaks=c(2.0, 4.4866, 7.0)) + scale_x_continuous(element_blank()) +scale_fill_manual(values=c(col9), breaks=NULL) +geom_errorbar(limitssap, width=0.01, colour="grey70") + geom_point(aes( y=(sapTPA/sapscale)+ TPA3start1, col=as.factor(col3)), size=1.5, pch=8) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.9),plot.margin=unit(c(0,0,0,0), "cm")) +scale_colour_manual(values=c(col9), name=NULL, breaks=c("2"), label=c("(Saplings)"))+ geom_errorbar(limits, width=0.02, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21)#
#
#radial growth plot#
limits <- aes(ymax=(x5+errorx5)+x5start1, ymin=(x5-errorx5)+x5start1)#
R3 <- ggplot(F9, aes(x=x3, y=(x5+x5start1), fill=as.factor(col3)))   +geom_hline(y=x5start1, linetype=3) +geom_vline(linetype=3)+ geom_errorbar(limits, width=0.02, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21)  +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_blank())+ theme(axis.text.x = element_text( hjust = 0.5, size=11, colour="black")) + scale_y_continuous(element_blank(), limits=c(DIAmin, DIAmax)+x5start1, breaks=c(-0.05, 0, 0.05)+x5start1) + scale_x_continuous(name=("Soil moisture JJA 1-yr\nmin/max (z-score)")) +scale_fill_manual(values=c(col9))#
#
#set up plot window and plot all together#
dev.new(width=7, height=8)#
grid.arrange(P1,T1,R1,P2,T2,R2,P3,T3,R3, ncol=3)#
#grid.text(0.045, unit(0.575,"npc") - unit(1,"line"), rot=90, label="(30)", gp=gpar(cex=0.75))#
#
#######END Fig 3.  Climate Correlations
#Load library, set options, simple fuctions#
library(RColorBrewer)#
library(sp)#
library(data.table)#
library(spam)#
library(nlme)#
library(maps)#
library(ggplot2)#
library(modeest)#
library(effects)#
library(plyr)#
library(reshape2)#
library(ggmap)#
library(boot)#
library(gplots)#
library(shape)#
library(SDMTools)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(foreach)#
library(doParallel)#
library(doMC)#
registerDoMC(cores=2)#
library(quantreg)#
library(fields)#
library(grDevices)#
library(RCurl)#
options(scipen=999) #remove sci notation#
meanFunc <- function(x,i){mean(x[i], na.rm=TRUE)}
##Load data from GITHUB#
 # data.url <- "https://raw.githubusercontent.com/wanderswest/ESM-FIA/master/ESM.data.csv"#
    # ESM.data <- getURL(data.url)                #
    # ESM.data <- read.csv(textConnection(ESM.data), header = TRUE, sep = ",", quote="\"", dec=".")#
# RM5mergedfullcut1991.11.17.2014  <- as.data.table(ESM.data)#
#
#or load filtered data from local drive#
#RM5mergedfullcut1991.11.17.2014  <- as.data.table(read.csv("/Users/travis/GitHub/ESM-FIA/ESM.data.csv", header = TRUE, sep = ",", quote="\"", dec="."))#
#RM5mergedfullcut1991.11.17.2014  <- as.data.table(read.csv("/Users/travis/Desktop/ESMthin/Null2015PFTs.csv", header = TRUE, sep = ",", quote="\"", dec="."))#
#
RM5mergedfullcut1991.11.17.2014 <-  subset(RM5mergedfullcut1991.11.17.2014, STDORGCD==0 ) # remove planted forests#
S4swPREC <-  subset(RM5mergedfullcut1991.11.17.2014, STDORGCD==0 & cut==0 ) #exclude planted and harvested forests#
F2 <- subset(S4swPREC)#
#
print(c(sum(RM5mergedfullcut1991.11.17.2014$endsumTPA)/(1/0.166166884), "Trees resurveyed"))
##################################################################################################################
################ FIGURE 2 - Climate Condition DIVERGENCE #########################################################
#####
###
#
#palette(adjustcolor(((rich.colors(60))), transform=diag(c(0.85,0.95,0.75,1)))) # alpha.f=0.15 #60#
#
#Climate Colors:#
pt <- "steelblue1" #pluvial trend#
pe <- "royalblue"	#pluvial event#
dt <- "goldenrod1" #drought trend#
de <- "orange2"  	#drought event#
nt <- "grey55"#
ne <- "grey35"#
wt <- "peachpuff"#
ct <- "slategray1"#
errorcol <- "grey75"#
errorlwd <- 0.53#
ag1 <- 25#
#S4swPREC <- as.data.table(read.csv("/Volumes/m-z/tda210/USFS/RM5mergedfullcut1991.11.17.2014.csv", header = TRUE, sep = ",", quote="\"", dec="."))#
F2 <- subset(S4swPREC)  #, SISP<300) #
undisturbed<-0#
deciduous<-0#
coniferous<-1#
#dataset for undisturbed analysis Fig S2 <-exclude forests plots with identified disturbances #
if(undisturbed==1){F2 <- subset(F2,  disease==0 & weather==0 & fire==0 &  animal==0 & insect==0)  }#
if(deciduous==1){F2 <- subset(F2, SISP>=300 )} #(EHstocksum+Evergreenstocksum+Hydricstocksum+ LHstocksum+NMHstocksum+SMHstocksum)>(LCstocksum +MCstocksum+ NPstocksum+ SPstocksum+ CDstocksum)#
if(coniferous ==1){F2 <- subset(F2,  SISP<300)  }#
#
#Convert variables to standard names and metric units#
F2$DIAmean <- (F2$DIAendmean* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <- (F2$DIAbeginmean *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$TPAsum <- (F2$endsumTPA /0.404686)			#number of trees per hectare by plot at resurvey#
F2$PREV_TPAsum <- (F2$startsumTPA /0.404686)	#number of trees per hectare by plot at initial survey (cm)#
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
#F2$TPAchg <- (F2$TPAsum-F2$PREV_TPAsum)/F2$REMPER#
F2$SISPchg<-ifelse(F2$SISP>=300, 1, ifelse(F2$SISP<300, -1, NA) )#
F2$DIAchgmean<- F2$DIAmean - F2$PREV_DIAmean #
#set grid cell size#
a <- b <- 2  #2=0.5degrees, 0.5=2degrees#
	F2$iLAT <- ((ceiling(F2$LAT*a))/a)-0.5 #+0.25  #round down to integer then add .25 ; switched /* removed ).25 addition#
	F2$iLON <- ((floor(F2$LON*b))/b)+0.5 #-0.25  #round down to integer then subtract .25; switched /*  ).25 addition#
	F2$LATLONYR <- (F2$iLAT*10000000000000) +(F2$iLON*(-100000000)) +F2$INVYR#
	F2$LATLON <- as.factor(F2$iLAT*100000000+ F2$iLON*-1000) #LATLON identifyier#
#Find climate variable mean and range for each grid cell#
F2$TEMPminLL <- ave(F2$temp5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$TEMPgrowminLL <- ave(F2$temp5grow, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$TEMP5chg <- F2$temp5-F2$TEMPminLL#
F2$TEMP5growchg <- F2$temp5grow-F2$TEMPgrowminLL#
F2$TEMP5growchg[is.na(F2$TEMP5growchg)==T] <- 0#
F2$TEMP5growchg[F2$TEMP5growchg==0] <- rnorm(sum(F2$TEMP5growchg==0),0,sd=0.01) #make median 0 value a distribution for subseting#
# note random distribution of median climate values will make results slightly different each run#
#
#F2$PREC5grow <- F2$PREC5grow*92/3/10 #convert mm/day to cm per month#
F2$PRECminLL <- ave(F2$PREC5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$PRECgrowminLL <- ave(F2$PREC5grow, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$PREC5chg <- F2$PREC5-F2$PRECminLL#
F2$PREC5growchg <- F2$PREC5grow-F2$PRECgrowminLL#
F2$PREC5growchg[F2$PREC5growchg==0] <- rnorm(sum(F2$PREC5growchg==0),0,sd=0.01) #make median 0 value a distribution for subseting#
#
#make median 0 value a distribution for subseting (but not random for consistent results!)#
F2$SWdroughtLL <- ave(F2$SWdrought5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$SWpluvialLL <- ave(F2$SWpluvial5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$SWdrought5chg <- F2$SWdrought5-F2$SWdroughtLL#
F2$SWpluvial5chg <- F2$SWpluvial5-F2$SWpluvialLL#
F2$SWpluvial5chg[F2$SWpluvial5chg==0] <- rnorm(sum(F2$SWpluvial5chg ==0),0,sd=0.01)  #seq(0.01,-0.01, ((0.02/((sum(F2$SWpluvial5chg==0)-1)))))#
F2$SWdrought5chg[F2$SWdrought5chg==0 ] <- rnorm(sum(F2$SWdrought5chg ==0),0,sd=0.01)  #seq(0.01, -0.01, ((0.002/((sum(F2$SWdrought5chg==0)/10)-1))))#
#
F2$nsampTOT <- ave(F2$PREV_DIAmean>0,F2$LATLON, FUN=function(x) sum(x, na.rm=TRUE))#
vari <- c("PREC5growchg", "TEMP5growchg", "SWpluvial5chg", "SWdrought5chg") #"PREC5growchg", "TEMP5growchg"#
vari1 <- subset(F2, select=c(PREC5growchg, TEMP5growchg, SWpluvial5chg, SWdrought5chg))#
vari2 <- c("5-yr JJA precip. anomaly (mm/day)", "5-yr JJA temp. anomaly (C)", "1-yr JJA soil moist. anomaly (z-score)", "1-yr JJA soil moist. anomaly (z-score)")#
#
seq1<- c(0.2, 0.4, NA, 0.66, 0.86, 0.96, 1, NA)#
#
if(coniferous==1 | deciduous==1){seq1<- c(0.2, 0.4, NA, 0.5, 0.75, 0.9, 1)} #broader quantiles for smaller dataset#
#(100-(c(0.2, 0.4, NA, 0.5, 0.75, 0.9, 1)*100))/2#
#
qt1a <- c(quantile(F2$PREC5growchg[F2$PREC5growchg<0],(1-rev(seq1))))  #
 qt2a <- c(quantile(F2$PREC5growchg[F2$PREC5growchg>0], seq1)) #
 qt1b <- c(quantile(F2$TEMP5growchg[F2$TEMP5growchg<0],(1-rev(seq1)))) #
 qt2b <- c(quantile(F2$TEMP5growchg[F2$TEMP5growchg>0], seq1))  #
 qt3 <- c(quantile(F2$SWdrought5chg[F2$SWdrought5chg<0],(1-rev(seq1)))) #
 qt4 <- c(quantile(F2$SWpluvial5chg[F2$SWpluvial5chg>0], seq1)) #
int <- 1#
F5 <- NULL#
for(v in 1:3)#
{#
	if(v==1){#
		 qt1<- qt1a#
		 qt2<- qt2a#
	}#
	if(v==2){#
		 qt1<- qt1b#
		 qt2<- qt2b#
	}#
F4<-foreach(c = 1:16, .combine=rbind) %dopar%#
{#
	if(c<=8 & v<3)#
	{#
		f22 <- subset(F2, get(vari[v])>= qt2[c] & get(vari[v])<=  qt2[c+int]) 		#
		f23 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- vari[v]#
		col3=ifelse(qt2[c]>= 0.2, 3, 2)#
		qta <- qt2[c]#
		qtb <- qt2[c+int]#
		}#
	if(c>8 & v<3)#
	{ #
		d=c-8#
		f22 <- subset(F2, get(vari[v])<= qt1[d] & get(vari[v])>= qt1[d-int]) #		#
		f23 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- vari[v]#
		col3=ifelse(qt1[d]<= -0.1, 1, 2)#
		qtb <- qt1[d]#
		qta <- qt1[d-int]#
	}#
	if(c<=8 & v==3)#
	{#
			f22 <- subset(F2, get(vari[v])>= qt4[c] & get(vari[v])<= qt4[c+int] & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.15, na.rm=TRUE)) #exclude droughts#
			f23 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.15, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- "Wet summer"#
		col3=ifelse(qt4[c]>=0.2, 3, 2)#
		qta <- qt4[c]#
		qtb <- qt4[c+int]#
	}#
	if(c>8 & v==3)#
	{ #
		d=c-8#
		f22 <- subset(F2, get(vari[v+1])< qt3[d] & get(vari[v+1])>= qt3[d-int] & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.85, na.rm=TRUE)) #exclude wet summers  #
		f23 <- subset(F2, get(vari[v+1])<= quantile(vari1[[v+1]], 0.7, na.rm=TRUE) & get(vari[v+1])>= quantile(vari1[[v+1]], 0.3, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.85, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- "Dry summer"#
		col3=ifelse(qt3[d]<= -0.2, 1, 2)#
		qtb <- qt3[d]#
		qta <- qt3[d-int]#
	}#
f22$nsamp <- (ave(f22$PREV_DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #sample proportion of each grid cell #
#print(c(table(f22$nsamp<0.75), col3))#
#
#f22$col3 <- col3#
PLT_CNsamp1 <- f23$PLT_CN   #
#
f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, nsamp))#
#
F33 <- subset(F2, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
F33 <- merge(F33, f24, all.x=T, by="LATLON")#
F33 <- subset(F33, PLT_CN %in% (PLT_CNsamp1)) # not neccesaary bc weighting will eliminate latlons not in f22!#
#
F33$aPREVSTOCKDIAbin <- floor(F33$PREV_STOCKINGmid/10)*10000+(floor(F33$PREV_DIAmean/2)*2)#
F33$n1 <- 1#
F33$aPREVSTOCKDIAbinlength <- ave(F33$n1, F33$aPREVSTOCKDIAbin, FUN=function(x) sum(x, na.rm=TRUE))#
F33$nbin <- ave(F33$nsamp, F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)) #average AC proportion in stock/dia bins#
#
F33 <- subset(F33, aPREVSTOCKDIAbinlength> 10) #Null model needs at least 10 comparison plots at each diameter/stocking bin#
#
##Carbon Model#
c6 <- (((F33$carbon1sum-F33$PREVcarbon1sum)* 0.00112085116 )/F33$REMPER)#
F33$avgCchg <- (ave(c6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)))/F33$nbin #multiply by AC proportion divided by mean proportion in each stocking/dia bin#
#
##Carbon Model 5 inch and greater trees#
c5 <- (((F33$carbon5sum-F33$PREVcarbon5sum)* 0.00112085116 )/F33$REMPER)#
F33$avgC5chg <- (ave(c5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)))/F33$nbin#
#
##radial growth  #
rx5 <- (F33$DIAchgmean/F33$REMPER) ###
F33$avgx5 <- ave(rx5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##radial growth#
rx5grow <- (F33$DIAgrowmean/F33$REMPER)/2 ## convert from diameter to radial growth#
F33$avgx5grow <- ave(rx5grow*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##Mortality diameter mean#
mortrx5 <- F33$mortDIAmean  ##
F33$avgmortx5 <- ave(mortrx5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##Density Model#
y6 <- (F33$TPAsum-F33$PREV_TPAsum)/F33$REMPER  ##
F33$avgTPAchg <- ave(y6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##SAPLINGS Density Model#
sap6 <- ((F33$TPAsum05/0.404686)-(F33$PREVTPAsum05/0.404686))/F33$REMPER  # convert to hectares#
F33$sapavgTPAchg <- ave(sap6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
##SAPLINGS mortality /recruitment#
F33$sapavgMORT <- ave(F33$sapMortsum*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin #sapling mortality per plot#
F33$sapavgRECR <- ave(F33$sapRecruitsum*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin #sapling plot recuritment#
#
#SISP ratio#
F33$sp1<- mean(F33$SISPchg, na.rm=T) #F33$nsamp#
F33$spavgchg <- ave(F33$sp1,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)) #/F33$nbin#
#
#Merge null and conditional model data#
F34 <- subset(F33, !duplicated(aPREVSTOCKDIAbin), select=c(aPREVSTOCKDIAbin, avgCchg, avgx5, avgx5grow, avgTPAchg, sapavgTPAchg, avgC5chg, avgmortx5, sapavgMORT, sapavgRECR))#
f22$aPREVSTOCKDIAbin <- floor(f22$PREV_STOCKINGmid/10)*10000+(floor(f22$PREV_DIAmean/2)*2)#
f22 <- merge(f22, F34, by="aPREVSTOCKDIAbin") #, all.x=T#
#
#carbon 1 and 5 inch#
c8 <- (((f22$carbon1sum-f22$PREVcarbon1sum)* 0.00112085116 )/f22$REMPER)#
f22$xcarbon <- (c8-f22$avgCchg)#
c55 <- (((f22$carbon5sum-f22$PREVcarbon5sum)* 0.00112085116 )/f22$REMPER)#
f22$xcarbon5 <- ((c55)-f22$avgC5chg)#
##mean diameter change  #
x8 <- (f22$DIAchgmean/f22$REMPER)  # #
f22$x5 <-  (x8-f22$avgx5)#
#
##radial growth  #
x8grow <- (f22$DIAgrowmean/f22$REMPER)/2  # convert from diameter to radial growth#
f22$x5grow <-  (x8grow-f22$avgx5grow)#
#
##mortality size#
mortx8 <- f22$mortDIAmean ##
f22$mortx5 <-  (mortx8-f22$avgmortx5)#
#
##Density Model#
TPA <- (f22$TPAsum-f22$PREV_TPAsum)/f22$REMPER  ##
f22$TPAchg <-  (TPA-f22$avgTPAchg)#
#
##SAPLING Density Model#
sapTPA <- ((f22$TPAsum05/0.404686)-(f22$PREVTPAsum05/0.404686))/f22$REMPER  ##
f22$sapTPAchg <-  (sapTPA-f22$sapavgTPAchg)#
f22$sapMORTchg <- (f22$sapMortsum/f22$sapavgMORT)*100 #sapling mortaltiy percent difference from null#
f22$sapRECRchg <- (f22$sapRecruitsum/f22$sapavgRECR)*100 #sapling recruitment percent difference from null#
#
##SISP ratio#
# sp22 <- mean(f22$SISPchg-f22$sapavgTPAchg, na.rm=T)#
#
#calculate mean condition for x-axis based on v loop#
if(length(f22$xcarbon)>= 10)#
{#
if(v==2)#
{#
	x3 <- mean(f22$TEMP5growchg, na.rm=TRUE)#
}#
if(v==1)#
{#
	x3 <- mean(f22$PREC5growchg, na.rm=TRUE)#
}#
if(v==3)#
{#
x3 <- ifelse(c<=8,mean(f22$SWpluvial5chg, na.rm=TRUE), mean(f22$SWdrought5chg, na.rm=TRUE))#
}#
#
#calculate y-axis variables#
#USxcarbon<- mean(F2$carbon1sum-F2$PREVcarbon1sum)* 0.00112085116/mean(F2$REMPER)#
y3 <- mean(f22$xcarbon, na.rm=TRUE) #
y3pctdif<-(mean(f22$xcarbon, na.rm=TRUE)/mean(f22$avgCchg, na.rm=TRUE))*100   ##
#y3<- (y3pctdif/100)*USxcarbon#
y3start <- mean(f22$avgCchg, na.rm=T) #null model zero line for plotting#
#
y5 <- mean(f22$xcarbon5, na.rm=TRUE)  ##
y5pctdif<-(mean(f22$xcarbon5, na.rm=TRUE)/mean(f22$avgC5chg, na.rm=TRUE))*100   ##
y5start <- mean(f22$avgC5chg, na.rm=T) #null model zero line for plotting#
#USTPA3 <- mean((F2$TPAsum-F2$PREV_TPAsum)/F2$REMPER)#
TPA3pctdif<-(mean(f22$TPAchg, na.rm=TRUE)/mean(f22$avgTPAchg, na.rm=TRUE))*100   ##
TPA3 <-mean(f22$TPAchg, na.rm=TRUE)#
TPA3start <- mean(f22$avgTPAchg, na.rm=T) #null model zero line for plotting#
#
#USsapTPA3 <- mean(((F2$TPAsum05/0.404686)-(F2$PREVTPAsum05/0.404686))/F2$REMPER)#
sapTPA3pctdif <- (mean(f22$sapTPAchg, na.rm=TRUE)/ mean(f22$sapavgTPAchg, na.rm=T))*100##
sapTPA3 <- mean(f22$sapTPAchg, na.rm=TRUE) ##
sapTPA3start <- mean(f22$sapavgTPAchg, na.rm=T)#
#
#USx5 <- mean(F2$DIAchgmean/F2$REMPER, na.rm=T)/2  # convert from diameter to radial growth#
x5pctdif <- (mean(f22$x5, na.rm=TRUE)/mean(f22$avgx5, na.rm=T))*100  ##
x5<- mean(f22$x5, na.rm=TRUE)#
x5start <- mean(f22$avgx5, na.rm=T)#
#
#USx5grow <- mean(F2$DIAgrowmean/F2$REMPER, na.rm=T)/2  # convert from diameter to radial growth#
x5growpctdif <- (mean(f22$x5grow, na.rm=TRUE)/mean(f22$avgx5grow, na.rm=T))*100  ##
x5grow <- mean(f22$x5grow, na.rm=TRUE) ##
x5growstart <- mean(f22$avgx5grow, na.rm=T)#
#
mortx5 <- mean(f22$mortx5, na.rm=TRUE) ##
mortx5start <-   mean(mortx8, na.rm=T)#
sapMORT <- mean(f22$sapMORTchg, na.rm=T)#
sapRECR <- mean(f22$sapRECRchg, na.rm=T)#
#
#calc y-axis error#
R2 <- 2000 #repetitions set to 10 for faster looping#
enderror <- boot(f22$xcarbon, meanFunc, R=R2)#
enderrory3 <- sqrt(var(enderror$t))*1.96#
enderror5 <- boot(f22$xcarbon5, meanFunc, R= R2)#
enderrory5 <- sqrt(var(enderror5$t))*1.96#
enderror2 <- boot(f22$TPAchg, meanFunc, R= R2)#
enderrorTPA <- sqrt(var(enderror2$t))*1.96#
enderrorsap <- boot(f22$sapTPAchg, meanFunc, R= R2)#
enderrorsapTPA <- sqrt(var(enderrorsap$t))*1.96#
enderror4 <- boot(f22$x5, meanFunc, R= R2)#
enderrorx5 <- sqrt(var(enderror4$t))*1.96#
enderrorx5grow4 <- boot(f22$x5grow, meanFunc, R= R2)#
enderrorx5grow <- sqrt(var(enderrorx5grow4$t))*1.96#
enderrorsapMORT <- std.error(f22$sapMORTchg, na.rm=T)#
enderrorsapRECR <- std.error(f22$sapRECRchg, na.rm=T)#
# enderrorsp2error <- boot((f22$SISPchg-f22$sapavgTPAchg), meanFunc, R= R2)#
# enderrorsp22error <- sqrt(var(enderrorsp2error$t))*1.96#
#
n <- length(f22$xcarbon) #conditional model n#
nnull <- length(F33$avgx5) #null model n#
#print(c(n, ccond, c, nnull))#
#
f23 <- c(x3, y3, y5, TPA3, sapTPA3, x5, x5grow, enderrory3, enderrory5, enderrorTPA, enderrorsapTPA, enderrorx5, enderrorx5grow, n, v, col3, y3start, y5start, TPA3start, x5start, sapTPA3start, x5growstart, sapMORT, sapRECR, enderrorsapMORT, enderrorsapRECR, y3pctdif, y5pctdif, TPA3pctdif, sapTPA3pctdif ,x5pctdif, x5growpctdif)#
#
}#
}#
F5 <- rbind(F5,F4)#
}#
#
F6 <- as.data.table(F5)#
setnames(F6, c("x3","y3","y5", "TPA","sapTPA", "x5", "x5grow", "errory3","errory5", "errorTPA","errorsapTPA", "errorx5","errorx5grow", "n", "v", "col3", "y3start", "y5start", "TPA3start", "x5start", "sapTPA3start", "x5growstart", "sapMORTpct", "sapRECRpct", "enderrorsapMORT", "enderrorsapRECR", "y3pctdif", "y5pctdif", "TPA3pctdif", "sapTPA3pctdif", "x5pctdif", "x5growpctdif"))#
F6 <- subset(F6, n>10)
y3start1 <- mean(F6$y3start)#
y5start1 <- mean(F6$y5start)#
TPA3start1 <-mean(F6$TPA3start) #mean(F2$TPAchg) ##
sapTPA3start1 <-mean(F6$sapTPA3start)#
x5start1 <- mean((F6$x5start))#
x5growstart1 <- mean((F6$x5growstart)*5) #*10)#
#
#convert difference btw ac and nonac to relative difference from average#
F6$y3<- y3start1*(F6$y3pctdif/100)#
F6$TPA<- TPA3start1*(F6$TPA3pctdif/100)#
F6$sapTPA<- sapTPA3start1*(F6$sapTPA3pctdif/100)#
F6$x5<- x5start1*(F6$x5pctdif/100)#
F6$x5grow<- x5growstart1*(F6$x5growpctdif/100)#
#
F6$errory3<-(((y3start1-F6$y3start)/F6$y3start)*F6$errory3)+F6$errory3#
F6$errory5<-(((y5start1-F6$y5start)/F6$y5start)*F6$errory5)+F6$errory5#
F6$errorTPA<-(((TPA3start1-F6$TPA3start)/F6$TPA3start)*F6$errorTPA)+F6$errorTPA#
F6$errorsapTPA<-(((sapTPA3start1-F6$sapTPA3start)/F6$sapTPA3start)*F6$errorsapTPA)+F6$errorsapTPA#
F6$errorx5<-(((x5start1-F6$x5start)/F6$x5start)*F6$errorx5)+F6$errorx5#
F6$errorx5grow<-((((mean(F6$x5growstart)-F6$x5growstart)/F6$x5growstart)*F6$errorx5grow)+F6$errorx5grow)*5#
#convert radial growth from cm to mm#
#F6$x5grow <- F6$x5grow*5 #*10#
#F6$errorx5grow <- F6$errorx5grow*5 #*10#
#convert to percent difference#
F6$sapMORTpct <-  (F6$sapMORTpct-100)#
F6$sapRECRpct <-  (F6$sapRECRpct-100)#
F6$sapCpct <-  ((F6$y3-F6$y5)/F6$y3)*100#
#calc plot y-scales#
sapscale  <-  30 #mean(F6$sapTPA3start)/mean(F6$TPA3start) #
Cymax  <-  max(F6$y3+F6$errory3)#
Cymin  <-  min(F6$y3-F6$errory3)#
#TPAymax <- max(F6$sapTPA/sapscale+F6$errorsapTPA/sapscale, na.rm=T)#
TPAymax1 <- (max(F6$sapTPA+F6$errorsapTPA))/sapscale#
TPAymax2 <- (max(F6$TPA+F6$errorTPA))#
TPAymax <- max(TPAymax1, TPAymax2)#
TPAymin2 <- (min(F6$TPA-F6$errorTPA))#
TPAymin1 <- (min(F6$sapTPA-F6$errorsapTPA))/sapscale#
TPAymin <- min(TPAymin1, TPAymin2)#
DIAmax1 <- (max(F6$x5grow+F6$errorx5grow))#
DIAmin1 <- (min(F6$x5grow-F6$errorx5grow))#
DIAmax2 <- max(F6$x5+F6$errorx5)#
DIAmin2 <- min(F6$x5-F6$errorx5)#
DIAmin <- min(DIAmin2, DIAmin1)#
DIAmax <- max(DIAmax2, DIAmax1)#
sapmax <- max(F6$sapMORTpct+F6$enderrorsapMORT)#
sapmin <- min(F6$sapMORTpct-F6$enderrorsapMORT)#
#
#plot only sapling data that is significantly different with scaling than larger trees. #
#F6$sapTPA <- ifelse(((F6$sapTPA/sapscale)>(F6$TPA+F6$errorTPA))|((F6$sapTPA/sapscale)<(F6$TPA-F6$errorTPA)), F6$sapTPA, NA)#
#F6$x5grow <- ifelse(((F6$x5grow-F6$errorx5grow)>(F6$x5))|((F6$x5grow)<(F6$x5-F6$errorx5)), F6$x5grow, NA)#
#
#set up 5-year precip plots using ggplot#
F7 <- subset(F6, v==1)#
F7$sapTPA <- ifelse(F7$col3==2,NA, F7$sapTPA)#
v=1#
col4 <- c(dt,"grey35", pt)#
#
#NPP plot#
#limitssap <- aes(ymax=(y5/y5scale +errorsapTPA/sapscale)+TPA3start1, ymin=(sapTPA/sapscale-errorsapTPA/sapscale)+TPA3start1)#
limits <- aes(ymax=(y3+errory3)+y3start1, ymin=(y3-errory3+y3start1))#
P1 <- ggplot(F7, aes(x=x3, y=(y3+y3start1), fill=as.factor(col3)))  +geom_hline(y=y3start1, linetype=3) +geom_vline(linetype=3)+ geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21)  + theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_text(angle = 90, hjust = 0.5, size=11, colour="black"))+ theme(axis.text.x = element_blank())+ scale_y_continuous(name=expression(paste(" Productivity (Mg C ha"^"-1","yr" ^"-1",")")), limits=c(Cymin, Cymax)+y3start1, breaks=c(round(y3start1, 1)-0.5,  round(y3start1, 3),  round(y3start1, 1)+0.3,  round(y3start1, 1)+0.6), labels=c(round(y3start1, 1)-0.5, round(y3start1, 1), round(y3start1, 1)+0.3, round(y3start1, 1)+0.6)) + scale_x_continuous(element_blank(), breaks=c(-0.5, 0, 0.5)) + theme(legend.title=element_blank(), legend.key=element_blank()) +scale_fill_manual( name=NULL, breaks=c("1", "3"), label=element_blank(), values=c(col4))  + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) #+coord_cartesian(ylim = c(0.7, 2.65))#
#Stem density plot#
limits <- aes(ymax=(TPA+errorTPA)+TPA3start1, ymin=(TPA-errorTPA)+TPA3start1)#
limitssap <- aes(ymax=(sapTPA/sapscale +errorsapTPA/sapscale)+TPA3start1, ymin=(sapTPA/sapscale-errorsapTPA/sapscale)+TPA3start1)#
P2 <- ggplot(F7, aes(x=x3, y=(TPA+TPA3start1), fill=as.factor(col3)))  +geom_hline(y=TPA3start1, linetype=3) +geom_vline(linetype=3) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(-0.07, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_text(angle = 90, hjust = 0.5, size=11, colour="black"))+ theme(axis.text.x = element_blank())+ scale_y_continuous(name=expression(paste(Delta, " Stem density (ha"^"-1","yr" ^"-1",")")), limits=c(TPAymin, TPAymax)+TPA3start1, breaks=c(2.0, TPA3start1, 8.0), labels=c(expression("2.0"[" (-35)"]), expression("4.6" [" (43)"]), expression("8.0" [" (145)"]))) + scale_x_continuous(element_blank(), breaks=c(-0.5, 0, 0.5)) +scale_fill_manual(values=c(col4), breaks=NULL) +geom_errorbar(limitssap, width=0.05, colour="grey70") + geom_point(aes( y=(sapTPA/sapscale)+ TPA3start1, col=as.factor(col3)), size=2, pch=8)+ theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.1),plot.margin=unit(c(0,0,0.65,0), "cm")) +scale_colour_manual(values=c(col9), name=NULL, breaks=c("2"), label=c("(Saplings)"))+ geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) #+coord_cartesian(ylim = c(1.8, 9.85))#
#Radial growth plot#
limits <- aes(ymax=(x5+errorx5)+x5start1, ymin=(x5-errorx5)+x5start1)#
limits2 <- aes(ymax=(x5grow+errorx5grow)+ x5start1, ymin=(x5grow-errorx5grow)+ x5start1)#
P3 <- ggplot(F7, aes(x=x3, y=(x5+x5start1), fill=as.factor(col3)))  +geom_hline(y=x5start1, linetype=3) +geom_vline(linetype=3)  +theme(axis.line = element_line( size = 0.35)) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm"))  + theme(axis.ticks.margin = unit(-0.03, "cm")) + theme(axis.ticks.length = unit(0.1, "cm"))  +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_text(angle = 90, hjust = 0.5, size=11, colour="black"))+ theme(axis.text.x = element_text( hjust = 0.5, size=11, colour="black")) + scale_y_continuous(name=expression(paste(Delta, " Mean diameter (cm yr" ^"-1",")")), limits=c(DIAmin, DIAmax)+x5start1, breaks=c(0.07, x5start1, 0.17), labels=c(expression("0.07"[" (0.55)"]), expression("0.11" [" (0.63)"]), expression("0.17" [" (0.75)"]))) + scale_x_continuous(name=expression(paste("   Precipitation JJA 5-yr\nmean anomaly (mm day"^"-1",")")), breaks=c(-0.5, 0, 0.5)) +scale_fill_manual(values=c(col4), breaks=NULL)  + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.55,0.1), plot.margin=unit(c(-0.5,0,0.34, -0.04), "cm")) + theme(axis.title.x = element_text(vjust=-0.85)) + geom_errorbar(limits2, width=0.05, colour="grey70") + geom_point(aes(y=(x5grow+ x5start1), col=as.factor(col3)), size=2.5, pch=17)  +scale_colour_manual(values=c(col4), name=NULL, breaks=c("2"), label=expression(paste("(Radial growth mm yr" ^"-1",")"))) + geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21)#
#set up 5-year TEMP plots using ggplot#
F8 <- subset(F6, v==2) # & x3>0.2)#
v=2#
col8 <- c(ct,"grey35", wt)#
#NPP plot#
limits <- aes(ymax=(y3+errory3)+y3start1, ymin=(y3-errory3+y3start1))#
T1 <- ggplot(F8, aes(x=x3, y=(y3+y3start1), fill=as.factor(col3)))  +geom_hline(y=y3start1, linetype=3)+geom_vline(linetype=3)+ geom_errorbar(limits, width=0.01, colour="grey50")+ geom_point(colour="grey25", size=2.5, pch=21) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_blank())+ theme(axis.text.x =element_blank())+ scale_y_continuous(element_blank(), limits=c(Cymin, Cymax)+y3start1,  breaks=c(round(y3start1, 1)-0.5,  round(y3start1, 3),  round(y3start1, 1)+0.3,  round(y3start1, 1)+0.6)) + scale_x_continuous(element_blank(),breaks=c(-0.5, 0, 0.5, 1.0))+ theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.9),plot.margin=unit(c(0,0,0,0), "cm")) +scale_fill_manual( name=NULL, breaks=c("1", "3"), label=c("Cool 5-yr period", "Warm 5-yr period"), values=c(col8)) +theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) #+coord_cartesian(ylim = c(0.7, 2.65))#
#
#stem density#
limits <- aes(ymax=(TPA+errorTPA)+TPA3start1, ymin=(TPA-errorTPA)+TPA3start1)#
T2 <- ggplot(F8,aes(x=x3, y=(TPA+TPA3start1), fill=as.factor(col3)))    +geom_hline(y=TPA3start1, linetype=3) +geom_vline(linetype=3) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm"))  + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_blank())+ theme(axis.text.x =(element_blank())) + scale_y_continuous(element_blank(), limits=c(TPAymin, TPAymax)+TPA3start1, breaks=c(2.0, TPA3start1, 8.0)) + scale_x_continuous(element_blank())  +scale_fill_manual(values=c(col8), breaks=NULL) +geom_errorbar(limitssap, width=0.05, colour="grey70") + geom_point(aes( y=(sapTPA/sapscale)+ TPA3start1, col=as.factor(col3)), size=2, pch=8) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.1),plot.margin=unit(c(0,0,0.5,0), "cm")) +scale_colour_manual(values=c(col8), name=NULL, breaks=c("2"), label=c("(Saplings)"))+ geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) #+coord_cartesian(ylim = c(1.8, 9.85)) #
#
#Radial growth plot#
limits <- aes(ymax=(x5+errorx5)+x5start1, ymin=(x5-errorx5)+x5start1)#
limits2 <- aes(ymax=(x5grow+errorx5grow)+ x5start1, ymin=(x5grow-errorx5grow)+ x5start1)#
T3 <- ggplot(F8, aes(x=x3, y=(x5+x5start1), fill=as.factor(col3))) + geom_hline(y=x5start1, linetype=3) +geom_vline(linetype=3)  +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y =element_blank())+ theme(axis.text.x = element_text( hjust = 0.5, size=11, colour="black")) + scale_y_continuous(element_blank(), limits=c(DIAmin, DIAmax)+x5start1,breaks=c(0.02, x5start1, 0.2)) + scale_x_continuous(name=("Temperature JJA 5-yr\nmean anomaly (C)")) +scale_fill_manual(values=c(col8), breaks=NULL) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.43,0.1), plot.margin=unit(c(-0.5,0,0, 0), "cm"))+ geom_errorbar(limits2, width=0.05, colour="grey70") + geom_point(aes( y=(x5grow+ x5start1), col=as.factor(col3)), size=2.5, pch=17)  +scale_colour_manual(values=c(col8), name=NULL, breaks=c("2"), label=expression(paste("(Radial growth mm yr" ^"-1",")"))) + geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) #
#set up 1-year soil moist. plots using ggplot#
F9 <- subset(F6, v==3)#
v=3#
col9 <- c(de,"grey35", pe)#
limits <- aes(ymax=(y3+errory3)+y3start1, ymin=(y3-errory3+y3start1))#
#NPP plot#
R1 <- ggplot(F9,aes(x=x3, y=(y3+y3start1), fill=as.factor(col3))) +geom_hline(y=y3start1, linetype=3) +geom_vline(linetype=3)+ geom_errorbar(limits, width=0.01, colour="grey50")+ geom_point(colour="grey25", size=2.5, pch=21) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_blank())+ theme(axis.text.x =(element_blank())) + scale_y_continuous(element_blank(), limits=c(Cymin, Cymax)+y3start1,  breaks=c(round(y3start1, 1)-0.5,  round(y3start1, 3),  round(y3start1, 1)+0.3,  round(y3start1, 1)+0.6)) + scale_x_continuous(element_blank()) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.9),plot.margin=unit(c(0,0,0,0), "cm")) +scale_fill_manual( name=NULL, breaks=c("1", "3"), label=c( "Dry summer", "Wet summer"), values=c(col9)) +theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) #+coord_cartesian(ylim = c(0.7, 2.65))#
#
#Stem density plot#
limits <- aes(ymax=(TPA+errorTPA)+TPA3start1, ymin=(TPA-errorTPA)+TPA3start1)#
limitssap <- aes(ymax=(sapTPA/sapscale +errorsapTPA/sapscale)+TPA3start1, ymin=(sapTPA/sapscale-errorsapTPA/sapscale)+TPA3start1)#
R2 <- ggplot(F9,aes(x=x3, y=(TPA+TPA3start1), fill=as.factor(col3)))   +geom_hline(y=TPA3start1, linetype=3) +geom_vline(linetype=3)+theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_blank())+ theme(axis.text.x =(element_blank()))+ scale_y_continuous(element_blank(), limits=c(TPAymin, TPAymax)+TPA3start1, breaks=c(2.0, TPA3start1, 8.0)) + scale_x_continuous(element_blank()) +scale_fill_manual(values=c(col9), breaks=NULL) +geom_errorbar(limitssap, width=0.10, colour="grey70") + geom_point(aes( y=(sapTPA/sapscale)+ TPA3start1, col=as.factor(col3)), size=2, pch=8) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.1), plot.margin=unit(c(0,0,0.5,0), "cm")) +scale_colour_manual(values=c(col9), name=NULL, breaks=c("2"), label=c("(Saplings)"))+ geom_errorbar(limits, width= 0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) #+coord_cartesian(ylim = c(1.8, 9.85))#
#
#radial growth plot#
limits <- aes(ymax=(x5+errorx5)+x5start1, ymin=(x5-errorx5)+x5start1)#
limits2 <- aes(ymax=(x5grow+errorx5grow)+ x5start1, ymin=(x5grow-errorx5grow)+ x5start1)#
R3 <- ggplot(F9, aes(x=x3, y=(x5+x5start1), fill=as.factor(col3)))   +geom_hline(y=x5start1, linetype=3) +geom_vline(linetype=3) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_blank())+ theme(axis.text.x = element_text( hjust = 0.5, size=11, colour="black")) + scale_y_continuous(element_blank(), limits=c(DIAmin, DIAmax)+x5start1, breaks=c(0.02, x5start1, 0.2)) + scale_x_continuous(name=("Soil moisture JJA 1-yr\nmin/max (z-score)"), breaks=c(-2.0, -1.0, 0.0, 1.0), labels=c("-2.0", "-1.0", "0.0", "1.0")) +scale_fill_manual(values=c(col9), breaks=NULL) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.53,0.1), plot.margin=unit(c(-0.5,0,0, 0), "cm")) + geom_errorbar(limits2, width=0.10, colour="grey70")+ geom_point(aes( y=(x5grow+ x5start1), col=as.factor(col3)), size=2.5, pch=17)  +scale_colour_manual(values=c(col9), name=NULL, breaks=c("2"), label=expression(paste("(Radial growth mm yr" ^"-1",")"))) + geom_errorbar(limits, width=0.01, colour="grey50")  + geom_point(colour="grey25", size=2.5, pch=21)#
#
#set up plot window and plot all together#
dev.new(width=6.75, height=8) #8#
grid.arrange(P1,T1,R1,P2,T2,R2,P3,T3,R3, ncol=3)#
#grid.text(0.045, unit(0.575,"npc") - unit(1,"line"), rot=90, label="(30)", gp=gpar(cex=0.75))#
#
#######END Fig 3.  Climate Correlations
#Climate Colors:#
pt <- "steelblue1" #pluvial trend#
pe <- "royalblue"	#pluvial event#
dt <- "goldenrod1" #drought trend#
de <- "orange2"  	#drought event#
nt <- "grey55"#
ne <- "grey35"#
wt <- "peachpuff"#
ct <- "slategray1"#
errorcol <- "grey75"#
errorlwd <- 0.53#
ag1 <- 25#
#S4swPREC <- as.data.table(read.csv("/Volumes/m-z/tda210/USFS/RM5mergedfullcut1991.11.17.2014.csv", header = TRUE, sep = ",", quote="\"", dec="."))#
F2 <- subset(S4swPREC)  #, SISP<300) #
undisturbed<-0#
deciduous<-0#
coniferous<-0#
#dataset for undisturbed analysis Fig S2 <-exclude forests plots with identified disturbances #
if(undisturbed==1){F2 <- subset(F2,  disease==0 & weather==0 & fire==0 &  animal==0 & insect==0)  }#
if(deciduous==1){F2 <- subset(F2, SISP>=300 )} #(EHstocksum+Evergreenstocksum+Hydricstocksum+ LHstocksum+NMHstocksum+SMHstocksum)>(LCstocksum +MCstocksum+ NPstocksum+ SPstocksum+ CDstocksum)#
if(coniferous ==1){F2 <- subset(F2,  SISP<300)  }#
#
#Convert variables to standard names and metric units#
F2$DIAmean <- (F2$DIAendmean* 2.54)			#mean tree diameter by plot at resurvey (cm)#
F2$PREV_DIAmean <- (F2$DIAbeginmean *2.54)	#mean tree diameter by plot at initial survey (cm)#
F2$TPAsum <- (F2$endsumTPA /0.404686)			#number of trees per hectare by plot at resurvey#
F2$PREV_TPAsum <- (F2$startsumTPA /0.404686)	#number of trees per hectare by plot at initial survey (cm)#
F2$PREV_STOCKINGmid <- F2$PREVSTOCKING5mid	#calculated relative stocking by plot at initial survey#
#F2$TPAchg <- (F2$TPAsum-F2$PREV_TPAsum)/F2$REMPER#
F2$SISPchg<-ifelse(F2$SISP>=300, 1, ifelse(F2$SISP<300, -1, NA) )#
F2$DIAchgmean<- F2$DIAmean - F2$PREV_DIAmean #
#set grid cell size#
a <- b <- 2  #2=0.5degrees, 0.5=2degrees#
	F2$iLAT <- ((ceiling(F2$LAT*a))/a)-0.5 #+0.25  #round down to integer then add .25 ; switched /* removed ).25 addition#
	F2$iLON <- ((floor(F2$LON*b))/b)+0.5 #-0.25  #round down to integer then subtract .25; switched /*  ).25 addition#
	F2$LATLONYR <- (F2$iLAT*10000000000000) +(F2$iLON*(-100000000)) +F2$INVYR#
	F2$LATLON <- as.factor(F2$iLAT*100000000+ F2$iLON*-1000) #LATLON identifyier#
#Find climate variable mean and range for each grid cell#
F2$TEMPminLL <- ave(F2$temp5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$TEMPgrowminLL <- ave(F2$temp5grow, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$TEMP5chg <- F2$temp5-F2$TEMPminLL#
F2$TEMP5growchg <- F2$temp5grow-F2$TEMPgrowminLL#
F2$TEMP5growchg[is.na(F2$TEMP5growchg)==T] <- 0#
F2$TEMP5growchg[F2$TEMP5growchg==0] <- rnorm(sum(F2$TEMP5growchg==0),0,sd=0.01) #make median 0 value a distribution for subseting#
# note random distribution of median climate values will make results slightly different each run#
#
#F2$PREC5grow <- F2$PREC5grow*92/3/10 #convert mm/day to cm per month#
F2$PRECminLL <- ave(F2$PREC5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$PRECgrowminLL <- ave(F2$PREC5grow, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$PREC5chg <- F2$PREC5-F2$PRECminLL#
F2$PREC5growchg <- F2$PREC5grow-F2$PRECgrowminLL#
F2$PREC5growchg[F2$PREC5growchg==0] <- rnorm(sum(F2$PREC5growchg==0),0,sd=0.01) #make median 0 value a distribution for subseting#
#
#make median 0 value a distribution for subseting (but not random for consistent results!)#
F2$SWdroughtLL <- ave(F2$SWdrought5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$SWpluvialLL <- ave(F2$SWpluvial5, F2$LATLON, FUN=function(x) median(x, na.rm=TRUE))#
F2$SWdrought5chg <- F2$SWdrought5-F2$SWdroughtLL#
F2$SWpluvial5chg <- F2$SWpluvial5-F2$SWpluvialLL#
F2$SWpluvial5chg[F2$SWpluvial5chg==0] <- rnorm(sum(F2$SWpluvial5chg ==0),0,sd=0.01)  #seq(0.01,-0.01, ((0.02/((sum(F2$SWpluvial5chg==0)-1)))))#
F2$SWdrought5chg[F2$SWdrought5chg==0 ] <- rnorm(sum(F2$SWdrought5chg ==0),0,sd=0.01)  #seq(0.01, -0.01, ((0.002/((sum(F2$SWdrought5chg==0)/10)-1))))#
#
F2$nsampTOT <- ave(F2$PREV_DIAmean>0,F2$LATLON, FUN=function(x) sum(x, na.rm=TRUE))#
vari <- c("PREC5growchg", "TEMP5growchg", "SWpluvial5chg", "SWdrought5chg") #"PREC5growchg", "TEMP5growchg"#
vari1 <- subset(F2, select=c(PREC5growchg, TEMP5growchg, SWpluvial5chg, SWdrought5chg))#
vari2 <- c("5-yr JJA precip. anomaly (mm/day)", "5-yr JJA temp. anomaly (C)", "1-yr JJA soil moist. anomaly (z-score)", "1-yr JJA soil moist. anomaly (z-score)")#
#
seq1<- c(0.2, 0.4, NA, 0.66, 0.86, 0.96, 1, NA)#
#
if(coniferous==1 | deciduous==1){seq1<- c(0.2, 0.4, NA, 0.5, 0.75, 0.9, 1)} #broader quantiles for smaller dataset#
#(100-(c(0.2, 0.4, NA, 0.5, 0.75, 0.9, 1)*100))/2#
#
qt1a <- c(quantile(F2$PREC5growchg[F2$PREC5growchg<0],(1-rev(seq1))))  #
 qt2a <- c(quantile(F2$PREC5growchg[F2$PREC5growchg>0], seq1)) #
 qt1b <- c(quantile(F2$TEMP5growchg[F2$TEMP5growchg<0],(1-rev(seq1)))) #
 qt2b <- c(quantile(F2$TEMP5growchg[F2$TEMP5growchg>0], seq1))  #
 qt3 <- c(quantile(F2$SWdrought5chg[F2$SWdrought5chg<0],(1-rev(seq1)))) #
 qt4 <- c(quantile(F2$SWpluvial5chg[F2$SWpluvial5chg>0], seq1)) #
int <- 1#
F5 <- NULL#
for(v in 1:3)#
{#
	if(v==1){#
		 qt1<- qt1a#
		 qt2<- qt2a#
	}#
	if(v==2){#
		 qt1<- qt1b#
		 qt2<- qt2b#
	}#
F4<-foreach(c = 1:16, .combine=rbind) %dopar%#
{#
	if(c<=8 & v<3)#
	{#
		f22 <- subset(F2, get(vari[v])>= qt2[c] & get(vari[v])<=  qt2[c+int]) 		#
		f23 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- vari[v]#
		col3=ifelse(qt2[c]>= 0.2, 3, 2)#
		qta <- qt2[c]#
		qtb <- qt2[c+int]#
		}#
	if(c>8 & v<3)#
	{ #
		d=c-8#
		f22 <- subset(F2, get(vari[v])<= qt1[d] & get(vari[v])>= qt1[d-int]) #		#
		f23 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- vari[v]#
		col3=ifelse(qt1[d]<= -0.1, 1, 2)#
		qtb <- qt1[d]#
		qta <- qt1[d-int]#
	}#
	if(c<=8 & v==3)#
	{#
			f22 <- subset(F2, get(vari[v])>= qt4[c] & get(vari[v])<= qt4[c+int] & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.15, na.rm=TRUE)) #exclude droughts#
			f23 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.15, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- "Wet summer"#
		col3=ifelse(qt4[c]>=0.2, 3, 2)#
		qta <- qt4[c]#
		qtb <- qt4[c+int]#
	}#
	if(c>8 & v==3)#
	{ #
		d=c-8#
		f22 <- subset(F2, get(vari[v+1])< qt3[d] & get(vari[v+1])>= qt3[d-int] & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.85, na.rm=TRUE)) #exclude wet summers  #
		f23 <- subset(F2, get(vari[v+1])<= quantile(vari1[[v+1]], 0.7, na.rm=TRUE) & get(vari[v+1])>= quantile(vari1[[v+1]], 0.3, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.85, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- "Dry summer"#
		col3=ifelse(qt3[d]<= -0.2, 1, 2)#
		qtb <- qt3[d]#
		qta <- qt3[d-int]#
	}#
f22$nsamp <- (ave(f22$PREV_DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #sample proportion of each grid cell #
#print(c(table(f22$nsamp<0.75), col3))#
#
#f22$col3 <- col3#
PLT_CNsamp1 <- f23$PLT_CN   #
#
f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, nsamp))#
#
F33 <- subset(F2, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
F33 <- merge(F33, f24, all.x=T, by="LATLON")#
F33 <- subset(F33, PLT_CN %in% (PLT_CNsamp1)) # not neccesaary bc weighting will eliminate latlons not in f22!#
#
F33$aPREVSTOCKDIAbin <- floor(F33$PREV_STOCKINGmid/10)*10000+(floor(F33$PREV_DIAmean/2)*2)#
F33$n1 <- 1#
F33$aPREVSTOCKDIAbinlength <- ave(F33$n1, F33$aPREVSTOCKDIAbin, FUN=function(x) sum(x, na.rm=TRUE))#
F33$nbin <- ave(F33$nsamp, F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)) #average AC proportion in stock/dia bins#
#
F33 <- subset(F33, aPREVSTOCKDIAbinlength> 10) #Null model needs at least 10 comparison plots at each diameter/stocking bin#
#
##Carbon Model#
c6 <- (((F33$carbon1sum-F33$PREVcarbon1sum)* 0.00112085116 )/F33$REMPER)#
F33$avgCchg <- (ave(c6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)))/F33$nbin #multiply by AC proportion divided by mean proportion in each stocking/dia bin#
#
##Carbon Model 5 inch and greater trees#
c5 <- (((F33$carbon5sum-F33$PREVcarbon5sum)* 0.00112085116 )/F33$REMPER)#
F33$avgC5chg <- (ave(c5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)))/F33$nbin#
#
##radial growth  #
rx5 <- (F33$DIAchgmean/F33$REMPER) ###
F33$avgx5 <- ave(rx5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##radial growth#
rx5grow <- (F33$DIAgrowmean/F33$REMPER)/2 ## convert from diameter to radial growth#
F33$avgx5grow <- ave(rx5grow*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##Mortality diameter mean#
mortrx5 <- F33$mortDIAmean  ##
F33$avgmortx5 <- ave(mortrx5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##Density Model#
y6 <- (F33$TPAsum-F33$PREV_TPAsum)/F33$REMPER  ##
F33$avgTPAchg <- ave(y6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##SAPLINGS Density Model#
sap6 <- ((F33$TPAsum05/0.404686)-(F33$PREVTPAsum05/0.404686))/F33$REMPER  # convert to hectares#
F33$sapavgTPAchg <- ave(sap6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
##SAPLINGS mortality /recruitment#
F33$sapavgMORT <- ave(F33$sapMortsum*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin #sapling mortality per plot#
F33$sapavgRECR <- ave(F33$sapRecruitsum*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin #sapling plot recuritment#
#
#SISP ratio#
F33$sp1<- mean(F33$SISPchg, na.rm=T) #F33$nsamp#
F33$spavgchg <- ave(F33$sp1,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)) #/F33$nbin#
#
#Merge null and conditional model data#
F34 <- subset(F33, !duplicated(aPREVSTOCKDIAbin), select=c(aPREVSTOCKDIAbin, avgCchg, avgx5, avgx5grow, avgTPAchg, sapavgTPAchg, avgC5chg, avgmortx5, sapavgMORT, sapavgRECR))#
f22$aPREVSTOCKDIAbin <- floor(f22$PREV_STOCKINGmid/10)*10000+(floor(f22$PREV_DIAmean/2)*2)#
f22 <- merge(f22, F34, by="aPREVSTOCKDIAbin") #, all.x=T#
#
#carbon 1 and 5 inch#
c8 <- (((f22$carbon1sum-f22$PREVcarbon1sum)* 0.00112085116 )/f22$REMPER)#
f22$xcarbon <- (c8-f22$avgCchg)#
c55 <- (((f22$carbon5sum-f22$PREVcarbon5sum)* 0.00112085116 )/f22$REMPER)#
f22$xcarbon5 <- ((c55)-f22$avgC5chg)#
##mean diameter change  #
x8 <- (f22$DIAchgmean/f22$REMPER)  # #
f22$x5 <-  (x8-f22$avgx5)#
#
##radial growth  #
x8grow <- (f22$DIAgrowmean/f22$REMPER)/2  # convert from diameter to radial growth#
f22$x5grow <-  (x8grow-f22$avgx5grow)#
#
##mortality size#
mortx8 <- f22$mortDIAmean ##
f22$mortx5 <-  (mortx8-f22$avgmortx5)#
#
##Density Model#
TPA <- (f22$TPAsum-f22$PREV_TPAsum)/f22$REMPER  ##
f22$TPAchg <-  (TPA-f22$avgTPAchg)#
#
##SAPLING Density Model#
sapTPA <- ((f22$TPAsum05/0.404686)-(f22$PREVTPAsum05/0.404686))/f22$REMPER  ##
f22$sapTPAchg <-  (sapTPA-f22$sapavgTPAchg)#
f22$sapMORTchg <- (f22$sapMortsum/f22$sapavgMORT)*100 #sapling mortaltiy percent difference from null#
f22$sapRECRchg <- (f22$sapRecruitsum/f22$sapavgRECR)*100 #sapling recruitment percent difference from null#
#
##SISP ratio#
# sp22 <- mean(f22$SISPchg-f22$sapavgTPAchg, na.rm=T)#
#
#calculate mean condition for x-axis based on v loop#
if(length(f22$xcarbon)>= 10)#
{#
if(v==2)#
{#
	x3 <- mean(f22$TEMP5growchg, na.rm=TRUE)#
}#
if(v==1)#
{#
	x3 <- mean(f22$PREC5growchg, na.rm=TRUE)#
}#
if(v==3)#
{#
x3 <- ifelse(c<=8,mean(f22$SWpluvial5chg, na.rm=TRUE), mean(f22$SWdrought5chg, na.rm=TRUE))#
}#
#
#calculate y-axis variables#
#USxcarbon<- mean(F2$carbon1sum-F2$PREVcarbon1sum)* 0.00112085116/mean(F2$REMPER)#
y3 <- mean(f22$xcarbon, na.rm=TRUE) #
y3pctdif<-(mean(f22$xcarbon, na.rm=TRUE)/mean(f22$avgCchg, na.rm=TRUE))*100   ##
#y3<- (y3pctdif/100)*USxcarbon#
y3start <- mean(f22$avgCchg, na.rm=T) #null model zero line for plotting#
#
y5 <- mean(f22$xcarbon5, na.rm=TRUE)  ##
y5pctdif<-(mean(f22$xcarbon5, na.rm=TRUE)/mean(f22$avgC5chg, na.rm=TRUE))*100   ##
y5start <- mean(f22$avgC5chg, na.rm=T) #null model zero line for plotting#
#USTPA3 <- mean((F2$TPAsum-F2$PREV_TPAsum)/F2$REMPER)#
TPA3pctdif<-(mean(f22$TPAchg, na.rm=TRUE)/mean(f22$avgTPAchg, na.rm=TRUE))*100   ##
TPA3 <-mean(f22$TPAchg, na.rm=TRUE)#
TPA3start <- mean(f22$avgTPAchg, na.rm=T) #null model zero line for plotting#
#
#USsapTPA3 <- mean(((F2$TPAsum05/0.404686)-(F2$PREVTPAsum05/0.404686))/F2$REMPER)#
sapTPA3pctdif <- (mean(f22$sapTPAchg, na.rm=TRUE)/ mean(f22$sapavgTPAchg, na.rm=T))*100##
sapTPA3 <- mean(f22$sapTPAchg, na.rm=TRUE) ##
sapTPA3start <- mean(f22$sapavgTPAchg, na.rm=T)#
#
#USx5 <- mean(F2$DIAchgmean/F2$REMPER, na.rm=T)/2  # convert from diameter to radial growth#
x5pctdif <- (mean(f22$x5, na.rm=TRUE)/mean(f22$avgx5, na.rm=T))*100  ##
x5<- mean(f22$x5, na.rm=TRUE)#
x5start <- mean(f22$avgx5, na.rm=T)#
#
#USx5grow <- mean(F2$DIAgrowmean/F2$REMPER, na.rm=T)/2  # convert from diameter to radial growth#
x5growpctdif <- (mean(f22$x5grow, na.rm=TRUE)/mean(f22$avgx5grow, na.rm=T))*100  ##
x5grow <- mean(f22$x5grow, na.rm=TRUE) ##
x5growstart <- mean(f22$avgx5grow, na.rm=T)#
#
mortx5 <- mean(f22$mortx5, na.rm=TRUE) ##
mortx5start <-   mean(mortx8, na.rm=T)#
sapMORT <- mean(f22$sapMORTchg, na.rm=T)#
sapRECR <- mean(f22$sapRECRchg, na.rm=T)#
#
#calc y-axis error#
R2 <- 2000 #repetitions set to 10 for faster looping#
enderror <- boot(f22$xcarbon, meanFunc, R=R2)#
enderrory3 <- sqrt(var(enderror$t))*1.96#
enderror5 <- boot(f22$xcarbon5, meanFunc, R= R2)#
enderrory5 <- sqrt(var(enderror5$t))*1.96#
enderror2 <- boot(f22$TPAchg, meanFunc, R= R2)#
enderrorTPA <- sqrt(var(enderror2$t))*1.96#
enderrorsap <- boot(f22$sapTPAchg, meanFunc, R= R2)#
enderrorsapTPA <- sqrt(var(enderrorsap$t))*1.96#
enderror4 <- boot(f22$x5, meanFunc, R= R2)#
enderrorx5 <- sqrt(var(enderror4$t))*1.96#
enderrorx5grow4 <- boot(f22$x5grow, meanFunc, R= R2)#
enderrorx5grow <- sqrt(var(enderrorx5grow4$t))*1.96#
enderrorsapMORT <- std.error(f22$sapMORTchg, na.rm=T)#
enderrorsapRECR <- std.error(f22$sapRECRchg, na.rm=T)#
# enderrorsp2error <- boot((f22$SISPchg-f22$sapavgTPAchg), meanFunc, R= R2)#
# enderrorsp22error <- sqrt(var(enderrorsp2error$t))*1.96#
#
n <- length(f22$xcarbon) #conditional model n#
nnull <- length(F33$avgx5) #null model n#
#print(c(n, ccond, c, nnull))#
#
f23 <- c(x3, y3, y5, TPA3, sapTPA3, x5, x5grow, enderrory3, enderrory5, enderrorTPA, enderrorsapTPA, enderrorx5, enderrorx5grow, n, v, col3, y3start, y5start, TPA3start, x5start, sapTPA3start, x5growstart, sapMORT, sapRECR, enderrorsapMORT, enderrorsapRECR, y3pctdif, y5pctdif, TPA3pctdif, sapTPA3pctdif ,x5pctdif, x5growpctdif)#
#
}#
}#
F5 <- rbind(F5,F4)#
}#
#
F6 <- as.data.table(F5)#
setnames(F6, c("x3","y3","y5", "TPA","sapTPA", "x5", "x5grow", "errory3","errory5", "errorTPA","errorsapTPA", "errorx5","errorx5grow", "n", "v", "col3", "y3start", "y5start", "TPA3start", "x5start", "sapTPA3start", "x5growstart", "sapMORTpct", "sapRECRpct", "enderrorsapMORT", "enderrorsapRECR", "y3pctdif", "y5pctdif", "TPA3pctdif", "sapTPA3pctdif", "x5pctdif", "x5growpctdif"))#
F6 <- subset(F6, n>10)
y3start1 <- mean(F6$y3start)#
y5start1 <- mean(F6$y5start)#
TPA3start1 <-mean(F6$TPA3start) #mean(F2$TPAchg) ##
sapTPA3start1 <-mean(F6$sapTPA3start)#
x5start1 <- mean((F6$x5start))#
x5growstart1 <- mean((F6$x5growstart)*5) #*10)#
#
#convert difference btw ac and nonac to relative difference from average#
F6$y3<- y3start1*(F6$y3pctdif/100)#
F6$TPA<- TPA3start1*(F6$TPA3pctdif/100)#
F6$sapTPA<- sapTPA3start1*(F6$sapTPA3pctdif/100)#
F6$x5<- x5start1*(F6$x5pctdif/100)#
F6$x5grow<- x5growstart1*(F6$x5growpctdif/100)#
#
F6$errory3<-(((y3start1-F6$y3start)/F6$y3start)*F6$errory3)+F6$errory3#
F6$errory5<-(((y5start1-F6$y5start)/F6$y5start)*F6$errory5)+F6$errory5#
F6$errorTPA<-(((TPA3start1-F6$TPA3start)/F6$TPA3start)*F6$errorTPA)+F6$errorTPA#
F6$errorsapTPA<-(((sapTPA3start1-F6$sapTPA3start)/F6$sapTPA3start)*F6$errorsapTPA)+F6$errorsapTPA#
F6$errorx5<-(((x5start1-F6$x5start)/F6$x5start)*F6$errorx5)+F6$errorx5#
F6$errorx5grow<-((((mean(F6$x5growstart)-F6$x5growstart)/F6$x5growstart)*F6$errorx5grow)+F6$errorx5grow)*5#
#convert radial growth from cm to mm#
#F6$x5grow <- F6$x5grow*5 #*10#
#F6$errorx5grow <- F6$errorx5grow*5 #*10#
#convert to percent difference#
F6$sapMORTpct <-  (F6$sapMORTpct-100)#
F6$sapRECRpct <-  (F6$sapRECRpct-100)#
F6$sapCpct <-  ((F6$y3-F6$y5)/F6$y3)*100#
#calc plot y-scales#
sapscale  <-  30 #mean(F6$sapTPA3start)/mean(F6$TPA3start) #
Cymax  <-  max(F6$y3+F6$errory3)#
Cymin  <-  min(F6$y3-F6$errory3)#
#TPAymax <- max(F6$sapTPA/sapscale+F6$errorsapTPA/sapscale, na.rm=T)#
TPAymax1 <- (max(F6$sapTPA+F6$errorsapTPA))/sapscale#
TPAymax2 <- (max(F6$TPA+F6$errorTPA))#
TPAymax <- max(TPAymax1, TPAymax2)#
TPAymin2 <- (min(F6$TPA-F6$errorTPA))#
TPAymin1 <- (min(F6$sapTPA-F6$errorsapTPA))/sapscale#
TPAymin <- min(TPAymin1, TPAymin2)#
DIAmax1 <- (max(F6$x5grow+F6$errorx5grow))#
DIAmin1 <- (min(F6$x5grow-F6$errorx5grow))#
DIAmax2 <- max(F6$x5+F6$errorx5)#
DIAmin2 <- min(F6$x5-F6$errorx5)#
DIAmin <- min(DIAmin2, DIAmin1)#
DIAmax <- max(DIAmax2, DIAmax1)#
sapmax <- max(F6$sapMORTpct+F6$enderrorsapMORT)#
sapmin <- min(F6$sapMORTpct-F6$enderrorsapMORT)#
#
#plot only sapling data that is significantly different with scaling than larger trees. #
#F6$sapTPA <- ifelse(((F6$sapTPA/sapscale)>(F6$TPA+F6$errorTPA))|((F6$sapTPA/sapscale)<(F6$TPA-F6$errorTPA)), F6$sapTPA, NA)#
#F6$x5grow <- ifelse(((F6$x5grow-F6$errorx5grow)>(F6$x5))|((F6$x5grow)<(F6$x5-F6$errorx5)), F6$x5grow, NA)#
#
#set up 5-year precip plots using ggplot#
F7 <- subset(F6, v==1)#
F7$sapTPA <- ifelse(F7$col3==2,NA, F7$sapTPA)#
v=1#
col4 <- c(dt,"grey35", pt)#
#
#NPP plot#
#limitssap <- aes(ymax=(y5/y5scale +errorsapTPA/sapscale)+TPA3start1, ymin=(sapTPA/sapscale-errorsapTPA/sapscale)+TPA3start1)#
limits <- aes(ymax=(y3+errory3)+y3start1, ymin=(y3-errory3+y3start1))#
P1 <- ggplot(F7, aes(x=x3, y=(y3+y3start1), fill=as.factor(col3)))  +geom_hline(y=y3start1, linetype=3) +geom_vline(linetype=3)+ geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21)  + theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_text(angle = 90, hjust = 0.5, size=11, colour="black"))+ theme(axis.text.x = element_blank())+ scale_y_continuous(name=expression(paste(" Productivity (Mg C ha"^"-1","yr" ^"-1",")")), limits=c(Cymin, Cymax)+y3start1, breaks=c(round(y3start1, 1)-0.5,  round(y3start1, 3),  round(y3start1, 1)+0.3,  round(y3start1, 1)+0.6), labels=c(round(y3start1, 1)-0.5, round(y3start1, 1), round(y3start1, 1)+0.3, round(y3start1, 1)+0.6)) + scale_x_continuous(element_blank(), breaks=c(-0.5, 0, 0.5)) + theme(legend.title=element_blank(), legend.key=element_blank()) +scale_fill_manual( name=NULL, breaks=c("1", "3"), label=element_blank(), values=c(col4))  + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) #+coord_cartesian(ylim = c(0.7, 2.65))#
#Stem density plot#
limits <- aes(ymax=(TPA+errorTPA)+TPA3start1, ymin=(TPA-errorTPA)+TPA3start1)#
limitssap <- aes(ymax=(sapTPA/sapscale +errorsapTPA/sapscale)+TPA3start1, ymin=(sapTPA/sapscale-errorsapTPA/sapscale)+TPA3start1)#
P2 <- ggplot(F7, aes(x=x3, y=(TPA+TPA3start1), fill=as.factor(col3)))  +geom_hline(y=TPA3start1, linetype=3) +geom_vline(linetype=3) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(-0.07, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_text(angle = 90, hjust = 0.5, size=11, colour="black"))+ theme(axis.text.x = element_blank())+ scale_y_continuous(name=expression(paste(Delta, " Stem density (ha"^"-1","yr" ^"-1",")")), limits=c(TPAymin, TPAymax)+TPA3start1, breaks=c(2.0, TPA3start1, 8.0), labels=c(expression("2.0"[" (-35)"]), expression("4.6" [" (43)"]), expression("8.0" [" (145)"]))) + scale_x_continuous(element_blank(), breaks=c(-0.5, 0, 0.5)) +scale_fill_manual(values=c(col4), breaks=NULL) +geom_errorbar(limitssap, width=0.05, colour="grey70") + geom_point(aes( y=(sapTPA/sapscale)+ TPA3start1, col=as.factor(col3)), size=2, pch=8)+ theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.1),plot.margin=unit(c(0,0,0.65,0), "cm")) +scale_colour_manual(values=c(col9), name=NULL, breaks=c("2"), label=c("(Saplings)"))+ geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) #+coord_cartesian(ylim = c(1.8, 9.85))#
#Radial growth plot#
limits <- aes(ymax=(x5+errorx5)+x5start1, ymin=(x5-errorx5)+x5start1)#
limits2 <- aes(ymax=(x5grow+errorx5grow)+ x5start1, ymin=(x5grow-errorx5grow)+ x5start1)#
P3 <- ggplot(F7, aes(x=x3, y=(x5+x5start1), fill=as.factor(col3)))  +geom_hline(y=x5start1, linetype=3) +geom_vline(linetype=3)  +theme(axis.line = element_line( size = 0.35)) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm"))  + theme(axis.ticks.margin = unit(-0.03, "cm")) + theme(axis.ticks.length = unit(0.1, "cm"))  +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_text(angle = 90, hjust = 0.5, size=11, colour="black"))+ theme(axis.text.x = element_text( hjust = 0.5, size=11, colour="black")) + scale_y_continuous(name=expression(paste(Delta, " Mean diameter (cm yr" ^"-1",")")), limits=c(DIAmin, DIAmax)+x5start1, breaks=c(0.07, x5start1, 0.17), labels=c(expression("0.07"[" (0.55)"]), expression("0.11" [" (0.63)"]), expression("0.17" [" (0.75)"]))) + scale_x_continuous(name=expression(paste("   Precipitation JJA 5-yr\nmean anomaly (mm day"^"-1",")")), breaks=c(-0.5, 0, 0.5)) +scale_fill_manual(values=c(col4), breaks=NULL)  + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.55,0.1), plot.margin=unit(c(-0.5,0,0.34, -0.04), "cm")) + theme(axis.title.x = element_text(vjust=-0.85)) + geom_errorbar(limits2, width=0.05, colour="grey70") + geom_point(aes(y=(x5grow+ x5start1), col=as.factor(col3)), size=2.5, pch=17)  +scale_colour_manual(values=c(col4), name=NULL, breaks=c("2"), label=expression(paste("(Radial growth mm yr" ^"-1",")"))) + geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21)#
#set up 5-year TEMP plots using ggplot#
F8 <- subset(F6, v==2) # & x3>0.2)#
v=2#
col8 <- c(ct,"grey35", wt)#
#NPP plot#
limits <- aes(ymax=(y3+errory3)+y3start1, ymin=(y3-errory3+y3start1))#
T1 <- ggplot(F8, aes(x=x3, y=(y3+y3start1), fill=as.factor(col3)))  +geom_hline(y=y3start1, linetype=3)+geom_vline(linetype=3)+ geom_errorbar(limits, width=0.01, colour="grey50")+ geom_point(colour="grey25", size=2.5, pch=21) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_blank())+ theme(axis.text.x =element_blank())+ scale_y_continuous(element_blank(), limits=c(Cymin, Cymax)+y3start1,  breaks=c(round(y3start1, 1)-0.5,  round(y3start1, 3),  round(y3start1, 1)+0.3,  round(y3start1, 1)+0.6)) + scale_x_continuous(element_blank(),breaks=c(-0.5, 0, 0.5, 1.0))+ theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.9),plot.margin=unit(c(0,0,0,0), "cm")) +scale_fill_manual( name=NULL, breaks=c("1", "3"), label=c("Cool 5-yr period", "Warm 5-yr period"), values=c(col8)) +theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) #+coord_cartesian(ylim = c(0.7, 2.65))#
#
#stem density#
limits <- aes(ymax=(TPA+errorTPA)+TPA3start1, ymin=(TPA-errorTPA)+TPA3start1)#
T2 <- ggplot(F8,aes(x=x3, y=(TPA+TPA3start1), fill=as.factor(col3)))    +geom_hline(y=TPA3start1, linetype=3) +geom_vline(linetype=3) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm"))  + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_blank())+ theme(axis.text.x =(element_blank())) + scale_y_continuous(element_blank(), limits=c(TPAymin, TPAymax)+TPA3start1, breaks=c(2.0, TPA3start1, 8.0)) + scale_x_continuous(element_blank())  +scale_fill_manual(values=c(col8), breaks=NULL) +geom_errorbar(limitssap, width=0.05, colour="grey70") + geom_point(aes( y=(sapTPA/sapscale)+ TPA3start1, col=as.factor(col3)), size=2, pch=8) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.1),plot.margin=unit(c(0,0,0.5,0), "cm")) +scale_colour_manual(values=c(col8), name=NULL, breaks=c("2"), label=c("(Saplings)"))+ geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) #+coord_cartesian(ylim = c(1.8, 9.85)) #
#
#Radial growth plot#
limits <- aes(ymax=(x5+errorx5)+x5start1, ymin=(x5-errorx5)+x5start1)#
limits2 <- aes(ymax=(x5grow+errorx5grow)+ x5start1, ymin=(x5grow-errorx5grow)+ x5start1)#
T3 <- ggplot(F8, aes(x=x3, y=(x5+x5start1), fill=as.factor(col3))) + geom_hline(y=x5start1, linetype=3) +geom_vline(linetype=3)  +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y =element_blank())+ theme(axis.text.x = element_text( hjust = 0.5, size=11, colour="black")) + scale_y_continuous(element_blank(), limits=c(DIAmin, DIAmax)+x5start1,breaks=c(0.02, x5start1, 0.2)) + scale_x_continuous(name=("Temperature JJA 5-yr\nmean anomaly (C)")) +scale_fill_manual(values=c(col8), breaks=NULL) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.43,0.1), plot.margin=unit(c(-0.5,0,0, 0), "cm"))+ geom_errorbar(limits2, width=0.05, colour="grey70") + geom_point(aes( y=(x5grow+ x5start1), col=as.factor(col3)), size=2.5, pch=17)  +scale_colour_manual(values=c(col8), name=NULL, breaks=c("2"), label=expression(paste("(Radial growth mm yr" ^"-1",")"))) + geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) #
#set up 1-year soil moist. plots using ggplot#
F9 <- subset(F6, v==3)#
v=3#
col9 <- c(de,"grey35", pe)#
limits <- aes(ymax=(y3+errory3)+y3start1, ymin=(y3-errory3+y3start1))#
#NPP plot#
R1 <- ggplot(F9,aes(x=x3, y=(y3+y3start1), fill=as.factor(col3))) +geom_hline(y=y3start1, linetype=3) +geom_vline(linetype=3)+ geom_errorbar(limits, width=0.01, colour="grey50")+ geom_point(colour="grey25", size=2.5, pch=21) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_blank())+ theme(axis.text.x =(element_blank())) + scale_y_continuous(element_blank(), limits=c(Cymin, Cymax)+y3start1,  breaks=c(round(y3start1, 1)-0.5,  round(y3start1, 3),  round(y3start1, 1)+0.3,  round(y3start1, 1)+0.6)) + scale_x_continuous(element_blank()) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.9),plot.margin=unit(c(0,0,0,0), "cm")) +scale_fill_manual( name=NULL, breaks=c("1", "3"), label=c( "Dry summer", "Wet summer"), values=c(col9)) +theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) #+coord_cartesian(ylim = c(0.7, 2.65))#
#
#Stem density plot#
limits <- aes(ymax=(TPA+errorTPA)+TPA3start1, ymin=(TPA-errorTPA)+TPA3start1)#
limitssap <- aes(ymax=(sapTPA/sapscale +errorsapTPA/sapscale)+TPA3start1, ymin=(sapTPA/sapscale-errorsapTPA/sapscale)+TPA3start1)#
R2 <- ggplot(F9,aes(x=x3, y=(TPA+TPA3start1), fill=as.factor(col3)))   +geom_hline(y=TPA3start1, linetype=3) +geom_vline(linetype=3)+theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_blank())+ theme(axis.text.x =(element_blank()))+ scale_y_continuous(element_blank(), limits=c(TPAymin, TPAymax)+TPA3start1, breaks=c(2.0, TPA3start1, 8.0)) + scale_x_continuous(element_blank()) +scale_fill_manual(values=c(col9), breaks=NULL) +geom_errorbar(limitssap, width=0.10, colour="grey70") + geom_point(aes( y=(sapTPA/sapscale)+ TPA3start1, col=as.factor(col3)), size=2, pch=8) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.1), plot.margin=unit(c(0,0,0.5,0), "cm")) +scale_colour_manual(values=c(col9), name=NULL, breaks=c("2"), label=c("(Saplings)"))+ geom_errorbar(limits, width= 0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) #+coord_cartesian(ylim = c(1.8, 9.85))#
#
#radial growth plot#
limits <- aes(ymax=(x5+errorx5)+x5start1, ymin=(x5-errorx5)+x5start1)#
limits2 <- aes(ymax=(x5grow+errorx5grow)+ x5start1, ymin=(x5grow-errorx5grow)+ x5start1)#
R3 <- ggplot(F9, aes(x=x3, y=(x5+x5start1), fill=as.factor(col3)))   +geom_hline(y=x5start1, linetype=3) +geom_vline(linetype=3) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_blank())+ theme(axis.text.x = element_text( hjust = 0.5, size=11, colour="black")) + scale_y_continuous(element_blank(), limits=c(DIAmin, DIAmax)+x5start1, breaks=c(0.02, x5start1, 0.2)) + scale_x_continuous(name=("Soil moisture JJA 1-yr\nmin/max (z-score)"), breaks=c(-2.0, -1.0, 0.0, 1.0), labels=c("-2.0", "-1.0", "0.0", "1.0")) +scale_fill_manual(values=c(col9), breaks=NULL) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.53,0.1), plot.margin=unit(c(-0.5,0,0, 0), "cm")) + geom_errorbar(limits2, width=0.10, colour="grey70")+ geom_point(aes( y=(x5grow+ x5start1), col=as.factor(col3)), size=2.5, pch=17)  +scale_colour_manual(values=c(col9), name=NULL, breaks=c("2"), label=expression(paste("(Radial growth mm yr" ^"-1",")"))) + geom_errorbar(limits, width=0.01, colour="grey50")  + geom_point(colour="grey25", size=2.5, pch=21)#
#
#set up plot window and plot all together#
dev.new(width=6.75, height=8) #8#
grid.arrange(P1,T1,R1,P2,T2,R2,P3,T3,R3, ncol=3)#
#grid.text(0.045, unit(0.575,"npc") - unit(1,"line"), rot=90, label="(30)", gp=gpar(cex=0.75))#
#
#######END Fig 3.  Climate Correlations
F6 <- subset(F6, n>100) #
#
y3start1 <- mean(F6$y3start)#
y5start1 <- mean(F6$y5start)#
TPA3start1 <-mean(F6$TPA3start) #mean(F2$TPAchg) ##
sapTPA3start1 <-mean(F6$sapTPA3start)#
x5start1 <- mean((F6$x5start))#
x5growstart1 <- mean((F6$x5growstart)*5) #*10)#
#
#convert difference btw ac and nonac to relative difference from average#
F6$y3<- y3start1*(F6$y3pctdif/100)#
F6$TPA<- TPA3start1*(F6$TPA3pctdif/100)#
F6$sapTPA<- sapTPA3start1*(F6$sapTPA3pctdif/100)#
F6$x5<- x5start1*(F6$x5pctdif/100)#
F6$x5grow<- x5growstart1*(F6$x5growpctdif/100)#
#
F6$errory3<-(((y3start1-F6$y3start)/F6$y3start)*F6$errory3)+F6$errory3#
F6$errory5<-(((y5start1-F6$y5start)/F6$y5start)*F6$errory5)+F6$errory5#
F6$errorTPA<-(((TPA3start1-F6$TPA3start)/F6$TPA3start)*F6$errorTPA)+F6$errorTPA#
F6$errorsapTPA<-(((sapTPA3start1-F6$sapTPA3start)/F6$sapTPA3start)*F6$errorsapTPA)+F6$errorsapTPA#
F6$errorx5<-(((x5start1-F6$x5start)/F6$x5start)*F6$errorx5)+F6$errorx5#
F6$errorx5grow<-((((mean(F6$x5growstart)-F6$x5growstart)/F6$x5growstart)*F6$errorx5grow)+F6$errorx5grow)*5#
#convert radial growth from cm to mm#
#F6$x5grow <- F6$x5grow*5 #*10#
#F6$errorx5grow <- F6$errorx5grow*5 #*10#
#convert to percent difference#
F6$sapMORTpct <-  (F6$sapMORTpct-100)#
F6$sapRECRpct <-  (F6$sapRECRpct-100)#
F6$sapCpct <-  ((F6$y3-F6$y5)/F6$y3)*100#
#calc plot y-scales#
sapscale  <-  30 #mean(F6$sapTPA3start)/mean(F6$TPA3start) #
Cymax  <-  max(F6$y3+F6$errory3)#
Cymin  <-  min(F6$y3-F6$errory3)#
#TPAymax <- max(F6$sapTPA/sapscale+F6$errorsapTPA/sapscale, na.rm=T)#
TPAymax1 <- (max(F6$sapTPA+F6$errorsapTPA))/sapscale#
TPAymax2 <- (max(F6$TPA+F6$errorTPA))#
TPAymax <- max(TPAymax1, TPAymax2)#
TPAymin2 <- (min(F6$TPA-F6$errorTPA))#
TPAymin1 <- (min(F6$sapTPA-F6$errorsapTPA))/sapscale#
TPAymin <- min(TPAymin1, TPAymin2)#
DIAmax1 <- (max(F6$x5grow+F6$errorx5grow))#
DIAmin1 <- (min(F6$x5grow-F6$errorx5grow))#
DIAmax2 <- max(F6$x5+F6$errorx5)#
DIAmin2 <- min(F6$x5-F6$errorx5)#
DIAmin <- min(DIAmin2, DIAmin1)#
DIAmax <- max(DIAmax2, DIAmax1)#
sapmax <- max(F6$sapMORTpct+F6$enderrorsapMORT)#
sapmin <- min(F6$sapMORTpct-F6$enderrorsapMORT)#
#
#plot only sapling data that is significantly different with scaling than larger trees. #
#F6$sapTPA <- ifelse(((F6$sapTPA/sapscale)>(F6$TPA+F6$errorTPA))|((F6$sapTPA/sapscale)<(F6$TPA-F6$errorTPA)), F6$sapTPA, NA)#
#F6$x5grow <- ifelse(((F6$x5grow-F6$errorx5grow)>(F6$x5))|((F6$x5grow)<(F6$x5-F6$errorx5)), F6$x5grow, NA)#
#
#set up 5-year precip plots using ggplot#
F7 <- subset(F6, v==1)#
F7$sapTPA <- ifelse(F7$col3==2,NA, F7$sapTPA)#
v=1#
col4 <- c(dt,"grey35", pt)#
#
#NPP plot#
#limitssap <- aes(ymax=(y5/y5scale +errorsapTPA/sapscale)+TPA3start1, ymin=(sapTPA/sapscale-errorsapTPA/sapscale)+TPA3start1)#
limits <- aes(ymax=(y3+errory3)+y3start1, ymin=(y3-errory3+y3start1))#
P1 <- ggplot(F7, aes(x=x3, y=(y3+y3start1), fill=as.factor(col3)))  +geom_hline(y=y3start1, linetype=3) +geom_vline(linetype=3)+ geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21)  + theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_text(angle = 90, hjust = 0.5, size=11, colour="black"))+ theme(axis.text.x = element_blank())+ scale_y_continuous(name=expression(paste(" Productivity (Mg C ha"^"-1","yr" ^"-1",")")), limits=c(Cymin, Cymax)+y3start1, breaks=c(round(y3start1, 1)-0.5,  round(y3start1, 3),  round(y3start1, 1)+0.3,  round(y3start1, 1)+0.6), labels=c(round(y3start1, 1)-0.5, round(y3start1, 1), round(y3start1, 1)+0.3, round(y3start1, 1)+0.6)) + scale_x_continuous(element_blank(), breaks=c(-0.5, 0, 0.5)) + theme(legend.title=element_blank(), legend.key=element_blank()) +scale_fill_manual( name=NULL, breaks=c("1", "3"), label=element_blank(), values=c(col4))  + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) #+coord_cartesian(ylim = c(0.7, 2.65))#
#Stem density plot#
limits <- aes(ymax=(TPA+errorTPA)+TPA3start1, ymin=(TPA-errorTPA)+TPA3start1)#
limitssap <- aes(ymax=(sapTPA/sapscale +errorsapTPA/sapscale)+TPA3start1, ymin=(sapTPA/sapscale-errorsapTPA/sapscale)+TPA3start1)#
P2 <- ggplot(F7, aes(x=x3, y=(TPA+TPA3start1), fill=as.factor(col3)))  +geom_hline(y=TPA3start1, linetype=3) +geom_vline(linetype=3) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(-0.07, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_text(angle = 90, hjust = 0.5, size=11, colour="black"))+ theme(axis.text.x = element_blank())+ scale_y_continuous(name=expression(paste(Delta, " Stem density (ha"^"-1","yr" ^"-1",")")), limits=c(TPAymin, TPAymax)+TPA3start1, breaks=c(2.0, TPA3start1, 8.0), labels=c(expression("2.0"[" (-35)"]), expression("4.6" [" (43)"]), expression("8.0" [" (145)"]))) + scale_x_continuous(element_blank(), breaks=c(-0.5, 0, 0.5)) +scale_fill_manual(values=c(col4), breaks=NULL) +geom_errorbar(limitssap, width=0.05, colour="grey70") + geom_point(aes( y=(sapTPA/sapscale)+ TPA3start1, col=as.factor(col3)), size=2, pch=8)+ theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.1),plot.margin=unit(c(0,0,0.65,0), "cm")) +scale_colour_manual(values=c(col9), name=NULL, breaks=c("2"), label=c("(Saplings)"))+ geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) #+coord_cartesian(ylim = c(1.8, 9.85))#
#Radial growth plot#
limits <- aes(ymax=(x5+errorx5)+x5start1, ymin=(x5-errorx5)+x5start1)#
limits2 <- aes(ymax=(x5grow+errorx5grow)+ x5start1, ymin=(x5grow-errorx5grow)+ x5start1)#
P3 <- ggplot(F7, aes(x=x3, y=(x5+x5start1), fill=as.factor(col3)))  +geom_hline(y=x5start1, linetype=3) +geom_vline(linetype=3)  +theme(axis.line = element_line( size = 0.35)) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm"))  + theme(axis.ticks.margin = unit(-0.03, "cm")) + theme(axis.ticks.length = unit(0.1, "cm"))  +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_text(angle = 90, hjust = 0.5, size=11, colour="black"))+ theme(axis.text.x = element_text( hjust = 0.5, size=11, colour="black")) + scale_y_continuous(name=expression(paste(Delta, " Mean diameter (cm yr" ^"-1",")")), limits=c(DIAmin, DIAmax)+x5start1, breaks=c(0.07, x5start1, 0.17), labels=c(expression("0.07"[" (0.55)"]), expression("0.11" [" (0.63)"]), expression("0.17" [" (0.75)"]))) + scale_x_continuous(name=expression(paste("   Precipitation JJA 5-yr\nmean anomaly (mm day"^"-1",")")), breaks=c(-0.5, 0, 0.5)) +scale_fill_manual(values=c(col4), breaks=NULL)  + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.55,0.1), plot.margin=unit(c(-0.5,0,0.34, -0.04), "cm")) + theme(axis.title.x = element_text(vjust=-0.85)) + geom_errorbar(limits2, width=0.05, colour="grey70") + geom_point(aes(y=(x5grow+ x5start1), col=as.factor(col3)), size=2.5, pch=17)  +scale_colour_manual(values=c(col4), name=NULL, breaks=c("2"), label=expression(paste("(Radial growth mm yr" ^"-1",")"))) + geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21)#
#set up 5-year TEMP plots using ggplot#
F8 <- subset(F6, v==2) # & x3>0.2)#
v=2#
col8 <- c(ct,"grey35", wt)#
#NPP plot#
limits <- aes(ymax=(y3+errory3)+y3start1, ymin=(y3-errory3+y3start1))#
T1 <- ggplot(F8, aes(x=x3, y=(y3+y3start1), fill=as.factor(col3)))  +geom_hline(y=y3start1, linetype=3)+geom_vline(linetype=3)+ geom_errorbar(limits, width=0.01, colour="grey50")+ geom_point(colour="grey25", size=2.5, pch=21) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_blank())+ theme(axis.text.x =element_blank())+ scale_y_continuous(element_blank(), limits=c(Cymin, Cymax)+y3start1,  breaks=c(round(y3start1, 1)-0.5,  round(y3start1, 3),  round(y3start1, 1)+0.3,  round(y3start1, 1)+0.6)) + scale_x_continuous(element_blank(),breaks=c(-0.5, 0, 0.5, 1.0))+ theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.9),plot.margin=unit(c(0,0,0,0), "cm")) +scale_fill_manual( name=NULL, breaks=c("1", "3"), label=c("Cool 5-yr period", "Warm 5-yr period"), values=c(col8)) +theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) #+coord_cartesian(ylim = c(0.7, 2.65))#
#
#stem density#
limits <- aes(ymax=(TPA+errorTPA)+TPA3start1, ymin=(TPA-errorTPA)+TPA3start1)#
T2 <- ggplot(F8,aes(x=x3, y=(TPA+TPA3start1), fill=as.factor(col3)))    +geom_hline(y=TPA3start1, linetype=3) +geom_vline(linetype=3) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm"))  + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_blank())+ theme(axis.text.x =(element_blank())) + scale_y_continuous(element_blank(), limits=c(TPAymin, TPAymax)+TPA3start1, breaks=c(2.0, TPA3start1, 8.0)) + scale_x_continuous(element_blank())  +scale_fill_manual(values=c(col8), breaks=NULL) +geom_errorbar(limitssap, width=0.05, colour="grey70") + geom_point(aes( y=(sapTPA/sapscale)+ TPA3start1, col=as.factor(col3)), size=2, pch=8) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.1),plot.margin=unit(c(0,0,0.5,0), "cm")) +scale_colour_manual(values=c(col8), name=NULL, breaks=c("2"), label=c("(Saplings)"))+ geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) #+coord_cartesian(ylim = c(1.8, 9.85)) #
#
#Radial growth plot#
limits <- aes(ymax=(x5+errorx5)+x5start1, ymin=(x5-errorx5)+x5start1)#
limits2 <- aes(ymax=(x5grow+errorx5grow)+ x5start1, ymin=(x5grow-errorx5grow)+ x5start1)#
T3 <- ggplot(F8, aes(x=x3, y=(x5+x5start1), fill=as.factor(col3))) + geom_hline(y=x5start1, linetype=3) +geom_vline(linetype=3)  +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y =element_blank())+ theme(axis.text.x = element_text( hjust = 0.5, size=11, colour="black")) + scale_y_continuous(element_blank(), limits=c(DIAmin, DIAmax)+x5start1,breaks=c(0.02, x5start1, 0.2)) + scale_x_continuous(name=("Temperature JJA 5-yr\nmean anomaly (C)")) +scale_fill_manual(values=c(col8), breaks=NULL) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.43,0.1), plot.margin=unit(c(-0.5,0,0, 0), "cm"))+ geom_errorbar(limits2, width=0.05, colour="grey70") + geom_point(aes( y=(x5grow+ x5start1), col=as.factor(col3)), size=2.5, pch=17)  +scale_colour_manual(values=c(col8), name=NULL, breaks=c("2"), label=expression(paste("(Radial growth mm yr" ^"-1",")"))) + geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) #
#set up 1-year soil moist. plots using ggplot#
F9 <- subset(F6, v==3)#
v=3#
col9 <- c(de,"grey35", pe)#
limits <- aes(ymax=(y3+errory3)+y3start1, ymin=(y3-errory3+y3start1))#
#NPP plot#
R1 <- ggplot(F9,aes(x=x3, y=(y3+y3start1), fill=as.factor(col3))) +geom_hline(y=y3start1, linetype=3) +geom_vline(linetype=3)+ geom_errorbar(limits, width=0.01, colour="grey50")+ geom_point(colour="grey25", size=2.5, pch=21) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_blank())+ theme(axis.text.x =(element_blank())) + scale_y_continuous(element_blank(), limits=c(Cymin, Cymax)+y3start1,  breaks=c(round(y3start1, 1)-0.5,  round(y3start1, 3),  round(y3start1, 1)+0.3,  round(y3start1, 1)+0.6)) + scale_x_continuous(element_blank()) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.9),plot.margin=unit(c(0,0,0,0), "cm")) +scale_fill_manual( name=NULL, breaks=c("1", "3"), label=c( "Dry summer", "Wet summer"), values=c(col9)) +theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) #+coord_cartesian(ylim = c(0.7, 2.65))#
#
#Stem density plot#
limits <- aes(ymax=(TPA+errorTPA)+TPA3start1, ymin=(TPA-errorTPA)+TPA3start1)#
limitssap <- aes(ymax=(sapTPA/sapscale +errorsapTPA/sapscale)+TPA3start1, ymin=(sapTPA/sapscale-errorsapTPA/sapscale)+TPA3start1)#
R2 <- ggplot(F9,aes(x=x3, y=(TPA+TPA3start1), fill=as.factor(col3)))   +geom_hline(y=TPA3start1, linetype=3) +geom_vline(linetype=3)+theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_blank())+ theme(axis.text.x =(element_blank()))+ scale_y_continuous(element_blank(), limits=c(TPAymin, TPAymax)+TPA3start1, breaks=c(2.0, TPA3start1, 8.0)) + scale_x_continuous(element_blank()) +scale_fill_manual(values=c(col9), breaks=NULL) +geom_errorbar(limitssap, width=0.10, colour="grey70") + geom_point(aes( y=(sapTPA/sapscale)+ TPA3start1, col=as.factor(col3)), size=2, pch=8) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.1), plot.margin=unit(c(0,0,0.5,0), "cm")) +scale_colour_manual(values=c(col9), name=NULL, breaks=c("2"), label=c("(Saplings)"))+ geom_errorbar(limits, width= 0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) #+coord_cartesian(ylim = c(1.8, 9.85))#
#
#radial growth plot#
limits <- aes(ymax=(x5+errorx5)+x5start1, ymin=(x5-errorx5)+x5start1)#
limits2 <- aes(ymax=(x5grow+errorx5grow)+ x5start1, ymin=(x5grow-errorx5grow)+ x5start1)#
R3 <- ggplot(F9, aes(x=x3, y=(x5+x5start1), fill=as.factor(col3)))   +geom_hline(y=x5start1, linetype=3) +geom_vline(linetype=3) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_blank())+ theme(axis.text.x = element_text( hjust = 0.5, size=11, colour="black")) + scale_y_continuous(element_blank(), limits=c(DIAmin, DIAmax)+x5start1, breaks=c(0.02, x5start1, 0.2)) + scale_x_continuous(name=("Soil moisture JJA 1-yr\nmin/max (z-score)"), breaks=c(-2.0, -1.0, 0.0, 1.0), labels=c("-2.0", "-1.0", "0.0", "1.0")) +scale_fill_manual(values=c(col9), breaks=NULL) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.53,0.1), plot.margin=unit(c(-0.5,0,0, 0), "cm")) + geom_errorbar(limits2, width=0.10, colour="grey70")+ geom_point(aes( y=(x5grow+ x5start1), col=as.factor(col3)), size=2.5, pch=17)  +scale_colour_manual(values=c(col9), name=NULL, breaks=c("2"), label=expression(paste("(Radial growth mm yr" ^"-1",")"))) + geom_errorbar(limits, width=0.01, colour="grey50")  + geom_point(colour="grey25", size=2.5, pch=21)#
#
#set up plot window and plot all together#
dev.new(width=6.75, height=8) #8#
grid.arrange(P1,T1,R1,P2,T2,R2,P3,T3,R3, ncol=3)#
#grid.text(0.045, unit(0.575,"npc") - unit(1,"line"), rot=90, label="(30)", gp=gpar(cex=0.75))#
#
#######END Fig 3.  Climate Correlations
F6
print(F6)
print(F7)
F8
print(c(table(f22$nsamp<0.75), col3))
ccond
F33
max(c(5,5,5,6,6,6))
minx3<-min(f22$x3)
setnames(F6, c("x3","y3","y5", "TPA","sapTPA", "x5", "x5grow", "errory3","errory5", "errorTPA","errorsapTPA", "errorx5","errorx5grow", "n", "v", "col3", "y3start", "y5start", "TPA3start", "x5start", "sapTPA3start", "x5growstart", "sapMORTpct", "sapRECRpct", "enderrorsapMORT", "enderrorsapRECR", "y3pctdif", "y5pctdif", "TPA3pctdif", "sapTPA3pctdif", "x5pctdif", "x5growpctdif", "minx3", "maxx3"))
vari <- c("PREC5growchg", "TEMP5growchg", "SWpluvial5chg", "SWdrought5chg") #"PREC5growchg", "TEMP5growchg"#
vari1 <- subset(F2, select=c(PREC5growchg, TEMP5growchg, SWpluvial5chg, SWdrought5chg))#
vari2 <- c("5-yr JJA precip. anomaly (mm/day)", "5-yr JJA temp. anomaly (C)", "1-yr JJA soil moist. anomaly (z-score)", "1-yr JJA soil moist. anomaly (z-score)")#
#
seq1<- c(0.2, 0.4, NA, 0.66, 0.86, 0.96, 1, NA)#
#
if(coniferous==1 | deciduous==1){seq1<- c(0.2, 0.4, NA, 0.5, 0.75, 0.9, 1)} #broader quantiles for smaller dataset#
#(100-(c(0.2, 0.4, NA, 0.5, 0.75, 0.9, 1)*100))/2#
#
qt1a <- c(quantile(F2$PREC5growchg[F2$PREC5growchg<0],(1-rev(seq1))))  #
 qt2a <- c(quantile(F2$PREC5growchg[F2$PREC5growchg>0], seq1)) #
 qt1b <- c(quantile(F2$TEMP5growchg[F2$TEMP5growchg<0],(1-rev(seq1)))) #
 qt2b <- c(quantile(F2$TEMP5growchg[F2$TEMP5growchg>0], seq1))  #
 qt3 <- c(quantile(F2$SWdrought5chg[F2$SWdrought5chg<0],(1-rev(seq1)))) #
 qt4 <- c(quantile(F2$SWpluvial5chg[F2$SWpluvial5chg>0], seq1)) #
int <- 1#
F5 <- NULL#
for(v in 1:3)#
{#
	if(v==1){#
		 qt1<- qt1a#
		 qt2<- qt2a#
	}#
	if(v==2){#
		 qt1<- qt1b#
		 qt2<- qt2b#
	}#
F4<-foreach(c = 1:16, .combine=rbind) %dopar%#
{#
	if(c<=8 & v<3)#
	{#
		f22 <- subset(F2, get(vari[v])>= qt2[c] & get(vari[v])<=  qt2[c+int]) 		#
		f23 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- vari[v]#
		col3=ifelse(qt2[c]>= 0.2, 3, 2)#
		qta <- qt2[c]#
		qtb <- qt2[c+int]#
		}#
	if(c>8 & v<3)#
	{ #
		d=c-8#
		f22 <- subset(F2, get(vari[v])<= qt1[d] & get(vari[v])>= qt1[d-int]) #		#
		f23 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- vari[v]#
		col3=ifelse(qt1[d]<= -0.1, 1, 2)#
		qtb <- qt1[d]#
		qta <- qt1[d-int]#
	}#
	if(c<=8 & v==3)#
	{#
			f22 <- subset(F2, get(vari[v])>= qt4[c] & get(vari[v])<= qt4[c+int] & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.15, na.rm=TRUE)) #exclude droughts#
			f23 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.15, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- "Wet summer"#
		col3=ifelse(qt4[c]>=0.2, 3, 2)#
		qta <- qt4[c]#
		qtb <- qt4[c+int]#
	}#
	if(c>8 & v==3)#
	{ #
		d=c-8#
		f22 <- subset(F2, get(vari[v+1])< qt3[d] & get(vari[v+1])>= qt3[d-int] & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.85, na.rm=TRUE)) #exclude wet summers  #
		f23 <- subset(F2, get(vari[v+1])<= quantile(vari1[[v+1]], 0.7, na.rm=TRUE) & get(vari[v+1])>= quantile(vari1[[v+1]], 0.3, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.85, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- "Dry summer"#
		col3=ifelse(qt3[d]<= -0.2, 1, 2)#
		qtb <- qt3[d]#
		qta <- qt3[d-int]#
	}#
f22$nsamp <- (ave(f22$PREV_DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #sample proportion of each grid cell #
#print(c(table(f22$nsamp<0.75), col3))#
#
#f22$col3 <- col3#
PLT_CNsamp1 <- f23$PLT_CN   #
#
f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, nsamp))#
#
F33 <- subset(F2, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
F33 <- merge(F33, f24, all.x=T, by="LATLON")#
F33 <- subset(F33, PLT_CN %in% (PLT_CNsamp1)) # not neccesaary bc weighting will eliminate latlons not in f22!#
#
F33$aPREVSTOCKDIAbin <- floor(F33$PREV_STOCKINGmid/10)*10000+(floor(F33$PREV_DIAmean/2)*2)#
F33$n1 <- 1#
F33$aPREVSTOCKDIAbinlength <- ave(F33$n1, F33$aPREVSTOCKDIAbin, FUN=function(x) sum(x, na.rm=TRUE))#
F33$nbin <- ave(F33$nsamp, F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)) #average AC proportion in stock/dia bins#
#
F33 <- subset(F33, aPREVSTOCKDIAbinlength> 10) #Null model needs at least 10 comparison plots at each diameter/stocking bin#
#
##Carbon Model#
c6 <- (((F33$carbon1sum-F33$PREVcarbon1sum)* 0.00112085116 )/F33$REMPER)#
F33$avgCchg <- (ave(c6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)))/F33$nbin #multiply by AC proportion divided by mean proportion in each stocking/dia bin#
#
##Carbon Model 5 inch and greater trees#
c5 <- (((F33$carbon5sum-F33$PREVcarbon5sum)* 0.00112085116 )/F33$REMPER)#
F33$avgC5chg <- (ave(c5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)))/F33$nbin#
#
##radial growth  #
rx5 <- (F33$DIAchgmean/F33$REMPER) ###
F33$avgx5 <- ave(rx5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##radial growth#
rx5grow <- (F33$DIAgrowmean/F33$REMPER)/2 ## convert from diameter to radial growth#
F33$avgx5grow <- ave(rx5grow*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##Mortality diameter mean#
mortrx5 <- F33$mortDIAmean  ##
F33$avgmortx5 <- ave(mortrx5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##Density Model#
y6 <- (F33$TPAsum-F33$PREV_TPAsum)/F33$REMPER  ##
F33$avgTPAchg <- ave(y6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##SAPLINGS Density Model#
sap6 <- ((F33$TPAsum05/0.404686)-(F33$PREVTPAsum05/0.404686))/F33$REMPER  # convert to hectares#
F33$sapavgTPAchg <- ave(sap6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
##SAPLINGS mortality /recruitment#
F33$sapavgMORT <- ave(F33$sapMortsum*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin #sapling mortality per plot#
F33$sapavgRECR <- ave(F33$sapRecruitsum*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin #sapling plot recuritment#
#
#SISP ratio#
F33$sp1<- mean(F33$SISPchg, na.rm=T) #F33$nsamp#
F33$spavgchg <- ave(F33$sp1,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)) #/F33$nbin#
#
#Merge null and conditional model data#
F34 <- subset(F33, !duplicated(aPREVSTOCKDIAbin), select=c(aPREVSTOCKDIAbin, avgCchg, avgx5, avgx5grow, avgTPAchg, sapavgTPAchg, avgC5chg, avgmortx5, sapavgMORT, sapavgRECR))#
f22$aPREVSTOCKDIAbin <- floor(f22$PREV_STOCKINGmid/10)*10000+(floor(f22$PREV_DIAmean/2)*2)#
f22 <- merge(f22, F34, by="aPREVSTOCKDIAbin") #, all.x=T#
#carbon 1 and 5 inch#
c8 <- (((f22$carbon1sum-f22$PREVcarbon1sum)* 0.00112085116 )/f22$REMPER)#
f22$xcarbon <- (c8-f22$avgCchg)#
c55 <- (((f22$carbon5sum-f22$PREVcarbon5sum)* 0.00112085116 )/f22$REMPER)#
f22$xcarbon5 <- ((c55)-f22$avgC5chg)#
##mean diameter change  #
x8 <- (f22$DIAchgmean/f22$REMPER)  # #
f22$x5 <-  (x8-f22$avgx5)#
#
##radial growth  #
x8grow <- (f22$DIAgrowmean/f22$REMPER)/2  # convert from diameter to radial growth#
f22$x5grow <-  (x8grow-f22$avgx5grow)#
#
##mortality size#
mortx8 <- f22$mortDIAmean ##
f22$mortx5 <-  (mortx8-f22$avgmortx5)#
#
##Density Model#
TPA <- (f22$TPAsum-f22$PREV_TPAsum)/f22$REMPER  ##
f22$TPAchg <-  (TPA-f22$avgTPAchg)#
#
##SAPLING Density Model#
sapTPA <- ((f22$TPAsum05/0.404686)-(f22$PREVTPAsum05/0.404686))/f22$REMPER  ##
f22$sapTPAchg <-  (sapTPA-f22$sapavgTPAchg)#
f22$sapMORTchg <- (f22$sapMortsum/f22$sapavgMORT)*100 #sapling mortaltiy percent difference from null#
f22$sapRECRchg <- (f22$sapRecruitsum/f22$sapavgRECR)*100 #sapling recruitment percent difference from null#
#
##SISP ratio#
# sp22 <- mean(f22$SISPchg-f22$sapavgTPAchg, na.rm=T)#
#
#calculate mean condition for x-axis based on v loop#
if(length(f22$xcarbon)>= 10)#
{#
if(v==2)#
{#
	x3 <- mean(f22$TEMP5growchg, na.rm=TRUE)#
}#
if(v==1)#
{#
	x3 <- mean(f22$PREC5growchg, na.rm=TRUE)#
}#
if(v==3)#
{#
x3 <- ifelse(c<=8,mean(f22$SWpluvial5chg, na.rm=TRUE), mean(f22$SWdrought5chg, na.rm=TRUE))#
}#
#
#calculate y-axis variables#
#USxcarbon<- mean(F2$carbon1sum-F2$PREVcarbon1sum)* 0.00112085116/mean(F2$REMPER)#
y3 <- mean(f22$xcarbon, na.rm=TRUE) #
y3pctdif<-(mean(f22$xcarbon, na.rm=TRUE)/mean(f22$avgCchg, na.rm=TRUE))*100   ##
#y3<- (y3pctdif/100)*USxcarbon#
y3start <- mean(f22$avgCchg, na.rm=T) #null model zero line for plotting#
#
y5 <- mean(f22$xcarbon5, na.rm=TRUE)  ##
y5pctdif<-(mean(f22$xcarbon5, na.rm=TRUE)/mean(f22$avgC5chg, na.rm=TRUE))*100   ##
y5start <- mean(f22$avgC5chg, na.rm=T) #null model zero line for plotting#
#USTPA3 <- mean((F2$TPAsum-F2$PREV_TPAsum)/F2$REMPER)#
TPA3pctdif<-(mean(f22$TPAchg, na.rm=TRUE)/mean(f22$avgTPAchg, na.rm=TRUE))*100   ##
TPA3 <-mean(f22$TPAchg, na.rm=TRUE)#
TPA3start <- mean(f22$avgTPAchg, na.rm=T) #null model zero line for plotting#
#
#USsapTPA3 <- mean(((F2$TPAsum05/0.404686)-(F2$PREVTPAsum05/0.404686))/F2$REMPER)#
sapTPA3pctdif <- (mean(f22$sapTPAchg, na.rm=TRUE)/ mean(f22$sapavgTPAchg, na.rm=T))*100##
sapTPA3 <- mean(f22$sapTPAchg, na.rm=TRUE) ##
sapTPA3start <- mean(f22$sapavgTPAchg, na.rm=T)#
#
#USx5 <- mean(F2$DIAchgmean/F2$REMPER, na.rm=T)/2  # convert from diameter to radial growth#
x5pctdif <- (mean(f22$x5, na.rm=TRUE)/mean(f22$avgx5, na.rm=T))*100  ##
x5<- mean(f22$x5, na.rm=TRUE)#
x5start <- mean(f22$avgx5, na.rm=T)#
#
#USx5grow <- mean(F2$DIAgrowmean/F2$REMPER, na.rm=T)/2  # convert from diameter to radial growth#
x5growpctdif <- (mean(f22$x5grow, na.rm=TRUE)/mean(f22$avgx5grow, na.rm=T))*100  ##
x5grow <- mean(f22$x5grow, na.rm=TRUE) ##
x5growstart <- mean(f22$avgx5grow, na.rm=T)#
#
mortx5 <- mean(f22$mortx5, na.rm=TRUE) ##
mortx5start <-   mean(mortx8, na.rm=T)#
sapMORT <- mean(f22$sapMORTchg, na.rm=T)#
sapRECR <- mean(f22$sapRECRchg, na.rm=T)#
#
#calc y-axis error#
R2 <- 10 #repetitions set to 10 for faster looping#
enderror <- boot(f22$xcarbon, meanFunc, R=R2)#
enderrory3 <- sqrt(var(enderror$t))*1.96#
enderror5 <- boot(f22$xcarbon5, meanFunc, R= R2)#
enderrory5 <- sqrt(var(enderror5$t))*1.96#
enderror2 <- boot(f22$TPAchg, meanFunc, R= R2)#
enderrorTPA <- sqrt(var(enderror2$t))*1.96#
enderrorsap <- boot(f22$sapTPAchg, meanFunc, R= R2)#
enderrorsapTPA <- sqrt(var(enderrorsap$t))*1.96#
enderror4 <- boot(f22$x5, meanFunc, R= R2)#
enderrorx5 <- sqrt(var(enderror4$t))*1.96#
enderrorx5grow4 <- boot(f22$x5grow, meanFunc, R= R2)#
enderrorx5grow <- sqrt(var(enderrorx5grow4$t))*1.96#
enderrorsapMORT <- std.error(f22$sapMORTchg, na.rm=T)#
enderrorsapRECR <- std.error(f22$sapRECRchg, na.rm=T)#
minx3<-min(f22$x3)#
maxx3<-max(f22$x3)#
#
# enderrorsp2error <- boot((f22$SISPchg-f22$sapavgTPAchg), meanFunc, R= R2)#
# enderrorsp22error <- sqrt(var(enderrorsp2error$t))*1.96#
#
n <- length(f22$xcarbon) #conditional model n#
nnull <- length(F33$avgx5) #null model n#
#print(c(n, ccond, c, nnull))#
#
f23 <- c(x3, y3, y5, TPA3, sapTPA3, x5, x5grow, enderrory3, enderrory5, enderrorTPA, enderrorsapTPA, enderrorx5, enderrorx5grow, n, v, col3, y3start, y5start, TPA3start, x5start, sapTPA3start, x5growstart, sapMORT, sapRECR, enderrorsapMORT, enderrorsapRECR, y3pctdif, y5pctdif, TPA3pctdif, sapTPA3pctdif ,x5pctdif, x5growpctdif, minx3, maxx3)#
#
}#
}#
F5 <- rbind(F5,F4)#
}#
#
F6 <- as.data.table(F5)#
setnames(F6, c("x3","y3","y5", "TPA","sapTPA", "x5", "x5grow", "errory3","errory5", "errorTPA","errorsapTPA", "errorx5","errorx5grow", "n", "v", "col3", "y3start", "y5start", "TPA3start", "x5start", "sapTPA3start", "x5growstart", "sapMORTpct", "sapRECRpct", "enderrorsapMORT", "enderrorsapRECR", "y3pctdif", "y5pctdif", "TPA3pctdif", "sapTPA3pctdif", "x5pctdif", "x5growpctdif", "minx3", "maxx3"))#
F6 <- subset(F6, n>100)
F6
print(min(f22$x3))
vari <- c("PREC5growchg", "TEMP5growchg", "SWpluvial5chg", "SWdrought5chg") #"PREC5growchg", "TEMP5growchg"#
vari1 <- subset(F2, select=c(PREC5growchg, TEMP5growchg, SWpluvial5chg, SWdrought5chg))#
vari2 <- c("5-yr JJA precip. anomaly (mm/day)", "5-yr JJA temp. anomaly (C)", "1-yr JJA soil moist. anomaly (z-score)", "1-yr JJA soil moist. anomaly (z-score)")#
#
seq1<- c(0.2, 0.4, NA, 0.66, 0.86, 0.96, 1, NA)#
#
if(coniferous==1 | deciduous==1){seq1<- c(0.2, 0.4, NA, 0.5, 0.75, 0.9, 1)} #broader quantiles for smaller dataset#
#(100-(c(0.2, 0.4, NA, 0.5, 0.75, 0.9, 1)*100))/2#
#
qt1a <- c(quantile(F2$PREC5growchg[F2$PREC5growchg<0],(1-rev(seq1))))  #
 qt2a <- c(quantile(F2$PREC5growchg[F2$PREC5growchg>0], seq1)) #
 qt1b <- c(quantile(F2$TEMP5growchg[F2$TEMP5growchg<0],(1-rev(seq1)))) #
 qt2b <- c(quantile(F2$TEMP5growchg[F2$TEMP5growchg>0], seq1))  #
 qt3 <- c(quantile(F2$SWdrought5chg[F2$SWdrought5chg<0],(1-rev(seq1)))) #
 qt4 <- c(quantile(F2$SWpluvial5chg[F2$SWpluvial5chg>0], seq1)) #
int <- 1#
F5 <- NULL#
for(v in 1:3)#
{#
	if(v==1){#
		 qt1<- qt1a#
		 qt2<- qt2a#
	}#
	if(v==2){#
		 qt1<- qt1b#
		 qt2<- qt2b#
	}#
F4<-foreach(c = 1:16, .combine=rbind) %dopar%#
{#
	if(c<=8 & v<3)#
	{#
		f22 <- subset(F2, get(vari[v])>= qt2[c] & get(vari[v])<=  qt2[c+int]) 		#
		f23 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- vari[v]#
		col3=ifelse(qt2[c]>= 0.2, 3, 2)#
		qta <- qt2[c]#
		qtb <- qt2[c+int]#
		}#
	if(c>8 & v<3)#
	{ #
		d=c-8#
		f22 <- subset(F2, get(vari[v])<= qt1[d] & get(vari[v])>= qt1[d-int]) #		#
		f23 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- vari[v]#
		col3=ifelse(qt1[d]<= -0.1, 1, 2)#
		qtb <- qt1[d]#
		qta <- qt1[d-int]#
	}#
	if(c<=8 & v==3)#
	{#
			f22 <- subset(F2, get(vari[v])>= qt4[c] & get(vari[v])<= qt4[c+int] & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.15, na.rm=TRUE)) #exclude droughts#
			f23 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.15, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- "Wet summer"#
		col3=ifelse(qt4[c]>=0.2, 3, 2)#
		qta <- qt4[c]#
		qtb <- qt4[c+int]#
	}#
	if(c>8 & v==3)#
	{ #
		d=c-8#
		f22 <- subset(F2, get(vari[v+1])< qt3[d] & get(vari[v+1])>= qt3[d-int] & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.85, na.rm=TRUE)) #exclude wet summers  #
		f23 <- subset(F2, get(vari[v+1])<= quantile(vari1[[v+1]], 0.7, na.rm=TRUE) & get(vari[v+1])>= quantile(vari1[[v+1]], 0.3, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.85, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- "Dry summer"#
		col3=ifelse(qt3[d]<= -0.2, 1, 2)#
		qtb <- qt3[d]#
		qta <- qt3[d-int]#
	}#
f22$nsamp <- (ave(f22$PREV_DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #sample proportion of each grid cell #
#print(c(table(f22$nsamp<0.75), col3))#
#
#f22$col3 <- col3#
PLT_CNsamp1 <- f23$PLT_CN   #
#
f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, nsamp))#
#
F33 <- subset(F2, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
F33 <- merge(F33, f24, all.x=T, by="LATLON")#
F33 <- subset(F33, PLT_CN %in% (PLT_CNsamp1)) # not neccesaary bc weighting will eliminate latlons not in f22!#
#
F33$aPREVSTOCKDIAbin <- floor(F33$PREV_STOCKINGmid/10)*10000+(floor(F33$PREV_DIAmean/2)*2)#
F33$n1 <- 1#
F33$aPREVSTOCKDIAbinlength <- ave(F33$n1, F33$aPREVSTOCKDIAbin, FUN=function(x) sum(x, na.rm=TRUE))#
F33$nbin <- ave(F33$nsamp, F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)) #average AC proportion in stock/dia bins#
#
F33 <- subset(F33, aPREVSTOCKDIAbinlength> 10) #Null model needs at least 10 comparison plots at each diameter/stocking bin#
#
##Carbon Model#
c6 <- (((F33$carbon1sum-F33$PREVcarbon1sum)* 0.00112085116 )/F33$REMPER)#
F33$avgCchg <- (ave(c6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)))/F33$nbin #multiply by AC proportion divided by mean proportion in each stocking/dia bin#
#
##Carbon Model 5 inch and greater trees#
c5 <- (((F33$carbon5sum-F33$PREVcarbon5sum)* 0.00112085116 )/F33$REMPER)#
F33$avgC5chg <- (ave(c5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)))/F33$nbin#
#
##radial growth  #
rx5 <- (F33$DIAchgmean/F33$REMPER) ###
F33$avgx5 <- ave(rx5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##radial growth#
rx5grow <- (F33$DIAgrowmean/F33$REMPER)/2 ## convert from diameter to radial growth#
F33$avgx5grow <- ave(rx5grow*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##Mortality diameter mean#
mortrx5 <- F33$mortDIAmean  ##
F33$avgmortx5 <- ave(mortrx5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##Density Model#
y6 <- (F33$TPAsum-F33$PREV_TPAsum)/F33$REMPER  ##
F33$avgTPAchg <- ave(y6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##SAPLINGS Density Model#
sap6 <- ((F33$TPAsum05/0.404686)-(F33$PREVTPAsum05/0.404686))/F33$REMPER  # convert to hectares#
F33$sapavgTPAchg <- ave(sap6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
##SAPLINGS mortality /recruitment#
F33$sapavgMORT <- ave(F33$sapMortsum*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin #sapling mortality per plot#
F33$sapavgRECR <- ave(F33$sapRecruitsum*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin #sapling plot recuritment#
#
#SISP ratio#
F33$sp1<- mean(F33$SISPchg, na.rm=T) #F33$nsamp#
F33$spavgchg <- ave(F33$sp1,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)) #/F33$nbin#
#
#Merge null and conditional model data#
F34 <- subset(F33, !duplicated(aPREVSTOCKDIAbin), select=c(aPREVSTOCKDIAbin, avgCchg, avgx5, avgx5grow, avgTPAchg, sapavgTPAchg, avgC5chg, avgmortx5, sapavgMORT, sapavgRECR))#
f22$aPREVSTOCKDIAbin <- floor(f22$PREV_STOCKINGmid/10)*10000+(floor(f22$PREV_DIAmean/2)*2)#
f22 <- merge(f22, F34, by="aPREVSTOCKDIAbin") #, all.x=T#
#carbon 1 and 5 inch#
c8 <- (((f22$carbon1sum-f22$PREVcarbon1sum)* 0.00112085116 )/f22$REMPER)#
f22$xcarbon <- (c8-f22$avgCchg)#
c55 <- (((f22$carbon5sum-f22$PREVcarbon5sum)* 0.00112085116 )/f22$REMPER)#
f22$xcarbon5 <- ((c55)-f22$avgC5chg)#
##mean diameter change  #
x8 <- (f22$DIAchgmean/f22$REMPER)  # #
f22$x5 <-  (x8-f22$avgx5)#
#
##radial growth  #
x8grow <- (f22$DIAgrowmean/f22$REMPER)/2  # convert from diameter to radial growth#
f22$x5grow <-  (x8grow-f22$avgx5grow)#
#
##mortality size#
mortx8 <- f22$mortDIAmean ##
f22$mortx5 <-  (mortx8-f22$avgmortx5)#
#
##Density Model#
TPA <- (f22$TPAsum-f22$PREV_TPAsum)/f22$REMPER  ##
f22$TPAchg <-  (TPA-f22$avgTPAchg)#
#
##SAPLING Density Model#
sapTPA <- ((f22$TPAsum05/0.404686)-(f22$PREVTPAsum05/0.404686))/f22$REMPER  ##
f22$sapTPAchg <-  (sapTPA-f22$sapavgTPAchg)#
f22$sapMORTchg <- (f22$sapMortsum/f22$sapavgMORT)*100 #sapling mortaltiy percent difference from null#
f22$sapRECRchg <- (f22$sapRecruitsum/f22$sapavgRECR)*100 #sapling recruitment percent difference from null#
#
##SISP ratio#
# sp22 <- mean(f22$SISPchg-f22$sapavgTPAchg, na.rm=T)#
#
#calculate mean condition for x-axis based on v loop#
if(length(f22$xcarbon)>= 10)#
{#
if(v==2)#
{#
	x3 <- mean(f22$TEMP5growchg, na.rm=TRUE)#
}#
if(v==1)#
{#
	x3 <- mean(f22$PREC5growchg, na.rm=TRUE)#
}#
if(v==3)#
{#
x3 <- ifelse(c<=8,mean(f22$SWpluvial5chg, na.rm=TRUE), mean(f22$SWdrought5chg, na.rm=TRUE))#
}#
print(min(f22$x3))#
#
#calculate y-axis variables#
#USxcarbon<- mean(F2$carbon1sum-F2$PREVcarbon1sum)* 0.00112085116/mean(F2$REMPER)#
y3 <- mean(f22$xcarbon, na.rm=TRUE) #
y3pctdif<-(mean(f22$xcarbon, na.rm=TRUE)/mean(f22$avgCchg, na.rm=TRUE))*100   ##
#y3<- (y3pctdif/100)*USxcarbon#
y3start <- mean(f22$avgCchg, na.rm=T) #null model zero line for plotting#
#
y5 <- mean(f22$xcarbon5, na.rm=TRUE)  ##
y5pctdif<-(mean(f22$xcarbon5, na.rm=TRUE)/mean(f22$avgC5chg, na.rm=TRUE))*100   ##
y5start <- mean(f22$avgC5chg, na.rm=T) #null model zero line for plotting#
#USTPA3 <- mean((F2$TPAsum-F2$PREV_TPAsum)/F2$REMPER)#
TPA3pctdif<-(mean(f22$TPAchg, na.rm=TRUE)/mean(f22$avgTPAchg, na.rm=TRUE))*100   ##
TPA3 <-mean(f22$TPAchg, na.rm=TRUE)#
TPA3start <- mean(f22$avgTPAchg, na.rm=T) #null model zero line for plotting#
#
#USsapTPA3 <- mean(((F2$TPAsum05/0.404686)-(F2$PREVTPAsum05/0.404686))/F2$REMPER)#
sapTPA3pctdif <- (mean(f22$sapTPAchg, na.rm=TRUE)/ mean(f22$sapavgTPAchg, na.rm=T))*100##
sapTPA3 <- mean(f22$sapTPAchg, na.rm=TRUE) ##
sapTPA3start <- mean(f22$sapavgTPAchg, na.rm=T)#
#
#USx5 <- mean(F2$DIAchgmean/F2$REMPER, na.rm=T)/2  # convert from diameter to radial growth#
x5pctdif <- (mean(f22$x5, na.rm=TRUE)/mean(f22$avgx5, na.rm=T))*100  ##
x5<- mean(f22$x5, na.rm=TRUE)#
x5start <- mean(f22$avgx5, na.rm=T)#
#
#USx5grow <- mean(F2$DIAgrowmean/F2$REMPER, na.rm=T)/2  # convert from diameter to radial growth#
x5growpctdif <- (mean(f22$x5grow, na.rm=TRUE)/mean(f22$avgx5grow, na.rm=T))*100  ##
x5grow <- mean(f22$x5grow, na.rm=TRUE) ##
x5growstart <- mean(f22$avgx5grow, na.rm=T)#
#
mortx5 <- mean(f22$mortx5, na.rm=TRUE) ##
mortx5start <-   mean(mortx8, na.rm=T)#
sapMORT <- mean(f22$sapMORTchg, na.rm=T)#
sapRECR <- mean(f22$sapRECRchg, na.rm=T)#
#
#calc y-axis error#
R2 <- 10 #repetitions set to 10 for faster looping#
enderror <- boot(f22$xcarbon, meanFunc, R=R2)#
enderrory3 <- sqrt(var(enderror$t))*1.96#
enderror5 <- boot(f22$xcarbon5, meanFunc, R= R2)#
enderrory5 <- sqrt(var(enderror5$t))*1.96#
enderror2 <- boot(f22$TPAchg, meanFunc, R= R2)#
enderrorTPA <- sqrt(var(enderror2$t))*1.96#
enderrorsap <- boot(f22$sapTPAchg, meanFunc, R= R2)#
enderrorsapTPA <- sqrt(var(enderrorsap$t))*1.96#
enderror4 <- boot(f22$x5, meanFunc, R= R2)#
enderrorx5 <- sqrt(var(enderror4$t))*1.96#
enderrorx5grow4 <- boot(f22$x5grow, meanFunc, R= R2)#
enderrorx5grow <- sqrt(var(enderrorx5grow4$t))*1.96#
enderrorsapMORT <- std.error(f22$sapMORTchg, na.rm=T)#
enderrorsapRECR <- std.error(f22$sapRECRchg, na.rm=T)#
minx3<-min(f22$x3)#
maxx3<-max(f22$x3)#
#
# enderrorsp2error <- boot((f22$SISPchg-f22$sapavgTPAchg), meanFunc, R= R2)#
# enderrorsp22error <- sqrt(var(enderrorsp2error$t))*1.96#
#
n <- length(f22$xcarbon) #conditional model n#
nnull <- length(F33$avgx5) #null model n#
#print(c(n, ccond, c, nnull))#
#
f23 <- c(x3, y3, y5, TPA3, sapTPA3, x5, x5grow, enderrory3, enderrory5, enderrorTPA, enderrorsapTPA, enderrorx5, enderrorx5grow, n, v, col3, y3start, y5start, TPA3start, x5start, sapTPA3start, x5growstart, sapMORT, sapRECR, enderrorsapMORT, enderrorsapRECR, y3pctdif, y5pctdif, TPA3pctdif, sapTPA3pctdif ,x5pctdif, x5growpctdif, minx3, maxx3)#
#
}#
}#
F5 <- rbind(F5,F4)#
}#
#
F6 <- as.data.table(F5)#
setnames(F6, c("x3","y3","y5", "TPA","sapTPA", "x5", "x5grow", "errory3","errory5", "errorTPA","errorsapTPA", "errorx5","errorx5grow", "n", "v", "col3", "y3start", "y5start", "TPA3start", "x5start", "sapTPA3start", "x5growstart", "sapMORTpct", "sapRECRpct", "enderrorsapMORT", "enderrorsapRECR", "y3pctdif", "y5pctdif", "TPA3pctdif", "sapTPA3pctdif", "x5pctdif", "x5growpctdif", "minx3", "maxx3"))#
F6 <- subset(F6, n>100)
vari <- c("PREC5growchg", "TEMP5growchg", "SWpluvial5chg", "SWdrought5chg") #"PREC5growchg", "TEMP5growchg"#
vari1 <- subset(F2, select=c(PREC5growchg, TEMP5growchg, SWpluvial5chg, SWdrought5chg))#
vari2 <- c("5-yr JJA precip. anomaly (mm/day)", "5-yr JJA temp. anomaly (C)", "1-yr JJA soil moist. anomaly (z-score)", "1-yr JJA soil moist. anomaly (z-score)")#
#
seq1<- c(0.2, 0.4, NA, 0.66, 0.86, 0.96, 1, NA)#
#
if(coniferous==1 | deciduous==1){seq1<- c(0.2, 0.4, NA, 0.5, 0.75, 0.9, 1)} #broader quantiles for smaller dataset#
#(100-(c(0.2, 0.4, NA, 0.5, 0.75, 0.9, 1)*100))/2#
#
qt1a <- c(quantile(F2$PREC5growchg[F2$PREC5growchg<0],(1-rev(seq1))))  #
 qt2a <- c(quantile(F2$PREC5growchg[F2$PREC5growchg>0], seq1)) #
 qt1b <- c(quantile(F2$TEMP5growchg[F2$TEMP5growchg<0],(1-rev(seq1)))) #
 qt2b <- c(quantile(F2$TEMP5growchg[F2$TEMP5growchg>0], seq1))  #
 qt3 <- c(quantile(F2$SWdrought5chg[F2$SWdrought5chg<0],(1-rev(seq1)))) #
 qt4 <- c(quantile(F2$SWpluvial5chg[F2$SWpluvial5chg>0], seq1)) #
int <- 1#
F5 <- NULL#
for(v in 1:3)#
{#
	if(v==1){#
		 qt1<- qt1a#
		 qt2<- qt2a#
	}#
	if(v==2){#
		 qt1<- qt1b#
		 qt2<- qt2b#
	}#
F4<-foreach(c = 1:16, .combine=rbind) %dopar%#
{#
	if(c<=8 & v<3)#
	{#
		f22 <- subset(F2, get(vari[v])>= qt2[c] & get(vari[v])<=  qt2[c+int]) 		#
		f23 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- vari[v]#
		col3=ifelse(qt2[c]>= 0.2, 3, 2)#
		qta <- qt2[c]#
		qtb <- qt2[c+int]#
		}#
	if(c>8 & v<3)#
	{ #
		d=c-8#
		f22 <- subset(F2, get(vari[v])<= qt1[d] & get(vari[v])>= qt1[d-int]) #		#
		f23 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- vari[v]#
		col3=ifelse(qt1[d]<= -0.1, 1, 2)#
		qtb <- qt1[d]#
		qta <- qt1[d-int]#
	}#
	if(c<=8 & v==3)#
	{#
			f22 <- subset(F2, get(vari[v])>= qt4[c] & get(vari[v])<= qt4[c+int] & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.15, na.rm=TRUE)) #exclude droughts#
			f23 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.15, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- "Wet summer"#
		col3=ifelse(qt4[c]>=0.2, 3, 2)#
		qta <- qt4[c]#
		qtb <- qt4[c+int]#
	}#
	if(c>8 & v==3)#
	{ #
		d=c-8#
		f22 <- subset(F2, get(vari[v+1])< qt3[d] & get(vari[v+1])>= qt3[d-int] & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.85, na.rm=TRUE)) #exclude wet summers  #
		f23 <- subset(F2, get(vari[v+1])<= quantile(vari1[[v+1]], 0.7, na.rm=TRUE) & get(vari[v+1])>= quantile(vari1[[v+1]], 0.3, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.85, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- "Dry summer"#
		col3=ifelse(qt3[d]<= -0.2, 1, 2)#
		qtb <- qt3[d]#
		qta <- qt3[d-int]#
	}#
f22$nsamp <- (ave(f22$PREV_DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #sample proportion of each grid cell #
#print(c(table(f22$nsamp<0.75), col3))#
#
#f22$col3 <- col3#
PLT_CNsamp1 <- f23$PLT_CN   #
#
f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, nsamp))#
#
F33 <- subset(F2, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
F33 <- merge(F33, f24, all.x=T, by="LATLON")#
F33 <- subset(F33, PLT_CN %in% (PLT_CNsamp1)) # not neccesaary bc weighting will eliminate latlons not in f22!#
#
F33$aPREVSTOCKDIAbin <- floor(F33$PREV_STOCKINGmid/10)*10000+(floor(F33$PREV_DIAmean/2)*2)#
F33$n1 <- 1#
F33$aPREVSTOCKDIAbinlength <- ave(F33$n1, F33$aPREVSTOCKDIAbin, FUN=function(x) sum(x, na.rm=TRUE))#
F33$nbin <- ave(F33$nsamp, F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)) #average AC proportion in stock/dia bins#
#
F33 <- subset(F33, aPREVSTOCKDIAbinlength> 10) #Null model needs at least 10 comparison plots at each diameter/stocking bin#
#
##Carbon Model#
c6 <- (((F33$carbon1sum-F33$PREVcarbon1sum)* 0.00112085116 )/F33$REMPER)#
F33$avgCchg <- (ave(c6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)))/F33$nbin #multiply by AC proportion divided by mean proportion in each stocking/dia bin#
#
##Carbon Model 5 inch and greater trees#
c5 <- (((F33$carbon5sum-F33$PREVcarbon5sum)* 0.00112085116 )/F33$REMPER)#
F33$avgC5chg <- (ave(c5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)))/F33$nbin#
#
##radial growth  #
rx5 <- (F33$DIAchgmean/F33$REMPER) ###
F33$avgx5 <- ave(rx5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##radial growth#
rx5grow <- (F33$DIAgrowmean/F33$REMPER)/2 ## convert from diameter to radial growth#
F33$avgx5grow <- ave(rx5grow*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##Mortality diameter mean#
mortrx5 <- F33$mortDIAmean  ##
F33$avgmortx5 <- ave(mortrx5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##Density Model#
y6 <- (F33$TPAsum-F33$PREV_TPAsum)/F33$REMPER  ##
F33$avgTPAchg <- ave(y6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##SAPLINGS Density Model#
sap6 <- ((F33$TPAsum05/0.404686)-(F33$PREVTPAsum05/0.404686))/F33$REMPER  # convert to hectares#
F33$sapavgTPAchg <- ave(sap6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
##SAPLINGS mortality /recruitment#
F33$sapavgMORT <- ave(F33$sapMortsum*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin #sapling mortality per plot#
F33$sapavgRECR <- ave(F33$sapRecruitsum*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin #sapling plot recuritment#
#
#SISP ratio#
F33$sp1<- mean(F33$SISPchg, na.rm=T) #F33$nsamp#
F33$spavgchg <- ave(F33$sp1,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)) #/F33$nbin#
#
#Merge null and conditional model data#
F34 <- subset(F33, !duplicated(aPREVSTOCKDIAbin), select=c(aPREVSTOCKDIAbin, avgCchg, avgx5, avgx5grow, avgTPAchg, sapavgTPAchg, avgC5chg, avgmortx5, sapavgMORT, sapavgRECR))#
f22$aPREVSTOCKDIAbin <- floor(f22$PREV_STOCKINGmid/10)*10000+(floor(f22$PREV_DIAmean/2)*2)#
f22 <- merge(f22, F34, by="aPREVSTOCKDIAbin") #, all.x=T#
#carbon 1 and 5 inch#
c8 <- (((f22$carbon1sum-f22$PREVcarbon1sum)* 0.00112085116 )/f22$REMPER)#
f22$xcarbon <- (c8-f22$avgCchg)#
c55 <- (((f22$carbon5sum-f22$PREVcarbon5sum)* 0.00112085116 )/f22$REMPER)#
f22$xcarbon5 <- ((c55)-f22$avgC5chg)#
##mean diameter change  #
x8 <- (f22$DIAchgmean/f22$REMPER)  # #
f22$x5 <-  (x8-f22$avgx5)#
#
##radial growth  #
x8grow <- (f22$DIAgrowmean/f22$REMPER)/2  # convert from diameter to radial growth#
f22$x5grow <-  (x8grow-f22$avgx5grow)#
#
##mortality size#
mortx8 <- f22$mortDIAmean ##
f22$mortx5 <-  (mortx8-f22$avgmortx5)#
#
##Density Model#
TPA <- (f22$TPAsum-f22$PREV_TPAsum)/f22$REMPER  ##
f22$TPAchg <-  (TPA-f22$avgTPAchg)#
#
##SAPLING Density Model#
sapTPA <- ((f22$TPAsum05/0.404686)-(f22$PREVTPAsum05/0.404686))/f22$REMPER  ##
f22$sapTPAchg <-  (sapTPA-f22$sapavgTPAchg)#
f22$sapMORTchg <- (f22$sapMortsum/f22$sapavgMORT)*100 #sapling mortaltiy percent difference from null#
f22$sapRECRchg <- (f22$sapRecruitsum/f22$sapavgRECR)*100 #sapling recruitment percent difference from null#
#
##SISP ratio#
# sp22 <- mean(f22$SISPchg-f22$sapavgTPAchg, na.rm=T)#
#
#calculate mean condition for x-axis based on v loop#
if(length(f22$xcarbon)>= 10)#
{#
if(v==2)#
{#
	x3 <- mean(f22$TEMP5growchg, na.rm=TRUE)#
	minx3<-min(f22$TEMP5growchg, na.rm=TRUE)#
	maxx3<-max(f22$TEMP5growchg, na.rm=TRUE)#
}#
if(v==1)#
{#
	x3 <- mean(f22$PREC5growchg, na.rm=TRUE)#
	minx3<-min(f22$PREC5growchg, na.rm=TRUE)#
	maxx3<-max(f22$PREC5growchg, na.rm=TRUE)#
}#
if(v==3)#
{#
	x3 <- ifelse(c<=8,mean(f22$SWpluvial5chg, na.rm=TRUE), mean(f22$SWdrought5chg, na.rm=TRUE))#
	minx3 <- ifelse(c<=8,min(f22$SWpluvial5chg, na.rm=TRUE), min(f22$SWdrought5chg, na.rm=TRUE))#
	max3 <- ifelse(c<=8,max(f22$SWpluvial5chg, na.rm=TRUE), max(f22$SWdrought5chg, na.rm=TRUE))#
}#
#
#calculate y-axis variables#
#USxcarbon<- mean(F2$carbon1sum-F2$PREVcarbon1sum)* 0.00112085116/mean(F2$REMPER)#
y3 <- mean(f22$xcarbon, na.rm=TRUE) #
y3pctdif<-(mean(f22$xcarbon, na.rm=TRUE)/mean(f22$avgCchg, na.rm=TRUE))*100   ##
#y3<- (y3pctdif/100)*USxcarbon#
y3start <- mean(f22$avgCchg, na.rm=T) #null model zero line for plotting#
#
y5 <- mean(f22$xcarbon5, na.rm=TRUE)  ##
y5pctdif<-(mean(f22$xcarbon5, na.rm=TRUE)/mean(f22$avgC5chg, na.rm=TRUE))*100   ##
y5start <- mean(f22$avgC5chg, na.rm=T) #null model zero line for plotting#
#USTPA3 <- mean((F2$TPAsum-F2$PREV_TPAsum)/F2$REMPER)#
TPA3pctdif<-(mean(f22$TPAchg, na.rm=TRUE)/mean(f22$avgTPAchg, na.rm=TRUE))*100   ##
TPA3 <-mean(f22$TPAchg, na.rm=TRUE)#
TPA3start <- mean(f22$avgTPAchg, na.rm=T) #null model zero line for plotting#
#
#USsapTPA3 <- mean(((F2$TPAsum05/0.404686)-(F2$PREVTPAsum05/0.404686))/F2$REMPER)#
sapTPA3pctdif <- (mean(f22$sapTPAchg, na.rm=TRUE)/ mean(f22$sapavgTPAchg, na.rm=T))*100##
sapTPA3 <- mean(f22$sapTPAchg, na.rm=TRUE) ##
sapTPA3start <- mean(f22$sapavgTPAchg, na.rm=T)#
#
#USx5 <- mean(F2$DIAchgmean/F2$REMPER, na.rm=T)/2  # convert from diameter to radial growth#
x5pctdif <- (mean(f22$x5, na.rm=TRUE)/mean(f22$avgx5, na.rm=T))*100  ##
x5<- mean(f22$x5, na.rm=TRUE)#
x5start <- mean(f22$avgx5, na.rm=T)#
#
#USx5grow <- mean(F2$DIAgrowmean/F2$REMPER, na.rm=T)/2  # convert from diameter to radial growth#
x5growpctdif <- (mean(f22$x5grow, na.rm=TRUE)/mean(f22$avgx5grow, na.rm=T))*100  ##
x5grow <- mean(f22$x5grow, na.rm=TRUE) ##
x5growstart <- mean(f22$avgx5grow, na.rm=T)#
#
mortx5 <- mean(f22$mortx5, na.rm=TRUE) ##
mortx5start <-   mean(mortx8, na.rm=T)#
sapMORT <- mean(f22$sapMORTchg, na.rm=T)#
sapRECR <- mean(f22$sapRECRchg, na.rm=T)#
#
#calc y-axis error#
R2 <- 10 #repetitions set to 10 for faster looping#
enderror <- boot(f22$xcarbon, meanFunc, R=R2)#
enderrory3 <- sqrt(var(enderror$t))*1.96#
enderror5 <- boot(f22$xcarbon5, meanFunc, R= R2)#
enderrory5 <- sqrt(var(enderror5$t))*1.96#
enderror2 <- boot(f22$TPAchg, meanFunc, R= R2)#
enderrorTPA <- sqrt(var(enderror2$t))*1.96#
enderrorsap <- boot(f22$sapTPAchg, meanFunc, R= R2)#
enderrorsapTPA <- sqrt(var(enderrorsap$t))*1.96#
enderror4 <- boot(f22$x5, meanFunc, R= R2)#
enderrorx5 <- sqrt(var(enderror4$t))*1.96#
enderrorx5grow4 <- boot(f22$x5grow, meanFunc, R= R2)#
enderrorx5grow <- sqrt(var(enderrorx5grow4$t))*1.96#
enderrorsapMORT <- std.error(f22$sapMORTchg, na.rm=T)#
enderrorsapRECR <- std.error(f22$sapRECRchg, na.rm=T)#
#
# enderrorsp2error <- boot((f22$SISPchg-f22$sapavgTPAchg), meanFunc, R= R2)#
# enderrorsp22error <- sqrt(var(enderrorsp2error$t))*1.96#
#
n <- length(f22$xcarbon) #conditional model n#
nnull <- length(F33$avgx5) #null model n#
#print(c(n, ccond, c, nnull))#
#
f23 <- c(x3, y3, y5, TPA3, sapTPA3, x5, x5grow, enderrory3, enderrory5, enderrorTPA, enderrorsapTPA, enderrorx5, enderrorx5grow, n, v, col3, y3start, y5start, TPA3start, x5start, sapTPA3start, x5growstart, sapMORT, sapRECR, enderrorsapMORT, enderrorsapRECR, y3pctdif, y5pctdif, TPA3pctdif, sapTPA3pctdif ,x5pctdif, x5growpctdif, minx3, maxx3)#
#
}#
}#
F5 <- rbind(F5,F4)#
}#
#
F6 <- as.data.table(F5)#
setnames(F6, c("x3","y3","y5", "TPA","sapTPA", "x5", "x5grow", "errory3","errory5", "errorTPA","errorsapTPA", "errorx5","errorx5grow", "n", "v", "col3", "y3start", "y5start", "TPA3start", "x5start", "sapTPA3start", "x5growstart", "sapMORTpct", "sapRECRpct", "enderrorsapMORT", "enderrorsapRECR", "y3pctdif", "y5pctdif", "TPA3pctdif", "sapTPA3pctdif", "x5pctdif", "x5growpctdif", "minx3", "maxx3"))#
F6 <- subset(F6, n>100)
maxx3 <- ifelse(c<=8,max(f22$SWpluvial5chg, na.rm=TRUE), max(f22$SWdrought5chg, na.rm=TRUE))
maxx3<-max(f22$TEMP5growchg, na.rm=TRUE)
c
vari <- c("PREC5growchg", "TEMP5growchg", "SWpluvial5chg", "SWdrought5chg") #"PREC5growchg", "TEMP5growchg"#
vari1 <- subset(F2, select=c(PREC5growchg, TEMP5growchg, SWpluvial5chg, SWdrought5chg))#
vari2 <- c("5-yr JJA precip. anomaly (mm/day)", "5-yr JJA temp. anomaly (C)", "1-yr JJA soil moist. anomaly (z-score)", "1-yr JJA soil moist. anomaly (z-score)")#
#
seq1<- c(0.2, 0.4, NA, 0.66, 0.86, 0.96, 1, NA)#
#
if(coniferous==1 | deciduous==1){seq1<- c(0.2, 0.4, NA, 0.5, 0.75, 0.9, 1)} #broader quantiles for smaller dataset#
#(100-(c(0.2, 0.4, NA, 0.5, 0.75, 0.9, 1)*100))/2#
#
qt1a <- c(quantile(F2$PREC5growchg[F2$PREC5growchg<0],(1-rev(seq1))))  #
 qt2a <- c(quantile(F2$PREC5growchg[F2$PREC5growchg>0], seq1)) #
 qt1b <- c(quantile(F2$TEMP5growchg[F2$TEMP5growchg<0],(1-rev(seq1)))) #
 qt2b <- c(quantile(F2$TEMP5growchg[F2$TEMP5growchg>0], seq1))  #
 qt3 <- c(quantile(F2$SWdrought5chg[F2$SWdrought5chg<0],(1-rev(seq1)))) #
 qt4 <- c(quantile(F2$SWpluvial5chg[F2$SWpluvial5chg>0], seq1)) #
int <- 1#
F5 <- NULL#
for(v in 1:3)#
{#
	if(v==1){#
		 qt1<- qt1a#
		 qt2<- qt2a#
	}#
	if(v==2){#
		 qt1<- qt1b#
		 qt2<- qt2b#
	}#
F4<-foreach(c = 1:16, .combine=rbind) %dopar%#
{#
	if(c<=8 & v<3)#
	{#
		f22 <- subset(F2, get(vari[v])>= qt2[c] & get(vari[v])<=  qt2[c+int]) 		#
		f23 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- vari[v]#
		col3=ifelse(qt2[c]>= 0.2, 3, 2)#
		qta <- qt2[c]#
		qtb <- qt2[c+int]#
		}#
	if(c>8 & v<3)#
	{ #
		d=c-8#
		f22 <- subset(F2, get(vari[v])<= qt1[d] & get(vari[v])>= qt1[d-int]) #		#
		f23 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- vari[v]#
		col3=ifelse(qt1[d]<= -0.1, 1, 2)#
		qtb <- qt1[d]#
		qta <- qt1[d-int]#
	}#
	if(c<=8 & v==3)#
	{#
			f22 <- subset(F2, get(vari[v])>= qt4[c] & get(vari[v])<= qt4[c+int] & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.15, na.rm=TRUE)) #exclude droughts#
			f23 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.15, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- "Wet summer"#
		col3=ifelse(qt4[c]>=0.2, 3, 2)#
		qta <- qt4[c]#
		qtb <- qt4[c+int]#
	}#
	if(c>8 & v==3)#
	{ #
		d=c-8#
		f22 <- subset(F2, get(vari[v+1])< qt3[d] & get(vari[v+1])>= qt3[d-int] & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.85, na.rm=TRUE)) #exclude wet summers  #
		f23 <- subset(F2, get(vari[v+1])<= quantile(vari1[[v+1]], 0.7, na.rm=TRUE) & get(vari[v+1])>= quantile(vari1[[v+1]], 0.3, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.85, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- "Dry summer"#
		col3=ifelse(qt3[d]<= -0.2, 1, 2)#
		qtb <- qt3[d]#
		qta <- qt3[d-int]#
	}#
f22$nsamp <- (ave(f22$PREV_DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #sample proportion of each grid cell #
#print(c(table(f22$nsamp<0.75), col3))#
#
#f22$col3 <- col3#
PLT_CNsamp1 <- f23$PLT_CN   #
#
f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, nsamp))#
#
F33 <- subset(F2, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
F33 <- merge(F33, f24, all.x=T, by="LATLON")#
F33 <- subset(F33, PLT_CN %in% (PLT_CNsamp1)) # not neccesaary bc weighting will eliminate latlons not in f22!#
#
F33$aPREVSTOCKDIAbin <- floor(F33$PREV_STOCKINGmid/10)*10000+(floor(F33$PREV_DIAmean/2)*2)#
F33$n1 <- 1#
F33$aPREVSTOCKDIAbinlength <- ave(F33$n1, F33$aPREVSTOCKDIAbin, FUN=function(x) sum(x, na.rm=TRUE))#
F33$nbin <- ave(F33$nsamp, F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)) #average AC proportion in stock/dia bins#
#
F33 <- subset(F33, aPREVSTOCKDIAbinlength> 10) #Null model needs at least 10 comparison plots at each diameter/stocking bin#
#
##Carbon Model#
c6 <- (((F33$carbon1sum-F33$PREVcarbon1sum)* 0.00112085116 )/F33$REMPER)#
F33$avgCchg <- (ave(c6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)))/F33$nbin #multiply by AC proportion divided by mean proportion in each stocking/dia bin#
#
##Carbon Model 5 inch and greater trees#
c5 <- (((F33$carbon5sum-F33$PREVcarbon5sum)* 0.00112085116 )/F33$REMPER)#
F33$avgC5chg <- (ave(c5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)))/F33$nbin#
#
##radial growth  #
rx5 <- (F33$DIAchgmean/F33$REMPER) ###
F33$avgx5 <- ave(rx5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##radial growth#
rx5grow <- (F33$DIAgrowmean/F33$REMPER)/2 ## convert from diameter to radial growth#
F33$avgx5grow <- ave(rx5grow*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##Mortality diameter mean#
mortrx5 <- F33$mortDIAmean  ##
F33$avgmortx5 <- ave(mortrx5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##Density Model#
y6 <- (F33$TPAsum-F33$PREV_TPAsum)/F33$REMPER  ##
F33$avgTPAchg <- ave(y6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##SAPLINGS Density Model#
sap6 <- ((F33$TPAsum05/0.404686)-(F33$PREVTPAsum05/0.404686))/F33$REMPER  # convert to hectares#
F33$sapavgTPAchg <- ave(sap6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
##SAPLINGS mortality /recruitment#
F33$sapavgMORT <- ave(F33$sapMortsum*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin #sapling mortality per plot#
F33$sapavgRECR <- ave(F33$sapRecruitsum*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin #sapling plot recuritment#
#
#SISP ratio#
F33$sp1<- mean(F33$SISPchg, na.rm=T) #F33$nsamp#
F33$spavgchg <- ave(F33$sp1,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)) #/F33$nbin#
#
#Merge null and conditional model data#
F34 <- subset(F33, !duplicated(aPREVSTOCKDIAbin), select=c(aPREVSTOCKDIAbin, avgCchg, avgx5, avgx5grow, avgTPAchg, sapavgTPAchg, avgC5chg, avgmortx5, sapavgMORT, sapavgRECR))#
f22$aPREVSTOCKDIAbin <- floor(f22$PREV_STOCKINGmid/10)*10000+(floor(f22$PREV_DIAmean/2)*2)#
f22 <- merge(f22, F34, by="aPREVSTOCKDIAbin") #, all.x=T#
#carbon 1 and 5 inch#
c8 <- (((f22$carbon1sum-f22$PREVcarbon1sum)* 0.00112085116 )/f22$REMPER)#
f22$xcarbon <- (c8-f22$avgCchg)#
c55 <- (((f22$carbon5sum-f22$PREVcarbon5sum)* 0.00112085116 )/f22$REMPER)#
f22$xcarbon5 <- ((c55)-f22$avgC5chg)#
##mean diameter change  #
x8 <- (f22$DIAchgmean/f22$REMPER)  # #
f22$x5 <-  (x8-f22$avgx5)#
#
##radial growth  #
x8grow <- (f22$DIAgrowmean/f22$REMPER)/2  # convert from diameter to radial growth#
f22$x5grow <-  (x8grow-f22$avgx5grow)#
#
##mortality size#
mortx8 <- f22$mortDIAmean ##
f22$mortx5 <-  (mortx8-f22$avgmortx5)#
#
##Density Model#
TPA <- (f22$TPAsum-f22$PREV_TPAsum)/f22$REMPER  ##
f22$TPAchg <-  (TPA-f22$avgTPAchg)#
#
##SAPLING Density Model#
sapTPA <- ((f22$TPAsum05/0.404686)-(f22$PREVTPAsum05/0.404686))/f22$REMPER  ##
f22$sapTPAchg <-  (sapTPA-f22$sapavgTPAchg)#
f22$sapMORTchg <- (f22$sapMortsum/f22$sapavgMORT)*100 #sapling mortaltiy percent difference from null#
f22$sapRECRchg <- (f22$sapRecruitsum/f22$sapavgRECR)*100 #sapling recruitment percent difference from null#
#
##SISP ratio#
# sp22 <- mean(f22$SISPchg-f22$sapavgTPAchg, na.rm=T)#
#
#calculate mean condition for x-axis based on v loop#
if(length(f22$xcarbon)>= 10)#
{#
if(v==2)#
{#
	x3 <- mean(f22$TEMP5growchg, na.rm=TRUE)#
	minx3<-min(f22$TEMP5growchg, na.rm=TRUE)#
	maxx3<-max(f22$TEMP5growchg, na.rm=TRUE)#
}#
if(v==1)#
{#
	x3 <- mean(f22$PREC5growchg, na.rm=TRUE)#
	minx3<-min(f22$PREC5growchg, na.rm=TRUE)#
	maxx3<-max(f22$PREC5growchg, na.rm=TRUE)#
}#
if(v==3)#
{#
	x3 <- ifelse(c<=8,mean(f22$SWpluvial5chg, na.rm=TRUE), mean(f22$SWdrought5chg, na.rm=TRUE))#
	minx3 <- ifelse(c<=8,min(f22$SWpluvial5chg, na.rm=TRUE), min(f22$SWdrought5chg, na.rm=TRUE))#
	maxx3 <- ifelse(c<=8,max(f22$SWpluvial5chg, na.rm=TRUE), max(f22$SWdrought5chg, na.rm=TRUE))#
}#
#
#calculate y-axis variables#
#USxcarbon<- mean(F2$carbon1sum-F2$PREVcarbon1sum)* 0.00112085116/mean(F2$REMPER)#
y3 <- mean(f22$xcarbon, na.rm=TRUE) #
y3pctdif<-(mean(f22$xcarbon, na.rm=TRUE)/mean(f22$avgCchg, na.rm=TRUE))*100   ##
#y3<- (y3pctdif/100)*USxcarbon#
y3start <- mean(f22$avgCchg, na.rm=T) #null model zero line for plotting#
#
y5 <- mean(f22$xcarbon5, na.rm=TRUE)  ##
y5pctdif<-(mean(f22$xcarbon5, na.rm=TRUE)/mean(f22$avgC5chg, na.rm=TRUE))*100   ##
y5start <- mean(f22$avgC5chg, na.rm=T) #null model zero line for plotting#
#USTPA3 <- mean((F2$TPAsum-F2$PREV_TPAsum)/F2$REMPER)#
TPA3pctdif<-(mean(f22$TPAchg, na.rm=TRUE)/mean(f22$avgTPAchg, na.rm=TRUE))*100   ##
TPA3 <-mean(f22$TPAchg, na.rm=TRUE)#
TPA3start <- mean(f22$avgTPAchg, na.rm=T) #null model zero line for plotting#
#
#USsapTPA3 <- mean(((F2$TPAsum05/0.404686)-(F2$PREVTPAsum05/0.404686))/F2$REMPER)#
sapTPA3pctdif <- (mean(f22$sapTPAchg, na.rm=TRUE)/ mean(f22$sapavgTPAchg, na.rm=T))*100##
sapTPA3 <- mean(f22$sapTPAchg, na.rm=TRUE) ##
sapTPA3start <- mean(f22$sapavgTPAchg, na.rm=T)#
#
#USx5 <- mean(F2$DIAchgmean/F2$REMPER, na.rm=T)/2  # convert from diameter to radial growth#
x5pctdif <- (mean(f22$x5, na.rm=TRUE)/mean(f22$avgx5, na.rm=T))*100  ##
x5<- mean(f22$x5, na.rm=TRUE)#
x5start <- mean(f22$avgx5, na.rm=T)#
#
#USx5grow <- mean(F2$DIAgrowmean/F2$REMPER, na.rm=T)/2  # convert from diameter to radial growth#
x5growpctdif <- (mean(f22$x5grow, na.rm=TRUE)/mean(f22$avgx5grow, na.rm=T))*100  ##
x5grow <- mean(f22$x5grow, na.rm=TRUE) ##
x5growstart <- mean(f22$avgx5grow, na.rm=T)#
#
mortx5 <- mean(f22$mortx5, na.rm=TRUE) ##
mortx5start <-   mean(mortx8, na.rm=T)#
sapMORT <- mean(f22$sapMORTchg, na.rm=T)#
sapRECR <- mean(f22$sapRECRchg, na.rm=T)#
#
#calc y-axis error#
R2 <- 10 #repetitions set to 10 for faster looping#
enderror <- boot(f22$xcarbon, meanFunc, R=R2)#
enderrory3 <- sqrt(var(enderror$t))*1.96#
enderror5 <- boot(f22$xcarbon5, meanFunc, R= R2)#
enderrory5 <- sqrt(var(enderror5$t))*1.96#
enderror2 <- boot(f22$TPAchg, meanFunc, R= R2)#
enderrorTPA <- sqrt(var(enderror2$t))*1.96#
enderrorsap <- boot(f22$sapTPAchg, meanFunc, R= R2)#
enderrorsapTPA <- sqrt(var(enderrorsap$t))*1.96#
enderror4 <- boot(f22$x5, meanFunc, R= R2)#
enderrorx5 <- sqrt(var(enderror4$t))*1.96#
enderrorx5grow4 <- boot(f22$x5grow, meanFunc, R= R2)#
enderrorx5grow <- sqrt(var(enderrorx5grow4$t))*1.96#
enderrorsapMORT <- std.error(f22$sapMORTchg, na.rm=T)#
enderrorsapRECR <- std.error(f22$sapRECRchg, na.rm=T)#
#
# enderrorsp2error <- boot((f22$SISPchg-f22$sapavgTPAchg), meanFunc, R= R2)#
# enderrorsp22error <- sqrt(var(enderrorsp2error$t))*1.96#
#
n <- length(f22$xcarbon) #conditional model n#
nnull <- length(F33$avgx5) #null model n#
#print(c(n, ccond, c, nnull))#
#
f23 <- c(x3, y3, y5, TPA3, sapTPA3, x5, x5grow, enderrory3, enderrory5, enderrorTPA, enderrorsapTPA, enderrorx5, enderrorx5grow, n, v, col3, y3start, y5start, TPA3start, x5start, sapTPA3start, x5growstart, sapMORT, sapRECR, enderrorsapMORT, enderrorsapRECR, y3pctdif, y5pctdif, TPA3pctdif, sapTPA3pctdif ,x5pctdif, x5growpctdif, minx3, maxx3)#
#
}#
}#
F5 <- rbind(F5,F4)#
}#
#
F6 <- as.data.table(F5)#
setnames(F6, c("x3","y3","y5", "TPA","sapTPA", "x5", "x5grow", "errory3","errory5", "errorTPA","errorsapTPA", "errorx5","errorx5grow", "n", "v", "col3", "y3start", "y5start", "TPA3start", "x5start", "sapTPA3start", "x5growstart", "sapMORTpct", "sapRECRpct", "enderrorsapMORT", "enderrorsapRECR", "y3pctdif", "y5pctdif", "TPA3pctdif", "sapTPA3pctdif", "x5pctdif", "x5growpctdif", "minx3", "maxx3"))#
F6 <- subset(F6, n>100)
F6
F7
F6 <- subset(F6, n>100) #
#
y3start1 <- mean(F6$y3start)#
y5start1 <- mean(F6$y5start)#
TPA3start1 <-mean(F6$TPA3start) #mean(F2$TPAchg) ##
sapTPA3start1 <-mean(F6$sapTPA3start)#
x5start1 <- mean((F6$x5start))#
x5growstart1 <- mean((F6$x5growstart)*5) #*10)#
#
#convert difference btw ac and nonac to relative difference from average#
F6$y3<- y3start1*(F6$y3pctdif/100)#
F6$TPA<- TPA3start1*(F6$TPA3pctdif/100)#
F6$sapTPA<- sapTPA3start1*(F6$sapTPA3pctdif/100)#
F6$x5<- x5start1*(F6$x5pctdif/100)#
F6$x5grow<- x5growstart1*(F6$x5growpctdif/100)#
#
F6$errory3<-(((y3start1-F6$y3start)/F6$y3start)*F6$errory3)+F6$errory3#
F6$errory5<-(((y5start1-F6$y5start)/F6$y5start)*F6$errory5)+F6$errory5#
F6$errorTPA<-(((TPA3start1-F6$TPA3start)/F6$TPA3start)*F6$errorTPA)+F6$errorTPA#
F6$errorsapTPA<-(((sapTPA3start1-F6$sapTPA3start)/F6$sapTPA3start)*F6$errorsapTPA)+F6$errorsapTPA#
F6$errorx5<-(((x5start1-F6$x5start)/F6$x5start)*F6$errorx5)+F6$errorx5#
F6$errorx5grow<-((((mean(F6$x5growstart)-F6$x5growstart)/F6$x5growstart)*F6$errorx5grow)+F6$errorx5grow)*5#
#convert radial growth from cm to mm#
#F6$x5grow <- F6$x5grow*5 #*10#
#F6$errorx5grow <- F6$errorx5grow*5 #*10#
#convert to percent difference#
F6$sapMORTpct <-  (F6$sapMORTpct-100)#
F6$sapRECRpct <-  (F6$sapRECRpct-100)#
F6$sapCpct <-  ((F6$y3-F6$y5)/F6$y3)*100#
#calc plot y-scales#
sapscale  <-  30 #mean(F6$sapTPA3start)/mean(F6$TPA3start) #
Cymax  <-  max(F6$y3+F6$errory3)#
Cymin  <-  min(F6$y3-F6$errory3)#
#TPAymax <- max(F6$sapTPA/sapscale+F6$errorsapTPA/sapscale, na.rm=T)#
TPAymax1 <- (max(F6$sapTPA+F6$errorsapTPA))/sapscale#
TPAymax2 <- (max(F6$TPA+F6$errorTPA))#
TPAymax <- max(TPAymax1, TPAymax2)#
TPAymin2 <- (min(F6$TPA-F6$errorTPA))#
TPAymin1 <- (min(F6$sapTPA-F6$errorsapTPA))/sapscale#
TPAymin <- min(TPAymin1, TPAymin2)#
DIAmax1 <- (max(F6$x5grow+F6$errorx5grow))#
DIAmin1 <- (min(F6$x5grow-F6$errorx5grow))#
DIAmax2 <- max(F6$x5+F6$errorx5)#
DIAmin2 <- min(F6$x5-F6$errorx5)#
DIAmin <- min(DIAmin2, DIAmin1)#
DIAmax <- max(DIAmax2, DIAmax1)#
sapmax <- max(F6$sapMORTpct+F6$enderrorsapMORT)#
sapmin <- min(F6$sapMORTpct-F6$enderrorsapMORT)#
#
#plot only sapling data that is significantly different with scaling than larger trees. #
#F6$sapTPA <- ifelse(((F6$sapTPA/sapscale)>(F6$TPA+F6$errorTPA))|((F6$sapTPA/sapscale)<(F6$TPA-F6$errorTPA)), F6$sapTPA, NA)#
#F6$x5grow <- ifelse(((F6$x5grow-F6$errorx5grow)>(F6$x5))|((F6$x5grow)<(F6$x5-F6$errorx5)), F6$x5grow, NA)#
#
#set up 5-year precip plots using ggplot#
F7 <- subset(F6, v==1)#
F7$sapTPA <- ifelse(F7$col3==2,NA, F7$sapTPA)#
v=1#
col4 <- c(dt,"grey35", pt)#
#
#NPP plot#
#limitssap <- aes(ymax=(y5/y5scale +errorsapTPA/sapscale)+TPA3start1, ymin=(sapTPA/sapscale-errorsapTPA/sapscale)+TPA3start1)#
limits <- aes(ymax=(y3+errory3)+y3start1, ymin=(y3-errory3+y3start1))#
P1 <- ggplot(F7, aes(x=x3, y=(y3+y3start1), fill=as.factor(col3)))  +geom_hline(y=y3start1, linetype=3) +geom_vline(linetype=3)+ geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21)  + theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_text(angle = 90, hjust = 0.5, size=11, colour="black"))+ theme(axis.text.x = element_blank())+ scale_y_continuous(name=expression(paste(" Productivity (Mg C ha"^"-1","yr" ^"-1",")")), limits=c(Cymin, Cymax)+y3start1, breaks=c(round(y3start1, 1)-0.5,  round(y3start1, 3),  round(y3start1, 1)+0.3,  round(y3start1, 1)+0.6), labels=c(round(y3start1, 1)-0.5, round(y3start1, 1), round(y3start1, 1)+0.3, round(y3start1, 1)+0.6)) + scale_x_continuous(element_blank(), breaks=c(-0.5, 0, 0.5)) + theme(legend.title=element_blank(), legend.key=element_blank()) +scale_fill_manual( name=NULL, breaks=c("1", "3"), label=element_blank(), values=c(col4))  + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) #+coord_cartesian(ylim = c(0.7, 2.65))#
#Stem density plot#
limits <- aes(ymax=(TPA+errorTPA)+TPA3start1, ymin=(TPA-errorTPA)+TPA3start1)#
limitssap <- aes(ymax=(sapTPA/sapscale +errorsapTPA/sapscale)+TPA3start1, ymin=(sapTPA/sapscale-errorsapTPA/sapscale)+TPA3start1)#
P2 <- ggplot(F7, aes(x=x3, y=(TPA+TPA3start1), fill=as.factor(col3)))  +geom_hline(y=TPA3start1, linetype=3) +geom_vline(linetype=3) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(-0.07, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_text(angle = 90, hjust = 0.5, size=11, colour="black"))+ theme(axis.text.x = element_blank())+ scale_y_continuous(name=expression(paste(Delta, " Stem density (ha"^"-1","yr" ^"-1",")")), limits=c(TPAymin, TPAymax)+TPA3start1, breaks=c(2.0, TPA3start1, 8.0), labels=c(expression("2.0"[" (-35)"]), expression("4.6" [" (43)"]), expression("8.0" [" (145)"]))) + scale_x_continuous(element_blank(), breaks=c(-0.5, 0, 0.5)) +scale_fill_manual(values=c(col4), breaks=NULL) +geom_errorbar(limitssap, width=0.05, colour="grey70") + geom_point(aes( y=(sapTPA/sapscale)+ TPA3start1, col=as.factor(col3)), size=2, pch=8)+ theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.1),plot.margin=unit(c(0,0,0.65,0), "cm")) +scale_colour_manual(values=c(col9), name=NULL, breaks=c("2"), label=c("(Saplings)"))+ geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) #+coord_cartesian(ylim = c(1.8, 9.85))#
#Radial growth plot#
limits <- aes(ymax=(x5+errorx5)+x5start1, ymin=(x5-errorx5)+x5start1)#
limits2 <- aes(ymax=(x5grow+errorx5grow)+ x5start1, ymin=(x5grow-errorx5grow)+ x5start1)#
P3 <- ggplot(F7, aes(x=x3, y=(x5+x5start1), fill=as.factor(col3)))  +geom_hline(y=x5start1, linetype=3) +geom_vline(linetype=3)  +theme(axis.line = element_line( size = 0.35)) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm"))  + theme(axis.ticks.margin = unit(-0.03, "cm")) + theme(axis.ticks.length = unit(0.1, "cm"))  +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_text(angle = 90, hjust = 0.5, size=11, colour="black"))+ theme(axis.text.x = element_text( hjust = 0.5, size=11, colour="black")) + scale_y_continuous(name=expression(paste(Delta, " Mean diameter (cm yr" ^"-1",")")), limits=c(DIAmin, DIAmax)+x5start1, breaks=c(0.07, x5start1, 0.17), labels=c(expression("0.07"[" (0.55)"]), expression("0.11" [" (0.63)"]), expression("0.17" [" (0.75)"]))) + scale_x_continuous(name=expression(paste("   Precipitation JJA 5-yr\nmean anomaly (mm day"^"-1",")")), breaks=c(-0.5, 0, 0.5)) +scale_fill_manual(values=c(col4), breaks=NULL)  + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.55,0.1), plot.margin=unit(c(-0.5,0,0.34, -0.04), "cm")) + theme(axis.title.x = element_text(vjust=-0.85)) + geom_errorbar(limits2, width=0.05, colour="grey70") + geom_point(aes(y=(x5grow+ x5start1), col=as.factor(col3)), size=2.5, pch=17)  +scale_colour_manual(values=c(col4), name=NULL, breaks=c("2"), label=expression(paste("(Radial growth mm yr" ^"-1",")"))) + geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21)#
#set up 5-year TEMP plots using ggplot#
F8 <- subset(F6, v==2) # & x3>0.2)#
v=2#
col8 <- c(ct,"grey35", wt)#
#NPP plot#
limits <- aes(ymax=(y3+errory3)+y3start1, ymin=(y3-errory3+y3start1))#
T1 <- ggplot(F8, aes(x=x3, y=(y3+y3start1), fill=as.factor(col3)))  +geom_hline(y=y3start1, linetype=3)+geom_vline(linetype=3)+ geom_errorbar(limits, width=0.01, colour="grey50")+ geom_point(colour="grey25", size=2.5, pch=21) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_blank())+ theme(axis.text.x =element_blank())+ scale_y_continuous(element_blank(), limits=c(Cymin, Cymax)+y3start1,  breaks=c(round(y3start1, 1)-0.5,  round(y3start1, 3),  round(y3start1, 1)+0.3,  round(y3start1, 1)+0.6)) + scale_x_continuous(element_blank(),breaks=c(-0.5, 0, 0.5, 1.0))+ theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.9),plot.margin=unit(c(0,0,0,0), "cm")) +scale_fill_manual( name=NULL, breaks=c("1", "3"), label=c("Cool 5-yr period", "Warm 5-yr period"), values=c(col8)) +theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) #+coord_cartesian(ylim = c(0.7, 2.65))#
#
#stem density#
limits <- aes(ymax=(TPA+errorTPA)+TPA3start1, ymin=(TPA-errorTPA)+TPA3start1)#
T2 <- ggplot(F8,aes(x=x3, y=(TPA+TPA3start1), fill=as.factor(col3)))    +geom_hline(y=TPA3start1, linetype=3) +geom_vline(linetype=3) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm"))  + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_blank())+ theme(axis.text.x =(element_blank())) + scale_y_continuous(element_blank(), limits=c(TPAymin, TPAymax)+TPA3start1, breaks=c(2.0, TPA3start1, 8.0)) + scale_x_continuous(element_blank())  +scale_fill_manual(values=c(col8), breaks=NULL) +geom_errorbar(limitssap, width=0.05, colour="grey70") + geom_point(aes( y=(sapTPA/sapscale)+ TPA3start1, col=as.factor(col3)), size=2, pch=8) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.1),plot.margin=unit(c(0,0,0.5,0), "cm")) +scale_colour_manual(values=c(col8), name=NULL, breaks=c("2"), label=c("(Saplings)"))+ geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) #+coord_cartesian(ylim = c(1.8, 9.85)) #
#
#Radial growth plot#
limits <- aes(ymax=(x5+errorx5)+x5start1, ymin=(x5-errorx5)+x5start1)#
limits2 <- aes(ymax=(x5grow+errorx5grow)+ x5start1, ymin=(x5grow-errorx5grow)+ x5start1)#
T3 <- ggplot(F8, aes(x=x3, y=(x5+x5start1), fill=as.factor(col3))) + geom_hline(y=x5start1, linetype=3) +geom_vline(linetype=3)  +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y =element_blank())+ theme(axis.text.x = element_text( hjust = 0.5, size=11, colour="black")) + scale_y_continuous(element_blank(), limits=c(DIAmin, DIAmax)+x5start1,breaks=c(0.02, x5start1, 0.2)) + scale_x_continuous(name=("Temperature JJA 5-yr\nmean anomaly (C)")) +scale_fill_manual(values=c(col8), breaks=NULL) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.43,0.1), plot.margin=unit(c(-0.5,0,0, 0), "cm"))+ geom_errorbar(limits2, width=0.05, colour="grey70") + geom_point(aes( y=(x5grow+ x5start1), col=as.factor(col3)), size=2.5, pch=17)  +scale_colour_manual(values=c(col8), name=NULL, breaks=c("2"), label=expression(paste("(Radial growth mm yr" ^"-1",")"))) + geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) #
#set up 1-year soil moist. plots using ggplot#
F9 <- subset(F6, v==3)#
v=3#
col9 <- c(de,"grey35", pe)#
limits <- aes(ymax=(y3+errory3)+y3start1, ymin=(y3-errory3+y3start1))#
#NPP plot#
R1 <- ggplot(F9,aes(x=x3, y=(y3+y3start1), fill=as.factor(col3))) +geom_hline(y=y3start1, linetype=3) +geom_vline(linetype=3)+ geom_errorbar(limits, width=0.01, colour="grey50")+ geom_point(colour="grey25", size=2.5, pch=21) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_blank())+ theme(axis.text.x =(element_blank())) + scale_y_continuous(element_blank(), limits=c(Cymin, Cymax)+y3start1,  breaks=c(round(y3start1, 1)-0.5,  round(y3start1, 3),  round(y3start1, 1)+0.3,  round(y3start1, 1)+0.6)) + scale_x_continuous(element_blank()) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.9),plot.margin=unit(c(0,0,0,0), "cm")) +scale_fill_manual( name=NULL, breaks=c("1", "3"), label=c( "Dry summer", "Wet summer"), values=c(col9)) +theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) #+coord_cartesian(ylim = c(0.7, 2.65))#
#
#Stem density plot#
limits <- aes(ymax=(TPA+errorTPA)+TPA3start1, ymin=(TPA-errorTPA)+TPA3start1)#
limitssap <- aes(ymax=(sapTPA/sapscale +errorsapTPA/sapscale)+TPA3start1, ymin=(sapTPA/sapscale-errorsapTPA/sapscale)+TPA3start1)#
R2 <- ggplot(F9,aes(x=x3, y=(TPA+TPA3start1), fill=as.factor(col3)))   +geom_hline(y=TPA3start1, linetype=3) +geom_vline(linetype=3)+theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_blank())+ theme(axis.text.x =(element_blank()))+ scale_y_continuous(element_blank(), limits=c(TPAymin, TPAymax)+TPA3start1, breaks=c(2.0, TPA3start1, 8.0)) + scale_x_continuous(element_blank()) +scale_fill_manual(values=c(col9), breaks=NULL) +geom_errorbar(limitssap, width=0.10, colour="grey70") + geom_point(aes( y=(sapTPA/sapscale)+ TPA3start1, col=as.factor(col3)), size=2, pch=8) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.1), plot.margin=unit(c(0,0,0.5,0), "cm")) +scale_colour_manual(values=c(col9), name=NULL, breaks=c("2"), label=c("(Saplings)"))+ geom_errorbar(limits, width= 0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) #+coord_cartesian(ylim = c(1.8, 9.85))#
#
#radial growth plot#
limits <- aes(ymax=(x5+errorx5)+x5start1, ymin=(x5-errorx5)+x5start1)#
limits2 <- aes(ymax=(x5grow+errorx5grow)+ x5start1, ymin=(x5grow-errorx5grow)+ x5start1)#
R3 <- ggplot(F9, aes(x=x3, y=(x5+x5start1), fill=as.factor(col3)))   +geom_hline(y=x5start1, linetype=3) +geom_vline(linetype=3) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_blank())+ theme(axis.text.x = element_text( hjust = 0.5, size=11, colour="black")) + scale_y_continuous(element_blank(), limits=c(DIAmin, DIAmax)+x5start1, breaks=c(0.02, x5start1, 0.2)) + scale_x_continuous(name=("Soil moisture JJA 1-yr\nmin/max (z-score)"), breaks=c(-2.0, -1.0, 0.0, 1.0), labels=c("-2.0", "-1.0", "0.0", "1.0")) +scale_fill_manual(values=c(col9), breaks=NULL) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.53,0.1), plot.margin=unit(c(-0.5,0,0, 0), "cm")) + geom_errorbar(limits2, width=0.10, colour="grey70")+ geom_point(aes( y=(x5grow+ x5start1), col=as.factor(col3)), size=2.5, pch=17)  +scale_colour_manual(values=c(col9), name=NULL, breaks=c("2"), label=expression(paste("(Radial growth mm yr" ^"-1",")"))) + geom_errorbar(limits, width=0.01, colour="grey50")  + geom_point(colour="grey25", size=2.5, pch=21)#
#
#set up plot window and plot all together#
dev.new(width=6.75, height=8) #8#
grid.arrange(P1,T1,R1,P2,T2,R2,P3,T3,R3, ncol=3)#
#grid.text(0.045, unit(0.575,"npc") - unit(1,"line"), rot=90, label="(30)", gp=gpar(cex=0.75))#
print(F7)#
#######END Fig 3.  Climate Correlations
F8
F7
SDx3<-sd(f22$TEMP5growchg, na.rm=TRUE)
vari <- c("PREC5growchg", "TEMP5growchg", "SWpluvial5chg", "SWdrought5chg") #"PREC5growchg", "TEMP5growchg"#
vari1 <- subset(F2, select=c(PREC5growchg, TEMP5growchg, SWpluvial5chg, SWdrought5chg))#
vari2 <- c("5-yr JJA precip. anomaly (mm/day)", "5-yr JJA temp. anomaly (C)", "1-yr JJA soil moist. anomaly (z-score)", "1-yr JJA soil moist. anomaly (z-score)")#
#
seq1<- c(0.2, 0.4, NA, 0.66, 0.86, 0.96, 1, NA)#
#
if(coniferous==1 | deciduous==1){seq1<- c(0.2, 0.4, NA, 0.5, 0.75, 0.9, 1)} #broader quantiles for smaller dataset#
#(100-(c(0.2, 0.4, NA, 0.5, 0.75, 0.9, 1)*100))/2#
#
qt1a <- c(quantile(F2$PREC5growchg[F2$PREC5growchg<0],(1-rev(seq1))))  #
 qt2a <- c(quantile(F2$PREC5growchg[F2$PREC5growchg>0], seq1)) #
 qt1b <- c(quantile(F2$TEMP5growchg[F2$TEMP5growchg<0],(1-rev(seq1)))) #
 qt2b <- c(quantile(F2$TEMP5growchg[F2$TEMP5growchg>0], seq1))  #
 qt3 <- c(quantile(F2$SWdrought5chg[F2$SWdrought5chg<0],(1-rev(seq1)))) #
 qt4 <- c(quantile(F2$SWpluvial5chg[F2$SWpluvial5chg>0], seq1)) #
int <- 1#
F5 <- NULL#
for(v in 1:3)#
{#
	if(v==1){#
		 qt1<- qt1a#
		 qt2<- qt2a#
	}#
	if(v==2){#
		 qt1<- qt1b#
		 qt2<- qt2b#
	}#
F4<-foreach(c = 1:16, .combine=rbind) %dopar%#
{#
	if(c<=8 & v<3)#
	{#
		f22 <- subset(F2, get(vari[v])>= qt2[c] & get(vari[v])<=  qt2[c+int]) 		#
		f23 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- vari[v]#
		col3=ifelse(qt2[c]>= 0.2, 3, 2)#
		qta <- qt2[c]#
		qtb <- qt2[c+int]#
		}#
	if(c>8 & v<3)#
	{ #
		d=c-8#
		f22 <- subset(F2, get(vari[v])<= qt1[d] & get(vari[v])>= qt1[d-int]) #		#
		f23 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- vari[v]#
		col3=ifelse(qt1[d]<= -0.1, 1, 2)#
		qtb <- qt1[d]#
		qta <- qt1[d-int]#
	}#
	if(c<=8 & v==3)#
	{#
			f22 <- subset(F2, get(vari[v])>= qt4[c] & get(vari[v])<= qt4[c+int] & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.15, na.rm=TRUE)) #exclude droughts#
			f23 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.15, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- "Wet summer"#
		col3=ifelse(qt4[c]>=0.2, 3, 2)#
		qta <- qt4[c]#
		qtb <- qt4[c+int]#
	}#
	if(c>8 & v==3)#
	{ #
		d=c-8#
		f22 <- subset(F2, get(vari[v+1])< qt3[d] & get(vari[v+1])>= qt3[d-int] & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.85, na.rm=TRUE)) #exclude wet summers  #
		f23 <- subset(F2, get(vari[v+1])<= quantile(vari1[[v+1]], 0.7, na.rm=TRUE) & get(vari[v+1])>= quantile(vari1[[v+1]], 0.3, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.85, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- "Dry summer"#
		col3=ifelse(qt3[d]<= -0.2, 1, 2)#
		qtb <- qt3[d]#
		qta <- qt3[d-int]#
	}#
f22$nsamp <- (ave(f22$PREV_DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #sample proportion of each grid cell #
#print(c(table(f22$nsamp<0.75), col3))#
#
#f22$col3 <- col3#
PLT_CNsamp1 <- f23$PLT_CN   #
#
f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, nsamp))#
#
F33 <- subset(F2, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
F33 <- merge(F33, f24, all.x=T, by="LATLON")#
F33 <- subset(F33, PLT_CN %in% (PLT_CNsamp1)) # not neccesaary bc weighting will eliminate latlons not in f22!#
#
F33$aPREVSTOCKDIAbin <- floor(F33$PREV_STOCKINGmid/10)*10000+(floor(F33$PREV_DIAmean/2)*2)#
F33$n1 <- 1#
F33$aPREVSTOCKDIAbinlength <- ave(F33$n1, F33$aPREVSTOCKDIAbin, FUN=function(x) sum(x, na.rm=TRUE))#
F33$nbin <- ave(F33$nsamp, F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)) #average AC proportion in stock/dia bins#
#
F33 <- subset(F33, aPREVSTOCKDIAbinlength> 10) #Null model needs at least 10 comparison plots at each diameter/stocking bin#
#
##Carbon Model#
c6 <- (((F33$carbon1sum-F33$PREVcarbon1sum)* 0.00112085116 )/F33$REMPER)#
F33$avgCchg <- (ave(c6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)))/F33$nbin #multiply by AC proportion divided by mean proportion in each stocking/dia bin#
#
##Carbon Model 5 inch and greater trees#
c5 <- (((F33$carbon5sum-F33$PREVcarbon5sum)* 0.00112085116 )/F33$REMPER)#
F33$avgC5chg <- (ave(c5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)))/F33$nbin#
#
##radial growth  #
rx5 <- (F33$DIAchgmean/F33$REMPER) ###
F33$avgx5 <- ave(rx5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##radial growth#
rx5grow <- (F33$DIAgrowmean/F33$REMPER)/2 ## convert from diameter to radial growth#
F33$avgx5grow <- ave(rx5grow*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##Mortality diameter mean#
mortrx5 <- F33$mortDIAmean  ##
F33$avgmortx5 <- ave(mortrx5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##Density Model#
y6 <- (F33$TPAsum-F33$PREV_TPAsum)/F33$REMPER  ##
F33$avgTPAchg <- ave(y6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##SAPLINGS Density Model#
sap6 <- ((F33$TPAsum05/0.404686)-(F33$PREVTPAsum05/0.404686))/F33$REMPER  # convert to hectares#
F33$sapavgTPAchg <- ave(sap6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
##SAPLINGS mortality /recruitment#
F33$sapavgMORT <- ave(F33$sapMortsum*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin #sapling mortality per plot#
F33$sapavgRECR <- ave(F33$sapRecruitsum*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin #sapling plot recuritment#
#
#SISP ratio#
F33$sp1<- mean(F33$SISPchg, na.rm=T) #F33$nsamp#
F33$spavgchg <- ave(F33$sp1,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)) #/F33$nbin#
#
#Merge null and conditional model data#
F34 <- subset(F33, !duplicated(aPREVSTOCKDIAbin), select=c(aPREVSTOCKDIAbin, avgCchg, avgx5, avgx5grow, avgTPAchg, sapavgTPAchg, avgC5chg, avgmortx5, sapavgMORT, sapavgRECR))#
f22$aPREVSTOCKDIAbin <- floor(f22$PREV_STOCKINGmid/10)*10000+(floor(f22$PREV_DIAmean/2)*2)#
f22 <- merge(f22, F34, by="aPREVSTOCKDIAbin") #, all.x=T#
#carbon 1 and 5 inch#
c8 <- (((f22$carbon1sum-f22$PREVcarbon1sum)* 0.00112085116 )/f22$REMPER)#
f22$xcarbon <- (c8-f22$avgCchg)#
c55 <- (((f22$carbon5sum-f22$PREVcarbon5sum)* 0.00112085116 )/f22$REMPER)#
f22$xcarbon5 <- ((c55)-f22$avgC5chg)#
##mean diameter change  #
x8 <- (f22$DIAchgmean/f22$REMPER)  # #
f22$x5 <-  (x8-f22$avgx5)#
#
##radial growth  #
x8grow <- (f22$DIAgrowmean/f22$REMPER)/2  # convert from diameter to radial growth#
f22$x5grow <-  (x8grow-f22$avgx5grow)#
#
##mortality size#
mortx8 <- f22$mortDIAmean ##
f22$mortx5 <-  (mortx8-f22$avgmortx5)#
#
##Density Model#
TPA <- (f22$TPAsum-f22$PREV_TPAsum)/f22$REMPER  ##
f22$TPAchg <-  (TPA-f22$avgTPAchg)#
#
##SAPLING Density Model#
sapTPA <- ((f22$TPAsum05/0.404686)-(f22$PREVTPAsum05/0.404686))/f22$REMPER  ##
f22$sapTPAchg <-  (sapTPA-f22$sapavgTPAchg)#
f22$sapMORTchg <- (f22$sapMortsum/f22$sapavgMORT)*100 #sapling mortaltiy percent difference from null#
f22$sapRECRchg <- (f22$sapRecruitsum/f22$sapavgRECR)*100 #sapling recruitment percent difference from null#
#
##SISP ratio#
# sp22 <- mean(f22$SISPchg-f22$sapavgTPAchg, na.rm=T)#
#
#calculate mean condition for x-axis based on v loop#
if(length(f22$xcarbon)>= 10)#
{#
if(v==2)#
{#
	x3 <- mean(f22$TEMP5growchg, na.rm=TRUE)#
	minx3<-min(f22$TEMP5growchg, na.rm=TRUE)#
	maxx3<-max(f22$TEMP5growchg, na.rm=TRUE)#
	SDx3<-sd(f22$TEMP5growchg, na.rm=TRUE)#
}#
if(v==1)#
{#
	x3 <- mean(f22$PREC5growchg, na.rm=TRUE)#
	minx3<-min(f22$PREC5growchg, na.rm=TRUE)#
	maxx3<-max(f22$PREC5growchg, na.rm=TRUE)#
	SDx3<-sd(f22$PREC5growchg, na.rm=TRUE)#
#
}#
if(v==3)#
{#
	x3 <- ifelse(c<=8,mean(f22$SWpluvial5chg, na.rm=TRUE), mean(f22$SWdrought5chg, na.rm=TRUE))#
	minx3 <- ifelse(c<=8,min(f22$SWpluvial5chg, na.rm=TRUE), min(f22$SWdrought5chg, na.rm=TRUE))#
	maxx3 <- ifelse(c<=8,max(f22$SWpluvial5chg, na.rm=TRUE), max(f22$SWdrought5chg, na.rm=TRUE))#
	SDx3 <- ifelse(c<=8,sd(f22$SWpluvial5chg, na.rm=TRUE), sd(f22$SWdrought5chg, na.rm=TRUE))#
}#
#
#calculate y-axis variables#
#USxcarbon<- mean(F2$carbon1sum-F2$PREVcarbon1sum)* 0.00112085116/mean(F2$REMPER)#
y3 <- mean(f22$xcarbon, na.rm=TRUE) #
y3pctdif<-(mean(f22$xcarbon, na.rm=TRUE)/mean(f22$avgCchg, na.rm=TRUE))*100   ##
#y3<- (y3pctdif/100)*USxcarbon#
y3start <- mean(f22$avgCchg, na.rm=T) #null model zero line for plotting#
#
y5 <- mean(f22$xcarbon5, na.rm=TRUE)  ##
y5pctdif<-(mean(f22$xcarbon5, na.rm=TRUE)/mean(f22$avgC5chg, na.rm=TRUE))*100   ##
y5start <- mean(f22$avgC5chg, na.rm=T) #null model zero line for plotting#
#USTPA3 <- mean((F2$TPAsum-F2$PREV_TPAsum)/F2$REMPER)#
TPA3pctdif<-(mean(f22$TPAchg, na.rm=TRUE)/mean(f22$avgTPAchg, na.rm=TRUE))*100   ##
TPA3 <-mean(f22$TPAchg, na.rm=TRUE)#
TPA3start <- mean(f22$avgTPAchg, na.rm=T) #null model zero line for plotting#
#
#USsapTPA3 <- mean(((F2$TPAsum05/0.404686)-(F2$PREVTPAsum05/0.404686))/F2$REMPER)#
sapTPA3pctdif <- (mean(f22$sapTPAchg, na.rm=TRUE)/ mean(f22$sapavgTPAchg, na.rm=T))*100##
sapTPA3 <- mean(f22$sapTPAchg, na.rm=TRUE) ##
sapTPA3start <- mean(f22$sapavgTPAchg, na.rm=T)#
#
#USx5 <- mean(F2$DIAchgmean/F2$REMPER, na.rm=T)/2  # convert from diameter to radial growth#
x5pctdif <- (mean(f22$x5, na.rm=TRUE)/mean(f22$avgx5, na.rm=T))*100  ##
x5<- mean(f22$x5, na.rm=TRUE)#
x5start <- mean(f22$avgx5, na.rm=T)#
#
#USx5grow <- mean(F2$DIAgrowmean/F2$REMPER, na.rm=T)/2  # convert from diameter to radial growth#
x5growpctdif <- (mean(f22$x5grow, na.rm=TRUE)/mean(f22$avgx5grow, na.rm=T))*100  ##
x5grow <- mean(f22$x5grow, na.rm=TRUE) ##
x5growstart <- mean(f22$avgx5grow, na.rm=T)#
#
mortx5 <- mean(f22$mortx5, na.rm=TRUE) ##
mortx5start <-   mean(mortx8, na.rm=T)#
sapMORT <- mean(f22$sapMORTchg, na.rm=T)#
sapRECR <- mean(f22$sapRECRchg, na.rm=T)#
#
#calc y-axis error#
R2 <- 10 #repetitions set to 10 for faster looping#
enderror <- boot(f22$xcarbon, meanFunc, R=R2)#
enderrory3 <- sqrt(var(enderror$t))*1.96#
enderror5 <- boot(f22$xcarbon5, meanFunc, R= R2)#
enderrory5 <- sqrt(var(enderror5$t))*1.96#
enderror2 <- boot(f22$TPAchg, meanFunc, R= R2)#
enderrorTPA <- sqrt(var(enderror2$t))*1.96#
enderrorsap <- boot(f22$sapTPAchg, meanFunc, R= R2)#
enderrorsapTPA <- sqrt(var(enderrorsap$t))*1.96#
enderror4 <- boot(f22$x5, meanFunc, R= R2)#
enderrorx5 <- sqrt(var(enderror4$t))*1.96#
enderrorx5grow4 <- boot(f22$x5grow, meanFunc, R= R2)#
enderrorx5grow <- sqrt(var(enderrorx5grow4$t))*1.96#
enderrorsapMORT <- std.error(f22$sapMORTchg, na.rm=T)#
enderrorsapRECR <- std.error(f22$sapRECRchg, na.rm=T)#
#
# enderrorsp2error <- boot((f22$SISPchg-f22$sapavgTPAchg), meanFunc, R= R2)#
# enderrorsp22error <- sqrt(var(enderrorsp2error$t))*1.96#
#
n <- length(f22$xcarbon) #conditional model n#
nnull <- length(F33$avgx5) #null model n#
#print(c(n, ccond, c, nnull))#
#
f23 <- c(x3, y3, y5, TPA3, sapTPA3, x5, x5grow, enderrory3, enderrory5, enderrorTPA, enderrorsapTPA, enderrorx5, enderrorx5grow, n, v, col3, y3start, y5start, TPA3start, x5start, sapTPA3start, x5growstart, sapMORT, sapRECR, enderrorsapMORT, enderrorsapRECR, y3pctdif, y5pctdif, TPA3pctdif, sapTPA3pctdif ,x5pctdif, x5growpctdif, minx3, maxx3, SDx3)#
#
}#
}#
F5 <- rbind(F5,F4)#
}#
#
F6 <- as.data.table(F5)#
setnames(F6, c("x3","y3","y5", "TPA","sapTPA", "x5", "x5grow", "errory3","errory5", "errorTPA","errorsapTPA", "errorx5","errorx5grow", "n", "v", "col3", "y3start", "y5start", "TPA3start", "x5start", "sapTPA3start", "x5growstart", "sapMORTpct", "sapRECRpct", "enderrorsapMORT", "enderrorsapRECR", "y3pctdif", "y5pctdif", "TPA3pctdif", "sapTPA3pctdif", "x5pctdif", "x5growpctdif", "minx3", "maxx3", "SDx3"))#
F6 <- subset(F6, n>100) #
#
y3start1 <- mean(F6$y3start)#
y5start1 <- mean(F6$y5start)#
TPA3start1 <-mean(F6$TPA3start) #mean(F2$TPAchg) ##
sapTPA3start1 <-mean(F6$sapTPA3start)#
x5start1 <- mean((F6$x5start))#
x5growstart1 <- mean((F6$x5growstart)*5) #*10)#
#
#convert difference btw ac and nonac to relative difference from average#
F6$y3<- y3start1*(F6$y3pctdif/100)#
F6$TPA<- TPA3start1*(F6$TPA3pctdif/100)#
F6$sapTPA<- sapTPA3start1*(F6$sapTPA3pctdif/100)#
F6$x5<- x5start1*(F6$x5pctdif/100)#
F6$x5grow<- x5growstart1*(F6$x5growpctdif/100)#
#
F6$errory3<-(((y3start1-F6$y3start)/F6$y3start)*F6$errory3)+F6$errory3#
F6$errory5<-(((y5start1-F6$y5start)/F6$y5start)*F6$errory5)+F6$errory5#
F6$errorTPA<-(((TPA3start1-F6$TPA3start)/F6$TPA3start)*F6$errorTPA)+F6$errorTPA#
F6$errorsapTPA<-(((sapTPA3start1-F6$sapTPA3start)/F6$sapTPA3start)*F6$errorsapTPA)+F6$errorsapTPA#
F6$errorx5<-(((x5start1-F6$x5start)/F6$x5start)*F6$errorx5)+F6$errorx5#
F6$errorx5grow<-((((mean(F6$x5growstart)-F6$x5growstart)/F6$x5growstart)*F6$errorx5grow)+F6$errorx5grow)*5#
#convert radial growth from cm to mm#
#F6$x5grow <- F6$x5grow*5 #*10#
#F6$errorx5grow <- F6$errorx5grow*5 #*10#
#convert to percent difference#
F6$sapMORTpct <-  (F6$sapMORTpct-100)#
F6$sapRECRpct <-  (F6$sapRECRpct-100)#
F6$sapCpct <-  ((F6$y3-F6$y5)/F6$y3)*100#
#calc plot y-scales#
sapscale  <-  30 #mean(F6$sapTPA3start)/mean(F6$TPA3start) #
Cymax  <-  max(F6$y3+F6$errory3)#
Cymin  <-  min(F6$y3-F6$errory3)#
#TPAymax <- max(F6$sapTPA/sapscale+F6$errorsapTPA/sapscale, na.rm=T)#
TPAymax1 <- (max(F6$sapTPA+F6$errorsapTPA))/sapscale#
TPAymax2 <- (max(F6$TPA+F6$errorTPA))#
TPAymax <- max(TPAymax1, TPAymax2)#
TPAymin2 <- (min(F6$TPA-F6$errorTPA))#
TPAymin1 <- (min(F6$sapTPA-F6$errorsapTPA))/sapscale#
TPAymin <- min(TPAymin1, TPAymin2)#
DIAmax1 <- (max(F6$x5grow+F6$errorx5grow))#
DIAmin1 <- (min(F6$x5grow-F6$errorx5grow))#
DIAmax2 <- max(F6$x5+F6$errorx5)#
DIAmin2 <- min(F6$x5-F6$errorx5)#
DIAmin <- min(DIAmin2, DIAmin1)#
DIAmax <- max(DIAmax2, DIAmax1)#
sapmax <- max(F6$sapMORTpct+F6$enderrorsapMORT)#
sapmin <- min(F6$sapMORTpct-F6$enderrorsapMORT)#
#
#plot only sapling data that is significantly different with scaling than larger trees. #
#F6$sapTPA <- ifelse(((F6$sapTPA/sapscale)>(F6$TPA+F6$errorTPA))|((F6$sapTPA/sapscale)<(F6$TPA-F6$errorTPA)), F6$sapTPA, NA)#
#F6$x5grow <- ifelse(((F6$x5grow-F6$errorx5grow)>(F6$x5))|((F6$x5grow)<(F6$x5-F6$errorx5)), F6$x5grow, NA)#
#
#set up 5-year precip plots using ggplot#
F7 <- subset(F6, v==1)#
F7$sapTPA <- ifelse(F7$col3==2,NA, F7$sapTPA)#
v=1#
col4 <- c(dt,"grey35", pt)#
#
#NPP plot#
#limitssap <- aes(ymax=(y5/y5scale +errorsapTPA/sapscale)+TPA3start1, ymin=(sapTPA/sapscale-errorsapTPA/sapscale)+TPA3start1)#
limits <- aes(ymax=(y3+errory3)+y3start1, ymin=(y3-errory3+y3start1))#
P1 <- ggplot(F7, aes(x=x3, y=(y3+y3start1), fill=as.factor(col3)))  +geom_hline(y=y3start1, linetype=3) +geom_vline(linetype=3)+ geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21)  + theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_text(angle = 90, hjust = 0.5, size=11, colour="black"))+ theme(axis.text.x = element_blank())+ scale_y_continuous(name=expression(paste(" Productivity (Mg C ha"^"-1","yr" ^"-1",")")), limits=c(Cymin, Cymax)+y3start1, breaks=c(round(y3start1, 1)-0.5,  round(y3start1, 3),  round(y3start1, 1)+0.3,  round(y3start1, 1)+0.6), labels=c(round(y3start1, 1)-0.5, round(y3start1, 1), round(y3start1, 1)+0.3, round(y3start1, 1)+0.6)) + scale_x_continuous(element_blank(), breaks=c(-0.5, 0, 0.5)) + theme(legend.title=element_blank(), legend.key=element_blank()) +scale_fill_manual( name=NULL, breaks=c("1", "3"), label=element_blank(), values=c(col4))  + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) #+coord_cartesian(ylim = c(0.7, 2.65))#
#Stem density plot#
limits <- aes(ymax=(TPA+errorTPA)+TPA3start1, ymin=(TPA-errorTPA)+TPA3start1)#
limitssap <- aes(ymax=(sapTPA/sapscale +errorsapTPA/sapscale)+TPA3start1, ymin=(sapTPA/sapscale-errorsapTPA/sapscale)+TPA3start1)#
P2 <- ggplot(F7, aes(x=x3, y=(TPA+TPA3start1), fill=as.factor(col3)))  +geom_hline(y=TPA3start1, linetype=3) +geom_vline(linetype=3) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(-0.07, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_text(angle = 90, hjust = 0.5, size=11, colour="black"))+ theme(axis.text.x = element_blank())+ scale_y_continuous(name=expression(paste(Delta, " Stem density (ha"^"-1","yr" ^"-1",")")), limits=c(TPAymin, TPAymax)+TPA3start1, breaks=c(2.0, TPA3start1, 8.0), labels=c(expression("2.0"[" (-35)"]), expression("4.6" [" (43)"]), expression("8.0" [" (145)"]))) + scale_x_continuous(element_blank(), breaks=c(-0.5, 0, 0.5)) +scale_fill_manual(values=c(col4), breaks=NULL) +geom_errorbar(limitssap, width=0.05, colour="grey70") + geom_point(aes( y=(sapTPA/sapscale)+ TPA3start1, col=as.factor(col3)), size=2, pch=8)+ theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.1),plot.margin=unit(c(0,0,0.65,0), "cm")) +scale_colour_manual(values=c(col9), name=NULL, breaks=c("2"), label=c("(Saplings)"))+ geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) #+coord_cartesian(ylim = c(1.8, 9.85))#
#Radial growth plot#
limits <- aes(ymax=(x5+errorx5)+x5start1, ymin=(x5-errorx5)+x5start1)#
limits2 <- aes(ymax=(x5grow+errorx5grow)+ x5start1, ymin=(x5grow-errorx5grow)+ x5start1)#
P3 <- ggplot(F7, aes(x=x3, y=(x5+x5start1), fill=as.factor(col3)))  +geom_hline(y=x5start1, linetype=3) +geom_vline(linetype=3)  +theme(axis.line = element_line( size = 0.35)) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm"))  + theme(axis.ticks.margin = unit(-0.03, "cm")) + theme(axis.ticks.length = unit(0.1, "cm"))  +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_text(angle = 90, hjust = 0.5, size=11, colour="black"))+ theme(axis.text.x = element_text( hjust = 0.5, size=11, colour="black")) + scale_y_continuous(name=expression(paste(Delta, " Mean diameter (cm yr" ^"-1",")")), limits=c(DIAmin, DIAmax)+x5start1, breaks=c(0.07, x5start1, 0.17), labels=c(expression("0.07"[" (0.55)"]), expression("0.11" [" (0.63)"]), expression("0.17" [" (0.75)"]))) + scale_x_continuous(name=expression(paste("   Precipitation JJA 5-yr\nmean anomaly (mm day"^"-1",")")), breaks=c(-0.5, 0, 0.5)) +scale_fill_manual(values=c(col4), breaks=NULL)  + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.55,0.1), plot.margin=unit(c(-0.5,0,0.34, -0.04), "cm")) + theme(axis.title.x = element_text(vjust=-0.85)) + geom_errorbar(limits2, width=0.05, colour="grey70") + geom_point(aes(y=(x5grow+ x5start1), col=as.factor(col3)), size=2.5, pch=17)  +scale_colour_manual(values=c(col4), name=NULL, breaks=c("2"), label=expression(paste("(Radial growth mm yr" ^"-1",")"))) + geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21)#
#set up 5-year TEMP plots using ggplot#
F8 <- subset(F6, v==2) # & x3>0.2)#
v=2#
col8 <- c(ct,"grey35", wt)#
#NPP plot#
limits <- aes(ymax=(y3+errory3)+y3start1, ymin=(y3-errory3+y3start1))#
T1 <- ggplot(F8, aes(x=x3, y=(y3+y3start1), fill=as.factor(col3)))  +geom_hline(y=y3start1, linetype=3)+geom_vline(linetype=3)+ geom_errorbar(limits, width=0.01, colour="grey50")+ geom_point(colour="grey25", size=2.5, pch=21) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_blank())+ theme(axis.text.x =element_blank())+ scale_y_continuous(element_blank(), limits=c(Cymin, Cymax)+y3start1,  breaks=c(round(y3start1, 1)-0.5,  round(y3start1, 3),  round(y3start1, 1)+0.3,  round(y3start1, 1)+0.6)) + scale_x_continuous(element_blank(),breaks=c(-0.5, 0, 0.5, 1.0))+ theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.9),plot.margin=unit(c(0,0,0,0), "cm")) +scale_fill_manual( name=NULL, breaks=c("1", "3"), label=c("Cool 5-yr period", "Warm 5-yr period"), values=c(col8)) +theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) #+coord_cartesian(ylim = c(0.7, 2.65))#
#
#stem density#
limits <- aes(ymax=(TPA+errorTPA)+TPA3start1, ymin=(TPA-errorTPA)+TPA3start1)#
T2 <- ggplot(F8,aes(x=x3, y=(TPA+TPA3start1), fill=as.factor(col3)))    +geom_hline(y=TPA3start1, linetype=3) +geom_vline(linetype=3) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm"))  + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_blank())+ theme(axis.text.x =(element_blank())) + scale_y_continuous(element_blank(), limits=c(TPAymin, TPAymax)+TPA3start1, breaks=c(2.0, TPA3start1, 8.0)) + scale_x_continuous(element_blank())  +scale_fill_manual(values=c(col8), breaks=NULL) +geom_errorbar(limitssap, width=0.05, colour="grey70") + geom_point(aes( y=(sapTPA/sapscale)+ TPA3start1, col=as.factor(col3)), size=2, pch=8) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.1),plot.margin=unit(c(0,0,0.5,0), "cm")) +scale_colour_manual(values=c(col8), name=NULL, breaks=c("2"), label=c("(Saplings)"))+ geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) #+coord_cartesian(ylim = c(1.8, 9.85)) #
#
#Radial growth plot#
limits <- aes(ymax=(x5+errorx5)+x5start1, ymin=(x5-errorx5)+x5start1)#
limits2 <- aes(ymax=(x5grow+errorx5grow)+ x5start1, ymin=(x5grow-errorx5grow)+ x5start1)#
T3 <- ggplot(F8, aes(x=x3, y=(x5+x5start1), fill=as.factor(col3))) + geom_hline(y=x5start1, linetype=3) +geom_vline(linetype=3)  +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y =element_blank())+ theme(axis.text.x = element_text( hjust = 0.5, size=11, colour="black")) + scale_y_continuous(element_blank(), limits=c(DIAmin, DIAmax)+x5start1,breaks=c(0.02, x5start1, 0.2)) + scale_x_continuous(name=("Temperature JJA 5-yr\nmean anomaly (C)")) +scale_fill_manual(values=c(col8), breaks=NULL) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.43,0.1), plot.margin=unit(c(-0.5,0,0, 0), "cm"))+ geom_errorbar(limits2, width=0.05, colour="grey70") + geom_point(aes( y=(x5grow+ x5start1), col=as.factor(col3)), size=2.5, pch=17)  +scale_colour_manual(values=c(col8), name=NULL, breaks=c("2"), label=expression(paste("(Radial growth mm yr" ^"-1",")"))) + geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) #
#set up 1-year soil moist. plots using ggplot#
F9 <- subset(F6, v==3)#
v=3#
col9 <- c(de,"grey35", pe)#
limits <- aes(ymax=(y3+errory3)+y3start1, ymin=(y3-errory3+y3start1))#
#NPP plot#
R1 <- ggplot(F9,aes(x=x3, y=(y3+y3start1), fill=as.factor(col3))) +geom_hline(y=y3start1, linetype=3) +geom_vline(linetype=3)+ geom_errorbar(limits, width=0.01, colour="grey50")+ geom_point(colour="grey25", size=2.5, pch=21) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_blank())+ theme(axis.text.x =(element_blank())) + scale_y_continuous(element_blank(), limits=c(Cymin, Cymax)+y3start1,  breaks=c(round(y3start1, 1)-0.5,  round(y3start1, 3),  round(y3start1, 1)+0.3,  round(y3start1, 1)+0.6)) + scale_x_continuous(element_blank()) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.9),plot.margin=unit(c(0,0,0,0), "cm")) +scale_fill_manual( name=NULL, breaks=c("1", "3"), label=c( "Dry summer", "Wet summer"), values=c(col9)) +theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) #+coord_cartesian(ylim = c(0.7, 2.65))#
#
#Stem density plot#
limits <- aes(ymax=(TPA+errorTPA)+TPA3start1, ymin=(TPA-errorTPA)+TPA3start1)#
limitssap <- aes(ymax=(sapTPA/sapscale +errorsapTPA/sapscale)+TPA3start1, ymin=(sapTPA/sapscale-errorsapTPA/sapscale)+TPA3start1)#
R2 <- ggplot(F9,aes(x=x3, y=(TPA+TPA3start1), fill=as.factor(col3)))   +geom_hline(y=TPA3start1, linetype=3) +geom_vline(linetype=3)+theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_blank())+ theme(axis.text.x =(element_blank()))+ scale_y_continuous(element_blank(), limits=c(TPAymin, TPAymax)+TPA3start1, breaks=c(2.0, TPA3start1, 8.0)) + scale_x_continuous(element_blank()) +scale_fill_manual(values=c(col9), breaks=NULL) +geom_errorbar(limitssap, width=0.10, colour="grey70") + geom_point(aes( y=(sapTPA/sapscale)+ TPA3start1, col=as.factor(col3)), size=2, pch=8) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.1), plot.margin=unit(c(0,0,0.5,0), "cm")) +scale_colour_manual(values=c(col9), name=NULL, breaks=c("2"), label=c("(Saplings)"))+ geom_errorbar(limits, width= 0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) #+coord_cartesian(ylim = c(1.8, 9.85))#
#
#radial growth plot#
limits <- aes(ymax=(x5+errorx5)+x5start1, ymin=(x5-errorx5)+x5start1)#
limits2 <- aes(ymax=(x5grow+errorx5grow)+ x5start1, ymin=(x5grow-errorx5grow)+ x5start1)#
R3 <- ggplot(F9, aes(x=x3, y=(x5+x5start1), fill=as.factor(col3)))   +geom_hline(y=x5start1, linetype=3) +geom_vline(linetype=3) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_blank())+ theme(axis.text.x = element_text( hjust = 0.5, size=11, colour="black")) + scale_y_continuous(element_blank(), limits=c(DIAmin, DIAmax)+x5start1, breaks=c(0.02, x5start1, 0.2)) + scale_x_continuous(name=("Soil moisture JJA 1-yr\nmin/max (z-score)"), breaks=c(-2.0, -1.0, 0.0, 1.0), labels=c("-2.0", "-1.0", "0.0", "1.0")) +scale_fill_manual(values=c(col9), breaks=NULL) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.53,0.1), plot.margin=unit(c(-0.5,0,0, 0), "cm")) + geom_errorbar(limits2, width=0.10, colour="grey70")+ geom_point(aes( y=(x5grow+ x5start1), col=as.factor(col3)), size=2.5, pch=17)  +scale_colour_manual(values=c(col9), name=NULL, breaks=c("2"), label=expression(paste("(Radial growth mm yr" ^"-1",")"))) + geom_errorbar(limits, width=0.01, colour="grey50")  + geom_point(colour="grey25", size=2.5, pch=21)#
#
#set up plot window and plot all together#
dev.new(width=6.75, height=8) #8#
grid.arrange(P1,T1,R1,P2,T2,R2,P3,T3,R3, ncol=3)#
#grid.text(0.045, unit(0.575,"npc") - unit(1,"line"), rot=90, label="(30)", gp=gpar(cex=0.75))#
print(F7)#
#######END Fig 3.  Climate Correlations
SDx3<-sd(F2$TEMP5growchg, na.rm=TRUE)
SDx3
vari <- c("PREC5growchg", "TEMP5growchg", "SWpluvial5chg", "SWdrought5chg") #"PREC5growchg", "TEMP5growchg"#
vari1 <- subset(F2, select=c(PREC5growchg, TEMP5growchg, SWpluvial5chg, SWdrought5chg))#
vari2 <- c("5-yr JJA precip. anomaly (mm/day)", "5-yr JJA temp. anomaly (C)", "1-yr JJA soil moist. anomaly (z-score)", "1-yr JJA soil moist. anomaly (z-score)")#
#
seq1<- c(0.2, 0.4, NA, 0.66, 0.86, 0.96, 1, NA)#
#
if(coniferous==1 | deciduous==1){seq1<- c(0.2, 0.4, NA, 0.5, 0.75, 0.9, 1)} #broader quantiles for smaller dataset#
#(100-(c(0.2, 0.4, NA, 0.5, 0.75, 0.9, 1)*100))/2#
#
qt1a <- c(quantile(F2$PREC5growchg[F2$PREC5growchg<0],(1-rev(seq1))))  #
 qt2a <- c(quantile(F2$PREC5growchg[F2$PREC5growchg>0], seq1)) #
 qt1b <- c(quantile(F2$TEMP5growchg[F2$TEMP5growchg<0],(1-rev(seq1)))) #
 qt2b <- c(quantile(F2$TEMP5growchg[F2$TEMP5growchg>0], seq1))  #
 qt3 <- c(quantile(F2$SWdrought5chg[F2$SWdrought5chg<0],(1-rev(seq1)))) #
 qt4 <- c(quantile(F2$SWpluvial5chg[F2$SWpluvial5chg>0], seq1)) #
int <- 1#
F5 <- NULL#
for(v in 1:3)#
{#
	if(v==1){#
		 qt1<- qt1a#
		 qt2<- qt2a#
	}#
	if(v==2){#
		 qt1<- qt1b#
		 qt2<- qt2b#
	}#
F4<-foreach(c = 1:16, .combine=rbind) %dopar%#
{#
	if(c<=8 & v<3)#
	{#
		f22 <- subset(F2, get(vari[v])>= qt2[c] & get(vari[v])<=  qt2[c+int]) 		#
		f23 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- vari[v]#
		col3=ifelse(qt2[c]>= 0.2, 3, 2)#
		qta <- qt2[c]#
		qtb <- qt2[c+int]#
		}#
	if(c>8 & v<3)#
	{ #
		d=c-8#
		f22 <- subset(F2, get(vari[v])<= qt1[d] & get(vari[v])>= qt1[d-int]) #		#
		f23 <- subset(F2, get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- vari[v]#
		col3=ifelse(qt1[d]<= -0.1, 1, 2)#
		qtb <- qt1[d]#
		qta <- qt1[d-int]#
	}#
	if(c<=8 & v==3)#
	{#
			f22 <- subset(F2, get(vari[v])>= qt4[c] & get(vari[v])<= qt4[c+int] & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.15, na.rm=TRUE)) #exclude droughts#
			f23 <- subset(F2, get(vari[v])<= quantile(vari1[[v]], 0.7, na.rm=TRUE) & get(vari[v])>= quantile(vari1[[v]], 0.3, na.rm=TRUE) & SWdrought5chg>= quantile(F2$SWdrought5chg, 0.15, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- "Wet summer"#
		col3=ifelse(qt4[c]>=0.2, 3, 2)#
		qta <- qt4[c]#
		qtb <- qt4[c+int]#
	}#
	if(c>8 & v==3)#
	{ #
		d=c-8#
		f22 <- subset(F2, get(vari[v+1])< qt3[d] & get(vari[v+1])>= qt3[d-int] & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.85, na.rm=TRUE)) #exclude wet summers  #
		f23 <- subset(F2, get(vari[v+1])<= quantile(vari1[[v+1]], 0.7, na.rm=TRUE) & get(vari[v+1])>= quantile(vari1[[v+1]], 0.3, na.rm=TRUE) & SWpluvial5chg<= quantile(F2$SWpluvial5chg, 0.85, na.rm=TRUE), select=c(PLT_CN)) #
		ccond <- "Dry summer"#
		col3=ifelse(qt3[d]<= -0.2, 1, 2)#
		qtb <- qt3[d]#
		qta <- qt3[d-int]#
	}#
f22$nsamp <- (ave(f22$PREV_DIAmean>0,f22$LATLON, FUN=function(x) sum(x, na.rm=TRUE)))/f22$nsampTOT #sample proportion of each grid cell #
#print(c(table(f22$nsamp<0.75), col3))#
#
#f22$col3 <- col3#
PLT_CNsamp1 <- f23$PLT_CN   #
#
f24 <- subset(f22, !duplicated(LATLON), select=c(LATLON, nsamp))#
#
F33 <- subset(F2, LATLON %in% (f22$LATLON)) # not neccesaary bc weighting will eliminate latlons not in f22!#
F33 <- merge(F33, f24, all.x=T, by="LATLON")#
F33 <- subset(F33, PLT_CN %in% (PLT_CNsamp1)) # not neccesaary bc weighting will eliminate latlons not in f22!#
#
F33$aPREVSTOCKDIAbin <- floor(F33$PREV_STOCKINGmid/10)*10000+(floor(F33$PREV_DIAmean/2)*2)#
F33$n1 <- 1#
F33$aPREVSTOCKDIAbinlength <- ave(F33$n1, F33$aPREVSTOCKDIAbin, FUN=function(x) sum(x, na.rm=TRUE))#
F33$nbin <- ave(F33$nsamp, F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)) #average AC proportion in stock/dia bins#
#
F33 <- subset(F33, aPREVSTOCKDIAbinlength> 10) #Null model needs at least 10 comparison plots at each diameter/stocking bin#
#
##Carbon Model#
c6 <- (((F33$carbon1sum-F33$PREVcarbon1sum)* 0.00112085116 )/F33$REMPER)#
F33$avgCchg <- (ave(c6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)))/F33$nbin #multiply by AC proportion divided by mean proportion in each stocking/dia bin#
#
##Carbon Model 5 inch and greater trees#
c5 <- (((F33$carbon5sum-F33$PREVcarbon5sum)* 0.00112085116 )/F33$REMPER)#
F33$avgC5chg <- (ave(c5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)))/F33$nbin#
#
##radial growth  #
rx5 <- (F33$DIAchgmean/F33$REMPER) ###
F33$avgx5 <- ave(rx5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##radial growth#
rx5grow <- (F33$DIAgrowmean/F33$REMPER)/2 ## convert from diameter to radial growth#
F33$avgx5grow <- ave(rx5grow*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##Mortality diameter mean#
mortrx5 <- F33$mortDIAmean  ##
F33$avgmortx5 <- ave(mortrx5*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##Density Model#
y6 <- (F33$TPAsum-F33$PREV_TPAsum)/F33$REMPER  ##
F33$avgTPAchg <- ave(y6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
#
##SAPLINGS Density Model#
sap6 <- ((F33$TPAsum05/0.404686)-(F33$PREVTPAsum05/0.404686))/F33$REMPER  # convert to hectares#
F33$sapavgTPAchg <- ave(sap6*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin#
##SAPLINGS mortality /recruitment#
F33$sapavgMORT <- ave(F33$sapMortsum*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin #sapling mortality per plot#
F33$sapavgRECR <- ave(F33$sapRecruitsum*F33$nsamp,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE))/F33$nbin #sapling plot recuritment#
#
#SISP ratio#
F33$sp1<- mean(F33$SISPchg, na.rm=T) #F33$nsamp#
F33$spavgchg <- ave(F33$sp1,F33$aPREVSTOCKDIAbin, FUN=function(x) mean(x, na.rm=TRUE)) #/F33$nbin#
#
#Merge null and conditional model data#
F34 <- subset(F33, !duplicated(aPREVSTOCKDIAbin), select=c(aPREVSTOCKDIAbin, avgCchg, avgx5, avgx5grow, avgTPAchg, sapavgTPAchg, avgC5chg, avgmortx5, sapavgMORT, sapavgRECR))#
f22$aPREVSTOCKDIAbin <- floor(f22$PREV_STOCKINGmid/10)*10000+(floor(f22$PREV_DIAmean/2)*2)#
f22 <- merge(f22, F34, by="aPREVSTOCKDIAbin") #, all.x=T#
#carbon 1 and 5 inch#
c8 <- (((f22$carbon1sum-f22$PREVcarbon1sum)* 0.00112085116 )/f22$REMPER)#
f22$xcarbon <- (c8-f22$avgCchg)#
c55 <- (((f22$carbon5sum-f22$PREVcarbon5sum)* 0.00112085116 )/f22$REMPER)#
f22$xcarbon5 <- ((c55)-f22$avgC5chg)#
##mean diameter change  #
x8 <- (f22$DIAchgmean/f22$REMPER)  # #
f22$x5 <-  (x8-f22$avgx5)#
#
##radial growth  #
x8grow <- (f22$DIAgrowmean/f22$REMPER)/2  # convert from diameter to radial growth#
f22$x5grow <-  (x8grow-f22$avgx5grow)#
#
##mortality size#
mortx8 <- f22$mortDIAmean ##
f22$mortx5 <-  (mortx8-f22$avgmortx5)#
#
##Density Model#
TPA <- (f22$TPAsum-f22$PREV_TPAsum)/f22$REMPER  ##
f22$TPAchg <-  (TPA-f22$avgTPAchg)#
#
##SAPLING Density Model#
sapTPA <- ((f22$TPAsum05/0.404686)-(f22$PREVTPAsum05/0.404686))/f22$REMPER  ##
f22$sapTPAchg <-  (sapTPA-f22$sapavgTPAchg)#
f22$sapMORTchg <- (f22$sapMortsum/f22$sapavgMORT)*100 #sapling mortaltiy percent difference from null#
f22$sapRECRchg <- (f22$sapRecruitsum/f22$sapavgRECR)*100 #sapling recruitment percent difference from null#
#
##SISP ratio#
# sp22 <- mean(f22$SISPchg-f22$sapavgTPAchg, na.rm=T)#
#
#calculate mean condition for x-axis based on v loop#
if(length(f22$xcarbon)>= 10)#
{#
if(v==2)#
{#
	x3 <- mean(f22$TEMP5growchg, na.rm=TRUE)#
	minx3<-min(f22$TEMP5growchg, na.rm=TRUE)#
	maxx3<-max(f22$TEMP5growchg, na.rm=TRUE)#
	SDx3<-sd(f22$TEMP5growchg, na.rm=TRUE)#
}#
if(v==1)#
{#
	x3 <- mean(f22$PREC5growchg, na.rm=TRUE)#
	minx3<-min(f22$PREC5growchg, na.rm=TRUE)#
	maxx3<-max(f22$PREC5growchg, na.rm=TRUE)#
	SDx3<-sd(f22$PREC5growchg, na.rm=TRUE)#
#
}#
if(v==3)#
{#
	x3 <- ifelse(c<=8,mean(f22$SWpluvial5chg, na.rm=TRUE), mean(f22$SWdrought5chg, na.rm=TRUE))#
	minx3 <- ifelse(c<=8,min(f22$SWpluvial5chg, na.rm=TRUE), min(f22$SWdrought5chg, na.rm=TRUE))#
	maxx3 <- ifelse(c<=8,max(f22$SWpluvial5chg, na.rm=TRUE), max(f22$SWdrought5chg, na.rm=TRUE))#
	SDx3 <- ifelse(c<=8,sd(f22$SWpluvial5chg, na.rm=TRUE), sd(f22$SWdrought5chg, na.rm=TRUE))#
}#
#
#calculate y-axis variables#
#USxcarbon<- mean(F2$carbon1sum-F2$PREVcarbon1sum)* 0.00112085116/mean(F2$REMPER)#
y3 <- mean(f22$xcarbon, na.rm=TRUE) #
y3pctdif<-(mean(f22$xcarbon, na.rm=TRUE)/mean(f22$avgCchg, na.rm=TRUE))*100   ##
#y3<- (y3pctdif/100)*USxcarbon#
y3start <- mean(f22$avgCchg, na.rm=T) #null model zero line for plotting#
#
y5 <- mean(f22$xcarbon5, na.rm=TRUE)  ##
y5pctdif<-(mean(f22$xcarbon5, na.rm=TRUE)/mean(f22$avgC5chg, na.rm=TRUE))*100   ##
y5start <- mean(f22$avgC5chg, na.rm=T) #null model zero line for plotting#
#USTPA3 <- mean((F2$TPAsum-F2$PREV_TPAsum)/F2$REMPER)#
TPA3pctdif<-(mean(f22$TPAchg, na.rm=TRUE)/mean(f22$avgTPAchg, na.rm=TRUE))*100   ##
TPA3 <-mean(f22$TPAchg, na.rm=TRUE)#
TPA3start <- mean(f22$avgTPAchg, na.rm=T) #null model zero line for plotting#
#
#USsapTPA3 <- mean(((F2$TPAsum05/0.404686)-(F2$PREVTPAsum05/0.404686))/F2$REMPER)#
sapTPA3pctdif <- (mean(f22$sapTPAchg, na.rm=TRUE)/ mean(f22$sapavgTPAchg, na.rm=T))*100##
sapTPA3 <- mean(f22$sapTPAchg, na.rm=TRUE) ##
sapTPA3start <- mean(f22$sapavgTPAchg, na.rm=T)#
#
#USx5 <- mean(F2$DIAchgmean/F2$REMPER, na.rm=T)/2  # convert from diameter to radial growth#
x5pctdif <- (mean(f22$x5, na.rm=TRUE)/mean(f22$avgx5, na.rm=T))*100  ##
x5<- mean(f22$x5, na.rm=TRUE)#
x5start <- mean(f22$avgx5, na.rm=T)#
#
#USx5grow <- mean(F2$DIAgrowmean/F2$REMPER, na.rm=T)/2  # convert from diameter to radial growth#
x5growpctdif <- (mean(f22$x5grow, na.rm=TRUE)/mean(f22$avgx5grow, na.rm=T))*100  ##
x5grow <- mean(f22$x5grow, na.rm=TRUE) ##
x5growstart <- mean(f22$avgx5grow, na.rm=T)#
#
mortx5 <- mean(f22$mortx5, na.rm=TRUE) ##
mortx5start <-   mean(mortx8, na.rm=T)#
sapMORT <- mean(f22$sapMORTchg, na.rm=T)#
sapRECR <- mean(f22$sapRECRchg, na.rm=T)#
#
#calc y-axis error#
R2 <- 10 #repetitions set to 10 for faster looping#
enderror <- boot(f22$xcarbon, meanFunc, R=R2)#
enderrory3 <- sqrt(var(enderror$t))*1.96#
enderror5 <- boot(f22$xcarbon5, meanFunc, R= R2)#
enderrory5 <- sqrt(var(enderror5$t))*1.96#
enderror2 <- boot(f22$TPAchg, meanFunc, R= R2)#
enderrorTPA <- sqrt(var(enderror2$t))*1.96#
enderrorsap <- boot(f22$sapTPAchg, meanFunc, R= R2)#
enderrorsapTPA <- sqrt(var(enderrorsap$t))*1.96#
enderror4 <- boot(f22$x5, meanFunc, R= R2)#
enderrorx5 <- sqrt(var(enderror4$t))*1.96#
enderrorx5grow4 <- boot(f22$x5grow, meanFunc, R= R2)#
enderrorx5grow <- sqrt(var(enderrorx5grow4$t))*1.96#
enderrorsapMORT <- std.error(f22$sapMORTchg, na.rm=T)#
enderrorsapRECR <- std.error(f22$sapRECRchg, na.rm=T)#
#
# enderrorsp2error <- boot((f22$SISPchg-f22$sapavgTPAchg), meanFunc, R= R2)#
# enderrorsp22error <- sqrt(var(enderrorsp2error$t))*1.96#
#
n <- length(f22$xcarbon) #conditional model n#
nnull <- length(F33$avgx5) #null model n#
#print(c(n, ccond, c, nnull))#
#
f23 <- c(x3, y3, y5, TPA3, sapTPA3, x5, x5grow, enderrory3, enderrory5, enderrorTPA, enderrorsapTPA, enderrorx5, enderrorx5grow, n, v, col3, y3start, y5start, TPA3start, x5start, sapTPA3start, x5growstart, sapMORT, sapRECR, enderrorsapMORT, enderrorsapRECR, y3pctdif, y5pctdif, TPA3pctdif, sapTPA3pctdif ,x5pctdif, x5growpctdif, minx3, maxx3, SDx3)#
#
}#
}#
F5 <- rbind(F5,F4)#
}#
#
F6 <- as.data.table(F5)#
setnames(F6, c("x3","y3","y5", "TPA","sapTPA", "x5", "x5grow", "errory3","errory5", "errorTPA","errorsapTPA", "errorx5","errorx5grow", "n", "v", "col3", "y3start", "y5start", "TPA3start", "x5start", "sapTPA3start", "x5growstart", "sapMORTpct", "sapRECRpct", "enderrorsapMORT", "enderrorsapRECR", "y3pctdif", "y5pctdif", "TPA3pctdif", "sapTPA3pctdif", "x5pctdif", "x5growpctdif", "minx3", "maxx3", "SDx3"))#
F6 <- subset(F6, n>100)
y3start1 <- mean(F6$y3start)#
y5start1 <- mean(F6$y5start)#
TPA3start1 <-mean(F6$TPA3start) #mean(F2$TPAchg) ##
sapTPA3start1 <-mean(F6$sapTPA3start)#
x5start1 <- mean((F6$x5start))#
x5growstart1 <- mean((F6$x5growstart)*5) #*10)#
#
#convert difference btw ac and nonac to relative difference from average#
F6$y3<- y3start1*(F6$y3pctdif/100)#
F6$TPA<- TPA3start1*(F6$TPA3pctdif/100)#
F6$sapTPA<- sapTPA3start1*(F6$sapTPA3pctdif/100)#
F6$x5<- x5start1*(F6$x5pctdif/100)#
F6$x5grow<- x5growstart1*(F6$x5growpctdif/100)#
#
F6$errory3<-(((y3start1-F6$y3start)/F6$y3start)*F6$errory3)+F6$errory3#
F6$errory5<-(((y5start1-F6$y5start)/F6$y5start)*F6$errory5)+F6$errory5#
F6$errorTPA<-(((TPA3start1-F6$TPA3start)/F6$TPA3start)*F6$errorTPA)+F6$errorTPA#
F6$errorsapTPA<-(((sapTPA3start1-F6$sapTPA3start)/F6$sapTPA3start)*F6$errorsapTPA)+F6$errorsapTPA#
F6$errorx5<-(((x5start1-F6$x5start)/F6$x5start)*F6$errorx5)+F6$errorx5#
F6$errorx5grow<-((((mean(F6$x5growstart)-F6$x5growstart)/F6$x5growstart)*F6$errorx5grow)+F6$errorx5grow)*5#
#convert radial growth from cm to mm#
#F6$x5grow <- F6$x5grow*5 #*10#
#F6$errorx5grow <- F6$errorx5grow*5 #*10#
#convert to percent difference#
F6$sapMORTpct <-  (F6$sapMORTpct-100)#
F6$sapRECRpct <-  (F6$sapRECRpct-100)#
F6$sapCpct <-  ((F6$y3-F6$y5)/F6$y3)*100#
#calc plot y-scales#
sapscale  <-  30 #mean(F6$sapTPA3start)/mean(F6$TPA3start) #
Cymax  <-  max(F6$y3+F6$errory3)#
Cymin  <-  min(F6$y3-F6$errory3)#
#TPAymax <- max(F6$sapTPA/sapscale+F6$errorsapTPA/sapscale, na.rm=T)#
TPAymax1 <- (max(F6$sapTPA+F6$errorsapTPA))/sapscale#
TPAymax2 <- (max(F6$TPA+F6$errorTPA))#
TPAymax <- max(TPAymax1, TPAymax2)#
TPAymin2 <- (min(F6$TPA-F6$errorTPA))#
TPAymin1 <- (min(F6$sapTPA-F6$errorsapTPA))/sapscale#
TPAymin <- min(TPAymin1, TPAymin2)#
DIAmax1 <- (max(F6$x5grow+F6$errorx5grow))#
DIAmin1 <- (min(F6$x5grow-F6$errorx5grow))#
DIAmax2 <- max(F6$x5+F6$errorx5)#
DIAmin2 <- min(F6$x5-F6$errorx5)#
DIAmin <- min(DIAmin2, DIAmin1)#
DIAmax <- max(DIAmax2, DIAmax1)#
sapmax <- max(F6$sapMORTpct+F6$enderrorsapMORT)#
sapmin <- min(F6$sapMORTpct-F6$enderrorsapMORT)#
#
#plot only sapling data that is significantly different with scaling than larger trees. #
#F6$sapTPA <- ifelse(((F6$sapTPA/sapscale)>(F6$TPA+F6$errorTPA))|((F6$sapTPA/sapscale)<(F6$TPA-F6$errorTPA)), F6$sapTPA, NA)#
#F6$x5grow <- ifelse(((F6$x5grow-F6$errorx5grow)>(F6$x5))|((F6$x5grow)<(F6$x5-F6$errorx5)), F6$x5grow, NA)#
#
#set up 5-year precip plots using ggplot#
F7 <- subset(F6, v==1)#
F7$sapTPA <- ifelse(F7$col3==2,NA, F7$sapTPA)#
v=1#
col4 <- c(dt,"grey35", pt)#
#
#NPP plot#
#limitssap <- aes(ymax=(y5/y5scale +errorsapTPA/sapscale)+TPA3start1, ymin=(sapTPA/sapscale-errorsapTPA/sapscale)+TPA3start1)#
limits <- aes(ymax=(y3+errory3)+y3start1, ymin=(y3-errory3+y3start1))#
P1 <- ggplot(F7, aes(x=x3, y=(y3+y3start1), fill=as.factor(col3)))  +geom_hline(y=y3start1, linetype=3) +geom_vline(linetype=3)+ geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21)  + theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_text(angle = 90, hjust = 0.5, size=11, colour="black"))+ theme(axis.text.x = element_blank())+ scale_y_continuous(name=expression(paste(" Productivity (Mg C ha"^"-1","yr" ^"-1",")")), limits=c(Cymin, Cymax)+y3start1, breaks=c(round(y3start1, 1)-0.5,  round(y3start1, 3),  round(y3start1, 1)+0.3,  round(y3start1, 1)+0.6), labels=c(round(y3start1, 1)-0.5, round(y3start1, 1), round(y3start1, 1)+0.3, round(y3start1, 1)+0.6)) + scale_x_continuous(element_blank(), breaks=c(-0.5, 0, 0.5)) + theme(legend.title=element_blank(), legend.key=element_blank()) +scale_fill_manual( name=NULL, breaks=c("1", "3"), label=element_blank(), values=c(col4))  + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) #+coord_cartesian(ylim = c(0.7, 2.65))#
#Stem density plot#
limits <- aes(ymax=(TPA+errorTPA)+TPA3start1, ymin=(TPA-errorTPA)+TPA3start1)#
limitssap <- aes(ymax=(sapTPA/sapscale +errorsapTPA/sapscale)+TPA3start1, ymin=(sapTPA/sapscale-errorsapTPA/sapscale)+TPA3start1)#
P2 <- ggplot(F7, aes(x=x3, y=(TPA+TPA3start1), fill=as.factor(col3)))  +geom_hline(y=TPA3start1, linetype=3) +geom_vline(linetype=3) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(-0.07, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_text(angle = 90, hjust = 0.5, size=11, colour="black"))+ theme(axis.text.x = element_blank())+ scale_y_continuous(name=expression(paste(Delta, " Stem density (ha"^"-1","yr" ^"-1",")")), limits=c(TPAymin, TPAymax)+TPA3start1, breaks=c(2.0, TPA3start1, 8.0), labels=c(expression("2.0"[" (-35)"]), expression("4.6" [" (43)"]), expression("8.0" [" (145)"]))) + scale_x_continuous(element_blank(), breaks=c(-0.5, 0, 0.5)) +scale_fill_manual(values=c(col4), breaks=NULL) +geom_errorbar(limitssap, width=0.05, colour="grey70") + geom_point(aes( y=(sapTPA/sapscale)+ TPA3start1, col=as.factor(col3)), size=2, pch=8)+ theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.1),plot.margin=unit(c(0,0,0.65,0), "cm")) +scale_colour_manual(values=c(col9), name=NULL, breaks=c("2"), label=c("(Saplings)"))+ geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) #+coord_cartesian(ylim = c(1.8, 9.85))#
#Radial growth plot#
limits <- aes(ymax=(x5+errorx5)+x5start1, ymin=(x5-errorx5)+x5start1)#
limits2 <- aes(ymax=(x5grow+errorx5grow)+ x5start1, ymin=(x5grow-errorx5grow)+ x5start1)#
P3 <- ggplot(F7, aes(x=x3, y=(x5+x5start1), fill=as.factor(col3)))  +geom_hline(y=x5start1, linetype=3) +geom_vline(linetype=3)  +theme(axis.line = element_line( size = 0.35)) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm"))  + theme(axis.ticks.margin = unit(-0.03, "cm")) + theme(axis.ticks.length = unit(0.1, "cm"))  +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_text(angle = 90, hjust = 0.5, size=11, colour="black"))+ theme(axis.text.x = element_text( hjust = 0.5, size=11, colour="black")) + scale_y_continuous(name=expression(paste(Delta, " Mean diameter (cm yr" ^"-1",")")), limits=c(DIAmin, DIAmax)+x5start1, breaks=c(0.07, x5start1, 0.17), labels=c(expression("0.07"[" (0.55)"]), expression("0.11" [" (0.63)"]), expression("0.17" [" (0.75)"]))) + scale_x_continuous(name=expression(paste("   Precipitation JJA 5-yr\nmean anomaly (mm day"^"-1",")")), breaks=c(-0.5, 0, 0.5)) +scale_fill_manual(values=c(col4), breaks=NULL)  + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.55,0.1), plot.margin=unit(c(-0.5,0,0.34, -0.04), "cm")) + theme(axis.title.x = element_text(vjust=-0.85)) + geom_errorbar(limits2, width=0.05, colour="grey70") + geom_point(aes(y=(x5grow+ x5start1), col=as.factor(col3)), size=2.5, pch=17)  +scale_colour_manual(values=c(col4), name=NULL, breaks=c("2"), label=expression(paste("(Radial growth mm yr" ^"-1",")"))) + geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21)#
#set up 5-year TEMP plots using ggplot#
F8 <- subset(F6, v==2) # & x3>0.2)#
v=2#
col8 <- c(ct,"grey35", wt)#
#NPP plot#
limits <- aes(ymax=(y3+errory3)+y3start1, ymin=(y3-errory3+y3start1))#
T1 <- ggplot(F8, aes(x=x3, y=(y3+y3start1), fill=as.factor(col3)))  +geom_hline(y=y3start1, linetype=3)+geom_vline(linetype=3)+ geom_errorbar(limits, width=0.01, colour="grey50")+ geom_point(colour="grey25", size=2.5, pch=21) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_blank())+ theme(axis.text.x =element_blank())+ scale_y_continuous(element_blank(), limits=c(Cymin, Cymax)+y3start1,  breaks=c(round(y3start1, 1)-0.5,  round(y3start1, 3),  round(y3start1, 1)+0.3,  round(y3start1, 1)+0.6)) + scale_x_continuous(element_blank(),breaks=c(-0.5, 0, 0.5, 1.0))+ theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.9),plot.margin=unit(c(0,0,0,0), "cm")) +scale_fill_manual( name=NULL, breaks=c("1", "3"), label=c("Cool 5-yr period", "Warm 5-yr period"), values=c(col8)) +theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) #+coord_cartesian(ylim = c(0.7, 2.65))#
#
#stem density#
limits <- aes(ymax=(TPA+errorTPA)+TPA3start1, ymin=(TPA-errorTPA)+TPA3start1)#
T2 <- ggplot(F8,aes(x=x3, y=(TPA+TPA3start1), fill=as.factor(col3)))    +geom_hline(y=TPA3start1, linetype=3) +geom_vline(linetype=3) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm"))  + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_blank())+ theme(axis.text.x =(element_blank())) + scale_y_continuous(element_blank(), limits=c(TPAymin, TPAymax)+TPA3start1, breaks=c(2.0, TPA3start1, 8.0)) + scale_x_continuous(element_blank())  +scale_fill_manual(values=c(col8), breaks=NULL) +geom_errorbar(limitssap, width=0.05, colour="grey70") + geom_point(aes( y=(sapTPA/sapscale)+ TPA3start1, col=as.factor(col3)), size=2, pch=8) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.1),plot.margin=unit(c(0,0,0.5,0), "cm")) +scale_colour_manual(values=c(col8), name=NULL, breaks=c("2"), label=c("(Saplings)"))+ geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) #+coord_cartesian(ylim = c(1.8, 9.85)) #
#
#Radial growth plot#
limits <- aes(ymax=(x5+errorx5)+x5start1, ymin=(x5-errorx5)+x5start1)#
limits2 <- aes(ymax=(x5grow+errorx5grow)+ x5start1, ymin=(x5grow-errorx5grow)+ x5start1)#
T3 <- ggplot(F8, aes(x=x3, y=(x5+x5start1), fill=as.factor(col3))) + geom_hline(y=x5start1, linetype=3) +geom_vline(linetype=3)  +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y =element_blank())+ theme(axis.text.x = element_text( hjust = 0.5, size=11, colour="black")) + scale_y_continuous(element_blank(), limits=c(DIAmin, DIAmax)+x5start1,breaks=c(0.02, x5start1, 0.2)) + scale_x_continuous(name=("Temperature JJA 5-yr\nmean anomaly (C)")) +scale_fill_manual(values=c(col8), breaks=NULL) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.43,0.1), plot.margin=unit(c(-0.5,0,0, 0), "cm"))+ geom_errorbar(limits2, width=0.05, colour="grey70") + geom_point(aes( y=(x5grow+ x5start1), col=as.factor(col3)), size=2.5, pch=17)  +scale_colour_manual(values=c(col8), name=NULL, breaks=c("2"), label=expression(paste("(Radial growth mm yr" ^"-1",")"))) + geom_errorbar(limits, width=0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) #
#set up 1-year soil moist. plots using ggplot#
F9 <- subset(F6, v==3)#
v=3#
col9 <- c(de,"grey35", pe)#
limits <- aes(ymax=(y3+errory3)+y3start1, ymin=(y3-errory3+y3start1))#
#NPP plot#
R1 <- ggplot(F9,aes(x=x3, y=(y3+y3start1), fill=as.factor(col3))) +geom_hline(y=y3start1, linetype=3) +geom_vline(linetype=3)+ geom_errorbar(limits, width=0.01, colour="grey50")+ geom_point(colour="grey25", size=2.5, pch=21) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_blank())+ theme(axis.text.x =(element_blank())) + scale_y_continuous(element_blank(), limits=c(Cymin, Cymax)+y3start1,  breaks=c(round(y3start1, 1)-0.5,  round(y3start1, 3),  round(y3start1, 1)+0.3,  round(y3start1, 1)+0.6)) + scale_x_continuous(element_blank()) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.9),plot.margin=unit(c(0,0,0,0), "cm")) +scale_fill_manual( name=NULL, breaks=c("1", "3"), label=c( "Dry summer", "Wet summer"), values=c(col9)) +theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) #+coord_cartesian(ylim = c(0.7, 2.65))#
#
#Stem density plot#
limits <- aes(ymax=(TPA+errorTPA)+TPA3start1, ymin=(TPA-errorTPA)+TPA3start1)#
limitssap <- aes(ymax=(sapTPA/sapscale +errorsapTPA/sapscale)+TPA3start1, ymin=(sapTPA/sapscale-errorsapTPA/sapscale)+TPA3start1)#
R2 <- ggplot(F9,aes(x=x3, y=(TPA+TPA3start1), fill=as.factor(col3)))   +geom_hline(y=TPA3start1, linetype=3) +geom_vline(linetype=3)+theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA)) + theme(axis.text.y = element_blank())+ theme(axis.text.x =(element_blank()))+ scale_y_continuous(element_blank(), limits=c(TPAymin, TPAymax)+TPA3start1, breaks=c(2.0, TPA3start1, 8.0)) + scale_x_continuous(element_blank()) +scale_fill_manual(values=c(col9), breaks=NULL) +geom_errorbar(limitssap, width=0.10, colour="grey70") + geom_point(aes( y=(sapTPA/sapscale)+ TPA3start1, col=as.factor(col3)), size=2, pch=8) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.5,0.1), plot.margin=unit(c(0,0,0.5,0), "cm")) +scale_colour_manual(values=c(col9), name=NULL, breaks=c("2"), label=c("(Saplings)"))+ geom_errorbar(limits, width= 0.01, colour="grey50") + geom_point(colour="grey25", size=2.5, pch=21) #+coord_cartesian(ylim = c(1.8, 9.85))#
#
#radial growth plot#
limits <- aes(ymax=(x5+errorx5)+x5start1, ymin=(x5-errorx5)+x5start1)#
limits2 <- aes(ymax=(x5grow+errorx5grow)+ x5start1, ymin=(x5grow-errorx5grow)+ x5start1)#
R3 <- ggplot(F9, aes(x=x3, y=(x5+x5start1), fill=as.factor(col3)))   +geom_hline(y=x5start1, linetype=3) +geom_vline(linetype=3) +theme(axis.line = element_line( size = 0.35)) + theme(axis.ticks.margin = unit(0.06, "cm")) + theme(axis.ticks.length = unit(0.1, "cm")) + theme(legend.position = "none",plot.margin=unit(c(0,0,0,0), "cm")) +theme( panel.background = element_rect(fill=NA),  panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.background = element_rect(fill=NA))  + theme(axis.text.y = element_blank())+ theme(axis.text.x = element_text( hjust = 0.5, size=11, colour="black")) + scale_y_continuous(element_blank(), limits=c(DIAmin, DIAmax)+x5start1, breaks=c(0.02, x5start1, 0.2)) + scale_x_continuous(name=("Soil moisture JJA 1-yr\nmin/max (z-score)"), breaks=c(-2.0, -1.0, 0.0, 1.0), labels=c("-2.0", "-1.0", "0.0", "1.0")) +scale_fill_manual(values=c(col9), breaks=NULL) + theme(legend.title=element_blank(), legend.key=element_rect(fill="white"), legend.key.size = unit(0.35, "cm"), legend.position = c(0.53,0.1), plot.margin=unit(c(-0.5,0,0, 0), "cm")) + geom_errorbar(limits2, width=0.10, colour="grey70")+ geom_point(aes( y=(x5grow+ x5start1), col=as.factor(col3)), size=2.5, pch=17)  +scale_colour_manual(values=c(col9), name=NULL, breaks=c("2"), label=expression(paste("(Radial growth mm yr" ^"-1",")"))) + geom_errorbar(limits, width=0.01, colour="grey50")  + geom_point(colour="grey25", size=2.5, pch=21)#
#
#set up plot window and plot all together#
dev.new(width=6.75, height=8) #8#
grid.arrange(P1,T1,R1,P2,T2,R2,P3,T3,R3, ncol=3)#
#grid.text(0.045, unit(0.575,"npc") - unit(1,"line"), rot=90, label="(30)", gp=gpar(cex=0.75))#
print(F7)#
#######END Fig 3.  Climate Correlations
